/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 14.0, "minX": 0.0, "maxY": 419.0, "series": [{"data": [[0.0, 14.0], [0.1, 15.0], [0.2, 15.0], [0.3, 15.0], [0.4, 15.0], [0.5, 15.0], [0.6, 15.0], [0.7, 16.0], [0.8, 16.0], [0.9, 16.0], [1.0, 16.0], [1.1, 16.0], [1.2, 16.0], [1.3, 16.0], [1.4, 16.0], [1.5, 16.0], [1.6, 17.0], [1.7, 17.0], [1.8, 17.0], [1.9, 17.0], [2.0, 17.0], [2.1, 17.0], [2.2, 17.0], [2.3, 17.0], [2.4, 17.0], [2.5, 17.0], [2.6, 17.0], [2.7, 18.0], [2.8, 18.0], [2.9, 18.0], [3.0, 18.0], [3.1, 18.0], [3.2, 18.0], [3.3, 18.0], [3.4, 18.0], [3.5, 18.0], [3.6, 18.0], [3.7, 19.0], [3.8, 19.0], [3.9, 19.0], [4.0, 19.0], [4.1, 19.0], [4.2, 19.0], [4.3, 19.0], [4.4, 19.0], [4.5, 19.0], [4.6, 19.0], [4.7, 19.0], [4.8, 19.0], [4.9, 20.0], [5.0, 20.0], [5.1, 20.0], [5.2, 20.0], [5.3, 20.0], [5.4, 20.0], [5.5, 20.0], [5.6, 20.0], [5.7, 20.0], [5.8, 20.0], [5.9, 20.0], [6.0, 21.0], [6.1, 21.0], [6.2, 21.0], [6.3, 21.0], [6.4, 21.0], [6.5, 21.0], [6.6, 21.0], [6.7, 21.0], [6.8, 21.0], [6.9, 21.0], [7.0, 22.0], [7.1, 22.0], [7.2, 22.0], [7.3, 22.0], [7.4, 22.0], [7.5, 22.0], [7.6, 22.0], [7.7, 22.0], [7.8, 22.0], [7.9, 23.0], [8.0, 23.0], [8.1, 23.0], [8.2, 23.0], [8.3, 23.0], [8.4, 23.0], [8.5, 23.0], [8.6, 23.0], [8.7, 23.0], [8.8, 23.0], [8.9, 24.0], [9.0, 24.0], [9.1, 24.0], [9.2, 24.0], [9.3, 24.0], [9.4, 24.0], [9.5, 24.0], [9.6, 24.0], [9.7, 24.0], [9.8, 25.0], [9.9, 25.0], [10.0, 25.0], [10.1, 25.0], [10.2, 25.0], [10.3, 25.0], [10.4, 25.0], [10.5, 25.0], [10.6, 26.0], [10.7, 26.0], [10.8, 26.0], [10.9, 26.0], [11.0, 26.0], [11.1, 26.0], [11.2, 26.0], [11.3, 26.0], [11.4, 27.0], [11.5, 27.0], [11.6, 27.0], [11.7, 27.0], [11.8, 27.0], [11.9, 27.0], [12.0, 27.0], [12.1, 27.0], [12.2, 27.0], [12.3, 27.0], [12.4, 28.0], [12.5, 28.0], [12.6, 28.0], [12.7, 28.0], [12.8, 28.0], [12.9, 28.0], [13.0, 28.0], [13.1, 28.0], [13.2, 28.0], [13.3, 29.0], [13.4, 29.0], [13.5, 29.0], [13.6, 29.0], [13.7, 29.0], [13.8, 29.0], [13.9, 29.0], [14.0, 29.0], [14.1, 29.0], [14.2, 29.0], [14.3, 30.0], [14.4, 30.0], [14.5, 30.0], [14.6, 30.0], [14.7, 30.0], [14.8, 30.0], [14.9, 30.0], [15.0, 30.0], [15.1, 31.0], [15.2, 31.0], [15.3, 31.0], [15.4, 31.0], [15.5, 31.0], [15.6, 31.0], [15.7, 31.0], [15.8, 31.0], [15.9, 31.0], [16.0, 31.0], [16.1, 32.0], [16.2, 32.0], [16.3, 32.0], [16.4, 32.0], [16.5, 32.0], [16.6, 32.0], [16.7, 32.0], [16.8, 32.0], [16.9, 32.0], [17.0, 33.0], [17.1, 33.0], [17.2, 33.0], [17.3, 33.0], [17.4, 33.0], [17.5, 33.0], [17.6, 33.0], [17.7, 33.0], [17.8, 33.0], [17.9, 34.0], [18.0, 34.0], [18.1, 34.0], [18.2, 34.0], [18.3, 34.0], [18.4, 34.0], [18.5, 34.0], [18.6, 34.0], [18.7, 34.0], [18.8, 35.0], [18.9, 35.0], [19.0, 35.0], [19.1, 35.0], [19.2, 35.0], [19.3, 35.0], [19.4, 35.0], [19.5, 35.0], [19.6, 35.0], [19.7, 35.0], [19.8, 36.0], [19.9, 36.0], [20.0, 36.0], [20.1, 36.0], [20.2, 36.0], [20.3, 36.0], [20.4, 36.0], [20.5, 36.0], [20.6, 36.0], [20.7, 36.0], [20.8, 37.0], [20.9, 37.0], [21.0, 37.0], [21.1, 37.0], [21.2, 37.0], [21.3, 37.0], [21.4, 37.0], [21.5, 37.0], [21.6, 37.0], [21.7, 38.0], [21.8, 38.0], [21.9, 38.0], [22.0, 38.0], [22.1, 38.0], [22.2, 38.0], [22.3, 38.0], [22.4, 38.0], [22.5, 38.0], [22.6, 38.0], [22.7, 39.0], [22.8, 39.0], [22.9, 39.0], [23.0, 39.0], [23.1, 39.0], [23.2, 39.0], [23.3, 39.0], [23.4, 39.0], [23.5, 39.0], [23.6, 40.0], [23.7, 40.0], [23.8, 40.0], [23.9, 40.0], [24.0, 40.0], [24.1, 40.0], [24.2, 40.0], [24.3, 40.0], [24.4, 40.0], [24.5, 41.0], [24.6, 41.0], [24.7, 41.0], [24.8, 41.0], [24.9, 41.0], [25.0, 41.0], [25.1, 41.0], [25.2, 41.0], [25.3, 41.0], [25.4, 42.0], [25.5, 42.0], [25.6, 42.0], [25.7, 42.0], [25.8, 42.0], [25.9, 42.0], [26.0, 42.0], [26.1, 42.0], [26.2, 43.0], [26.3, 43.0], [26.4, 43.0], [26.5, 43.0], [26.6, 43.0], [26.7, 43.0], [26.8, 43.0], [26.9, 43.0], [27.0, 43.0], [27.1, 44.0], [27.2, 44.0], [27.3, 44.0], [27.4, 44.0], [27.5, 44.0], [27.6, 44.0], [27.7, 44.0], [27.8, 44.0], [27.9, 44.0], [28.0, 45.0], [28.1, 45.0], [28.2, 45.0], [28.3, 45.0], [28.4, 45.0], [28.5, 45.0], [28.6, 45.0], [28.7, 45.0], [28.8, 46.0], [28.9, 46.0], [29.0, 46.0], [29.1, 46.0], [29.2, 46.0], [29.3, 46.0], [29.4, 46.0], [29.5, 46.0], [29.6, 46.0], [29.7, 47.0], [29.8, 47.0], [29.9, 47.0], [30.0, 47.0], [30.1, 47.0], [30.2, 47.0], [30.3, 47.0], [30.4, 47.0], [30.5, 48.0], [30.6, 48.0], [30.7, 48.0], [30.8, 48.0], [30.9, 48.0], [31.0, 48.0], [31.1, 48.0], [31.2, 48.0], [31.3, 49.0], [31.4, 49.0], [31.5, 49.0], [31.6, 49.0], [31.7, 49.0], [31.8, 49.0], [31.9, 50.0], [32.0, 50.0], [32.1, 50.0], [32.2, 50.0], [32.3, 50.0], [32.4, 51.0], [32.5, 51.0], [32.6, 51.0], [32.7, 51.0], [32.8, 51.0], [32.9, 51.0], [33.0, 52.0], [33.1, 52.0], [33.2, 52.0], [33.3, 52.0], [33.4, 52.0], [33.5, 52.0], [33.6, 52.0], [33.7, 53.0], [33.8, 53.0], [33.9, 53.0], [34.0, 53.0], [34.1, 53.0], [34.2, 53.0], [34.3, 53.0], [34.4, 54.0], [34.5, 54.0], [34.6, 54.0], [34.7, 54.0], [34.8, 54.0], [34.9, 54.0], [35.0, 54.0], [35.1, 54.0], [35.2, 55.0], [35.3, 55.0], [35.4, 55.0], [35.5, 55.0], [35.6, 55.0], [35.7, 55.0], [35.8, 55.0], [35.9, 55.0], [36.0, 55.0], [36.1, 56.0], [36.2, 56.0], [36.3, 56.0], [36.4, 56.0], [36.5, 56.0], [36.6, 56.0], [36.7, 56.0], [36.8, 56.0], [36.9, 56.0], [37.0, 56.0], [37.1, 57.0], [37.2, 57.0], [37.3, 57.0], [37.4, 57.0], [37.5, 57.0], [37.6, 57.0], [37.7, 57.0], [37.8, 57.0], [37.9, 57.0], [38.0, 57.0], [38.1, 58.0], [38.2, 58.0], [38.3, 58.0], [38.4, 58.0], [38.5, 58.0], [38.6, 58.0], [38.7, 58.0], [38.8, 58.0], [38.9, 58.0], [39.0, 59.0], [39.1, 59.0], [39.2, 59.0], [39.3, 59.0], [39.4, 59.0], [39.5, 59.0], [39.6, 59.0], [39.7, 59.0], [39.8, 59.0], [39.9, 60.0], [40.0, 60.0], [40.1, 60.0], [40.2, 60.0], [40.3, 60.0], [40.4, 60.0], [40.5, 60.0], [40.6, 60.0], [40.7, 61.0], [40.8, 61.0], [40.9, 61.0], [41.0, 61.0], [41.1, 61.0], [41.2, 61.0], [41.3, 61.0], [41.4, 61.0], [41.5, 62.0], [41.6, 62.0], [41.7, 62.0], [41.8, 62.0], [41.9, 62.0], [42.0, 62.0], [42.1, 62.0], [42.2, 62.0], [42.3, 63.0], [42.4, 63.0], [42.5, 63.0], [42.6, 63.0], [42.7, 63.0], [42.8, 63.0], [42.9, 63.0], [43.0, 63.0], [43.1, 63.0], [43.2, 63.0], [43.3, 64.0], [43.4, 64.0], [43.5, 64.0], [43.6, 64.0], [43.7, 64.0], [43.8, 64.0], [43.9, 64.0], [44.0, 64.0], [44.1, 65.0], [44.2, 65.0], [44.3, 65.0], [44.4, 65.0], [44.5, 65.0], [44.6, 66.0], [44.7, 66.0], [44.8, 66.0], [44.9, 66.0], [45.0, 67.0], [45.1, 67.0], [45.2, 67.0], [45.3, 67.0], [45.4, 67.0], [45.5, 67.0], [45.6, 67.0], [45.7, 67.0], [45.8, 68.0], [45.9, 68.0], [46.0, 68.0], [46.1, 68.0], [46.2, 68.0], [46.3, 68.0], [46.4, 68.0], [46.5, 68.0], [46.6, 69.0], [46.7, 69.0], [46.8, 69.0], [46.9, 69.0], [47.0, 69.0], [47.1, 69.0], [47.2, 69.0], [47.3, 69.0], [47.4, 69.0], [47.5, 70.0], [47.6, 70.0], [47.7, 70.0], [47.8, 70.0], [47.9, 70.0], [48.0, 70.0], [48.1, 70.0], [48.2, 70.0], [48.3, 71.0], [48.4, 71.0], [48.5, 71.0], [48.6, 71.0], [48.7, 71.0], [48.8, 71.0], [48.9, 71.0], [49.0, 71.0], [49.1, 71.0], [49.2, 71.0], [49.3, 72.0], [49.4, 72.0], [49.5, 72.0], [49.6, 72.0], [49.7, 72.0], [49.8, 72.0], [49.9, 72.0], [50.0, 72.0], [50.1, 73.0], [50.2, 73.0], [50.3, 73.0], [50.4, 73.0], [50.5, 74.0], [50.6, 74.0], [50.7, 74.0], [50.8, 74.0], [50.9, 75.0], [51.0, 75.0], [51.1, 75.0], [51.2, 76.0], [51.3, 76.0], [51.4, 76.0], [51.5, 76.0], [51.6, 77.0], [51.7, 77.0], [51.8, 78.0], [51.9, 78.0], [52.0, 79.0], [52.1, 79.0], [52.2, 79.0], [52.3, 80.0], [52.4, 80.0], [52.5, 81.0], [52.6, 81.0], [52.7, 82.0], [52.8, 82.0], [52.9, 82.0], [53.0, 83.0], [53.1, 83.0], [53.2, 83.0], [53.3, 83.0], [53.4, 84.0], [53.5, 84.0], [53.6, 84.0], [53.7, 84.0], [53.8, 85.0], [53.9, 85.0], [54.0, 85.0], [54.1, 85.0], [54.2, 85.0], [54.3, 85.0], [54.4, 86.0], [54.5, 86.0], [54.6, 86.0], [54.7, 86.0], [54.8, 86.0], [54.9, 86.0], [55.0, 87.0], [55.1, 87.0], [55.2, 87.0], [55.3, 87.0], [55.4, 87.0], [55.5, 88.0], [55.6, 88.0], [55.7, 88.0], [55.8, 89.0], [55.9, 89.0], [56.0, 89.0], [56.1, 90.0], [56.2, 90.0], [56.3, 90.0], [56.4, 91.0], [56.5, 91.0], [56.6, 91.0], [56.7, 91.0], [56.8, 92.0], [56.9, 92.0], [57.0, 92.0], [57.1, 93.0], [57.2, 93.0], [57.3, 93.0], [57.4, 94.0], [57.5, 94.0], [57.6, 94.0], [57.7, 95.0], [57.8, 95.0], [57.9, 95.0], [58.0, 96.0], [58.1, 96.0], [58.2, 96.0], [58.3, 97.0], [58.4, 97.0], [58.5, 98.0], [58.6, 98.0], [58.7, 99.0], [58.8, 99.0], [58.9, 99.0], [59.0, 100.0], [59.1, 100.0], [59.2, 101.0], [59.3, 101.0], [59.4, 102.0], [59.5, 102.0], [59.6, 103.0], [59.7, 103.0], [59.8, 104.0], [59.9, 105.0], [60.0, 105.0], [60.1, 106.0], [60.2, 107.0], [60.3, 107.0], [60.4, 108.0], [60.5, 109.0], [60.6, 109.0], [60.7, 110.0], [60.8, 111.0], [60.9, 112.0], [61.0, 113.0], [61.1, 113.0], [61.2, 114.0], [61.3, 115.0], [61.4, 116.0], [61.5, 118.0], [61.6, 119.0], [61.7, 120.0], [61.8, 121.0], [61.9, 122.0], [62.0, 124.0], [62.1, 125.0], [62.2, 126.0], [62.3, 127.0], [62.4, 127.0], [62.5, 128.0], [62.6, 129.0], [62.7, 129.0], [62.8, 130.0], [62.9, 131.0], [63.0, 132.0], [63.1, 132.0], [63.2, 133.0], [63.3, 134.0], [63.4, 134.0], [63.5, 135.0], [63.6, 136.0], [63.7, 136.0], [63.8, 137.0], [63.9, 137.0], [64.0, 138.0], [64.1, 139.0], [64.2, 139.0], [64.3, 139.0], [64.4, 140.0], [64.5, 140.0], [64.6, 141.0], [64.7, 141.0], [64.8, 142.0], [64.9, 143.0], [65.0, 143.0], [65.1, 144.0], [65.2, 144.0], [65.3, 145.0], [65.4, 145.0], [65.5, 146.0], [65.6, 146.0], [65.7, 147.0], [65.8, 147.0], [65.9, 148.0], [66.0, 148.0], [66.1, 149.0], [66.2, 149.0], [66.3, 150.0], [66.4, 150.0], [66.5, 151.0], [66.6, 151.0], [66.7, 151.0], [66.8, 152.0], [66.9, 152.0], [67.0, 153.0], [67.1, 153.0], [67.2, 153.0], [67.3, 154.0], [67.4, 154.0], [67.5, 155.0], [67.6, 155.0], [67.7, 155.0], [67.8, 156.0], [67.9, 156.0], [68.0, 156.0], [68.1, 157.0], [68.2, 157.0], [68.3, 157.0], [68.4, 158.0], [68.5, 158.0], [68.6, 158.0], [68.7, 159.0], [68.8, 159.0], [68.9, 159.0], [69.0, 159.0], [69.1, 160.0], [69.2, 160.0], [69.3, 160.0], [69.4, 161.0], [69.5, 161.0], [69.6, 161.0], [69.7, 161.0], [69.8, 162.0], [69.9, 162.0], [70.0, 162.0], [70.1, 163.0], [70.2, 163.0], [70.3, 163.0], [70.4, 163.0], [70.5, 164.0], [70.6, 164.0], [70.7, 164.0], [70.8, 164.0], [70.9, 165.0], [71.0, 165.0], [71.1, 165.0], [71.2, 165.0], [71.3, 166.0], [71.4, 166.0], [71.5, 166.0], [71.6, 167.0], [71.7, 167.0], [71.8, 167.0], [71.9, 167.0], [72.0, 168.0], [72.1, 168.0], [72.2, 168.0], [72.3, 168.0], [72.4, 169.0], [72.5, 169.0], [72.6, 169.0], [72.7, 170.0], [72.8, 170.0], [72.9, 170.0], [73.0, 171.0], [73.1, 171.0], [73.2, 171.0], [73.3, 172.0], [73.4, 172.0], [73.5, 172.0], [73.6, 172.0], [73.7, 173.0], [73.8, 173.0], [73.9, 173.0], [74.0, 174.0], [74.1, 174.0], [74.2, 174.0], [74.3, 175.0], [74.4, 175.0], [74.5, 175.0], [74.6, 176.0], [74.7, 176.0], [74.8, 176.0], [74.9, 176.0], [75.0, 177.0], [75.1, 177.0], [75.2, 177.0], [75.3, 178.0], [75.4, 178.0], [75.5, 178.0], [75.6, 178.0], [75.7, 179.0], [75.8, 179.0], [75.9, 179.0], [76.0, 180.0], [76.1, 180.0], [76.2, 180.0], [76.3, 180.0], [76.4, 181.0], [76.5, 181.0], [76.6, 181.0], [76.7, 182.0], [76.8, 182.0], [76.9, 182.0], [77.0, 183.0], [77.1, 183.0], [77.2, 183.0], [77.3, 184.0], [77.4, 184.0], [77.5, 184.0], [77.6, 185.0], [77.7, 185.0], [77.8, 185.0], [77.9, 186.0], [78.0, 186.0], [78.1, 186.0], [78.2, 186.0], [78.3, 187.0], [78.4, 187.0], [78.5, 187.0], [78.6, 187.0], [78.7, 188.0], [78.8, 188.0], [78.9, 188.0], [79.0, 189.0], [79.1, 189.0], [79.2, 189.0], [79.3, 190.0], [79.4, 190.0], [79.5, 190.0], [79.6, 191.0], [79.7, 191.0], [79.8, 191.0], [79.9, 192.0], [80.0, 192.0], [80.1, 192.0], [80.2, 192.0], [80.3, 193.0], [80.4, 193.0], [80.5, 193.0], [80.6, 194.0], [80.7, 194.0], [80.8, 194.0], [80.9, 194.0], [81.0, 195.0], [81.1, 195.0], [81.2, 195.0], [81.3, 195.0], [81.4, 196.0], [81.5, 196.0], [81.6, 196.0], [81.7, 197.0], [81.8, 197.0], [81.9, 197.0], [82.0, 198.0], [82.1, 198.0], [82.2, 198.0], [82.3, 199.0], [82.4, 199.0], [82.5, 199.0], [82.6, 200.0], [82.7, 200.0], [82.8, 200.0], [82.9, 201.0], [83.0, 201.0], [83.1, 201.0], [83.2, 202.0], [83.3, 202.0], [83.4, 202.0], [83.5, 203.0], [83.6, 203.0], [83.7, 203.0], [83.8, 203.0], [83.9, 204.0], [84.0, 204.0], [84.1, 204.0], [84.2, 204.0], [84.3, 205.0], [84.4, 205.0], [84.5, 205.0], [84.6, 205.0], [84.7, 206.0], [84.8, 206.0], [84.9, 206.0], [85.0, 207.0], [85.1, 207.0], [85.2, 207.0], [85.3, 207.0], [85.4, 208.0], [85.5, 208.0], [85.6, 209.0], [85.7, 209.0], [85.8, 209.0], [85.9, 210.0], [86.0, 210.0], [86.1, 210.0], [86.2, 211.0], [86.3, 211.0], [86.4, 211.0], [86.5, 212.0], [86.6, 212.0], [86.7, 212.0], [86.8, 212.0], [86.9, 213.0], [87.0, 213.0], [87.1, 213.0], [87.2, 214.0], [87.3, 214.0], [87.4, 214.0], [87.5, 214.0], [87.6, 215.0], [87.7, 215.0], [87.8, 215.0], [87.9, 215.0], [88.0, 216.0], [88.1, 216.0], [88.2, 216.0], [88.3, 216.0], [88.4, 217.0], [88.5, 217.0], [88.6, 217.0], [88.7, 218.0], [88.8, 218.0], [88.9, 218.0], [89.0, 218.0], [89.1, 219.0], [89.2, 219.0], [89.3, 219.0], [89.4, 219.0], [89.5, 220.0], [89.6, 220.0], [89.7, 220.0], [89.8, 221.0], [89.9, 221.0], [90.0, 221.0], [90.1, 221.0], [90.2, 222.0], [90.3, 222.0], [90.4, 222.0], [90.5, 222.0], [90.6, 223.0], [90.7, 223.0], [90.8, 223.0], [90.9, 224.0], [91.0, 224.0], [91.1, 224.0], [91.2, 224.0], [91.3, 225.0], [91.4, 225.0], [91.5, 225.0], [91.6, 225.0], [91.7, 225.0], [91.8, 226.0], [91.9, 226.0], [92.0, 226.0], [92.1, 227.0], [92.2, 227.0], [92.3, 227.0], [92.4, 227.0], [92.5, 228.0], [92.6, 228.0], [92.7, 228.0], [92.8, 228.0], [92.9, 229.0], [93.0, 229.0], [93.1, 229.0], [93.2, 229.0], [93.3, 230.0], [93.4, 230.0], [93.5, 230.0], [93.6, 231.0], [93.7, 231.0], [93.8, 231.0], [93.9, 232.0], [94.0, 232.0], [94.1, 232.0], [94.2, 232.0], [94.3, 233.0], [94.4, 233.0], [94.5, 233.0], [94.6, 234.0], [94.7, 234.0], [94.8, 234.0], [94.9, 235.0], [95.0, 235.0], [95.1, 235.0], [95.2, 236.0], [95.3, 236.0], [95.4, 236.0], [95.5, 236.0], [95.6, 237.0], [95.7, 237.0], [95.8, 238.0], [95.9, 238.0], [96.0, 238.0], [96.1, 239.0], [96.2, 239.0], [96.3, 239.0], [96.4, 240.0], [96.5, 240.0], [96.6, 241.0], [96.7, 241.0], [96.8, 242.0], [96.9, 242.0], [97.0, 242.0], [97.1, 243.0], [97.2, 244.0], [97.3, 244.0], [97.4, 245.0], [97.5, 246.0], [97.6, 246.0], [97.7, 247.0], [97.8, 248.0], [97.9, 249.0], [98.0, 249.0], [98.1, 250.0], [98.2, 251.0], [98.3, 252.0], [98.4, 252.0], [98.5, 253.0], [98.6, 254.0], [98.7, 255.0], [98.8, 255.0], [98.9, 256.0], [99.0, 258.0], [99.1, 259.0], [99.2, 260.0], [99.3, 261.0], [99.4, 262.0], [99.5, 264.0], [99.6, 265.0], [99.7, 268.0], [99.8, 272.0], [99.9, 281.0], [100.0, 419.0]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 58912.0, "series": [{"data": [[0.0, 58912.0], [300.0, 22.0], [100.0, 23600.0], [200.0, 17465.0], [400.0, 1.0]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 100000.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 100000.0, "series": [{"data": [[0.0, 100000.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 4.9E-324, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.74808518E12, "maxY": 1.0, "series": [{"data": [[1.74808518E12, 1.0], [1.74808536E12, 1.0], [1.74809424E12, 1.0], [1.74808638E12, 1.0], [1.7480886E12, 1.0], [1.74809082E12, 1.0], [1.74809304E12, 1.0], [1.74809526E12, 1.0], [1.74808656E12, 1.0], [1.7480898E12, 1.0], [1.74808758E12, 1.0], [1.74809202E12, 1.0], [1.74809406E12, 1.0], [1.748091E12, 1.0], [1.74808554E12, 1.0], [1.74808776E12, 1.0], [1.74809442E12, 1.0], [1.74808878E12, 1.0], [1.74809322E12, 1.0], [1.74809544E12, 1.0], [1.74808674E12, 1.0], [1.74808896E12, 1.0], [1.74808998E12, 1.0], [1.7480922E12, 1.0], [1.74809148E12, 1.0], [1.7480949E12, 1.0], [1.74808602E12, 1.0], [1.74808824E12, 1.0], [1.74808926E12, 1.0], [1.74808722E12, 1.0], [1.74809268E12, 1.0], [1.74809046E12, 1.0], [1.7480937E12, 1.0], [1.74808944E12, 1.0], [1.74808842E12, 1.0], [1.74809166E12, 1.0], [1.74809064E12, 1.0], [1.74809508E12, 1.0], [1.7480862E12, 1.0], [1.74809286E12, 1.0], [1.74809388E12, 1.0], [1.7480874E12, 1.0], [1.74808962E12, 1.0], [1.74809184E12, 1.0], [1.74808728E12, 1.0], [1.74809052E12, 1.0], [1.74809394E12, 1.0], [1.74809274E12, 1.0], [1.7480883E12, 1.0], [1.74809496E12, 1.0], [1.74808848E12, 1.0], [1.74808626E12, 1.0], [1.7480895E12, 1.0], [1.74809172E12, 1.0], [1.74808746E12, 1.0], [1.7480907E12, 1.0], [1.74809292E12, 1.0], [1.74808968E12, 1.0], [1.74809412E12, 1.0], [1.74808866E12, 1.0], [1.7480919E12, 1.0], [1.74809514E12, 1.0], [1.74808644E12, 1.0], [1.74809088E12, 1.0], [1.74808794E12, 1.0], [1.74809118E12, 1.0], [1.7480934E12, 1.0], [1.74808572E12, 1.0], [1.74809016E12, 1.0], [1.7480946E12, 1.0], [1.74808914E12, 1.0], [1.74809238E12, 1.0], [1.74808524E12, 1.0], [1.74809562E12, 1.0], [1.74808692E12, 1.0], [1.74809136E12, 1.0], [1.74809358E12, 1.0], [1.74809376E12, 1.0], [1.74809478E12, 1.0], [1.7480859E12, 1.0], [1.74808812E12, 1.0], [1.74809034E12, 1.0], [1.74809256E12, 1.0], [1.74808608E12, 1.0], [1.74809154E12, 1.0], [1.7480871E12, 1.0], [1.74808932E12, 1.0], [1.7480958E12, 1.0], [1.74809586E12, 1.0], [1.74808698E12, 1.0], [1.7480892E12, 1.0], [1.74809022E12, 1.0], [1.74809244E12, 1.0], [1.74809364E12, 1.0], [1.74808818E12, 1.0], [1.74809142E12, 1.0], [1.74809466E12, 1.0], [1.74808596E12, 1.0], [1.7480904E12, 1.0], [1.74808938E12, 1.0], [1.74809262E12, 1.0], [1.74808716E12, 1.0], [1.7480916E12, 1.0], [1.74809382E12, 1.0], [1.74809484E12, 1.0], [1.74809058E12, 1.0], [1.7480928E12, 1.0], [1.74808614E12, 1.0], [1.74808836E12, 1.0], [1.7480931E12, 1.0], [1.74808542E12, 1.0], [1.74808764E12, 1.0], [1.74808986E12, 1.0], [1.74809208E12, 1.0], [1.7480943E12, 1.0], [1.7480856E12, 1.0], [1.74809532E12, 1.0], [1.74808662E12, 1.0], [1.74808884E12, 1.0], [1.74809106E12, 1.0], [1.74809328E12, 1.0], [1.7480868E12, 1.0], [1.74809568E12, 1.0], [1.74809004E12, 1.0], [1.74808782E12, 1.0], [1.74809226E12, 1.0], [1.74809124E12, 1.0], [1.74809448E12, 1.0], [1.74808578E12, 1.0], [1.748088E12, 1.0], [1.74808902E12, 1.0], [1.74809346E12, 1.0], [1.7480955E12, 1.0], [1.7480889E12, 1.0], [1.74809214E12, 1.0], [1.74808668E12, 1.0], [1.74809112E12, 1.0], [1.74809556E12, 1.0], [1.74809334E12, 1.0], [1.74809436E12, 1.0], [1.74808566E12, 1.0], [1.74808788E12, 1.0], [1.7480901E12, 1.0], [1.74809232E12, 1.0], [1.74809472E12, 1.0], [1.74808584E12, 1.0], [1.74809574E12, 1.0], [1.74808686E12, 1.0], [1.74808908E12, 1.0], [1.7480913E12, 1.0], [1.74809352E12, 1.0], [1.74808704E12, 1.0], [1.74809028E12, 1.0], [1.74808806E12, 1.0], [1.7480925E12, 1.0], [1.74809454E12, 1.0], [1.74808632E12, 1.0], [1.7480952E12, 1.0], [1.74808956E12, 1.0], [1.74809178E12, 1.0], [1.74808734E12, 1.0], [1.74809076E12, 1.0], [1.748094E12, 1.0], [1.7480853E12, 1.0], [1.74808752E12, 1.0], [1.74808854E12, 1.0], [1.74809298E12, 1.0], [1.74809502E12, 1.0], [1.7480865E12, 1.0], [1.74808872E12, 1.0], [1.74809538E12, 1.0], [1.74808974E12, 1.0], [1.74809196E12, 1.0], [1.7480877E12, 1.0], [1.74809094E12, 1.0], [1.74809316E12, 1.0], [1.74809418E12, 1.0], [1.74808548E12, 1.0], [1.74808992E12, 1.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74809586E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 106.02807000000034, "minX": 1.0, "maxY": 106.02807000000034, "series": [{"data": [[1.0, 106.02807000000034]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}, {"data": [[1.0, 106.02807000000034]], "isOverall": false, "label": "HTTP Request - enroll-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1145.5, "minX": 1.74808518E12, "maxY": 82312.43333333333, "series": [{"data": [[1.74808518E12, 57009.25], [1.74808536E12, 62956.583333333336], [1.74809424E12, 6799.15], [1.74808638E12, 28929.933333333334], [1.7480886E12, 11571.116666666667], [1.74809082E12, 8612.566666666668], [1.74809304E12, 7465.983333333334], [1.74809526E12, 6372.566666666667], [1.74808656E12, 26904.616666666665], [1.7480898E12, 9679.883333333333], [1.74808758E12, 18639.5], [1.74809202E12, 7813.2], [1.74809406E12, 7145.883333333333], [1.748091E12, 8560.083333333334], [1.74808554E12, 49890.78333333333], [1.74808776E12, 17625.216666666667], [1.74809442E12, 6985.533333333334], [1.74808878E12, 10824.816666666668], [1.74809322E12, 7253.1], [1.74809544E12, 6319.166666666667], [1.74808674E12, 25837.516666666666], [1.74808896E12, 10291.95], [1.74808998E12, 9625.116666666667], [1.7480922E12, 7893.233333333334], [1.74809148E12, 8344.6], [1.7480949E12, 6826.033333333334], [1.74808602E12, 35596.166666666664], [1.74808824E12, 15892.05], [1.74808926E12, 9998.566666666668], [1.74808722E12, 22424.5], [1.74809268E12, 7545.766666666666], [1.74809046E12, 9119.233333333334], [1.7480937E12, 7038.65], [1.74808944E12, 10213.15], [1.74808842E12, 13493.633333333333], [1.74809166E12, 7866.05], [1.74809064E12, 8799.416666666666], [1.74809508E12, 6719.05], [1.7480862E12, 32371.55], [1.74809286E12, 7439.616666666667], [1.74809388E12, 7226.05], [1.7480874E12, 21411.716666666667], [1.74808962E12, 9812.083333333334], [1.74809184E12, 8212.6], [1.74808728E12, 21970.516666666666], [1.74809052E12, 9092.216666666667], [1.74809394E12, 7146.233333333334], [1.74809274E12, 7491.666666666667], [1.7480883E12, 15198.683333333332], [1.74809496E12, 6691.683333333333], [1.74808848E12, 12185.166666666666], [1.74808626E12, 30690.133333333335], [1.7480895E12, 10105.466666666667], [1.74809172E12, 8106.716666666666], [1.74808746E12, 19517.9], [1.7480907E12, 8932.65], [1.74809292E12, 7385.7], [1.74808968E12, 9945.95], [1.74809412E12, 6746.183333333333], [1.74808866E12, 11197.516666666666], [1.7480919E12, 7786.3], [1.74809514E12, 6505.633333333333], [1.74808644E12, 28343.766666666666], [1.74809088E12, 8746.733333333334], [1.74808794E12, 17357.2], [1.74809118E12, 8453.116666666667], [1.7480934E12, 7039.266666666666], [1.74808572E12, 42661.21666666667], [1.74809016E12, 9172.883333333333], [1.7480946E12, 6746.383333333333], [1.74808914E12, 10479.233333333334], [1.74809238E12, 7573.216666666666], [1.74808524E12, 82312.43333333333], [1.74809562E12, 6426.483333333334], [1.74808692E12, 24530.766666666666], [1.74809136E12, 8025.766666666666], [1.74809358E12, 7333.7], [1.74809376E12, 7012.866666666667], [1.74809478E12, 6586.383333333333], [1.7480859E12, 38132.083333333336], [1.74808812E12, 16584.0], [1.74809034E12, 9145.9], [1.74809256E12, 7599.5], [1.74808608E12, 34396.566666666666], [1.74809154E12, 8425.85], [1.7480871E12, 23091.566666666666], [1.74808932E12, 9997.966666666667], [1.7480958E12, 6239.683333333333], [1.74809586E12, 2106.366666666667], [1.74808698E12, 24291.416666666668], [1.7480892E12, 10451.966666666667], [1.74809022E12, 9386.05], [1.74809244E12, 7758.45], [1.74809364E12, 7118.016666666666], [1.74808818E12, 16238.633333333333], [1.74809142E12, 8399.366666666667], [1.74809466E12, 6693.016666666666], [1.74808596E12, 36182.76666666667], [1.7480904E12, 8986.0], [1.74808938E12, 10212.4], [1.74809262E12, 7518.816666666667], [1.74808716E12, 22477.7], [1.7480916E12, 8079.3], [1.74809382E12, 6959.166666666667], [1.74809484E12, 6746.35], [1.74809058E12, 8932.8], [1.7480928E12, 7679.866666666667], [1.74808614E12, 33383.683333333334], [1.74808836E12, 14558.8], [1.7480931E12, 7225.8], [1.74808542E12, 57675.05], [1.74808764E12, 18452.083333333332], [1.74808986E12, 9413.066666666668], [1.74809208E12, 7918.666666666667], [1.7480943E12, 6853.283333333334], [1.7480856E12, 47061.6], [1.74809532E12, 6505.866666666667], [1.74808662E12, 26823.45], [1.74808884E12, 10693.266666666666], [1.74809106E12, 8398.9], [1.74809328E12, 7252.683333333333], [1.7480868E12, 25359.816666666666], [1.74809568E12, 6186.566666666667], [1.74809004E12, 9546.766666666666], [1.74808782E12, 17679.2], [1.74809226E12, 7999.866666666667], [1.74809124E12, 8373.25], [1.74809448E12, 6932.433333333333], [1.74808578E12, 40954.65], [1.748088E12, 17545.666666666668], [1.74808902E12, 10638.616666666667], [1.74809346E12, 7279.116666666667], [1.7480955E12, 6425.85], [1.7480889E12, 10453.183333333332], [1.74809214E12, 7706.0], [1.74808668E12, 26345.816666666666], [1.74809112E12, 8612.316666666668], [1.74809556E12, 6319.466666666666], [1.74809334E12, 7412.416666666667], [1.74809436E12, 6985.816666666667], [1.74808566E12, 43781.73333333333], [1.74808788E12, 17465.566666666666], [1.7480901E12, 9252.55], [1.74809232E12, 7866.45], [1.74809472E12, 6826.7], [1.74808584E12, 39757.9], [1.74809574E12, 6399.433333333333], [1.74808686E12, 24583.85], [1.74808908E12, 10320.1], [1.7480913E12, 8691.966666666667], [1.74809352E12, 7306.683333333333], [1.74808704E12, 23758.783333333333], [1.74809028E12, 9358.766666666666], [1.74808806E12, 16719.516666666666], [1.7480925E12, 7546.433333333333], [1.74809454E12, 6959.616666666667], [1.74808632E12, 29944.45], [1.7480952E12, 6532.683333333333], [1.74808956E12, 9704.85], [1.74809178E12, 7785.4], [1.74808734E12, 21652.316666666666], [1.74809076E12, 8879.433333333332], [1.748094E12, 7120.05], [1.7480853E12, 71995.36666666667], [1.74808752E12, 18797.6], [1.74808854E12, 11971.5], [1.74809298E12, 7571.4], [1.74809502E12, 6479.233333333334], [1.7480865E12, 27810.316666666666], [1.74808872E12, 11091.233333333334], [1.74809538E12, 6532.883333333333], [1.74808974E12, 9865.05], [1.74809196E12, 8160.383333333333], [1.7480877E12, 18346.033333333333], [1.74809094E12, 8746.05], [1.74809316E12, 7546.466666666666], [1.74809418E12, 6985.316666666667], [1.74808548E12, 53116.98333333333], [1.74808992E12, 9546.05]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74808518E12, 31000.8], [1.74808536E12, 34234.166666666664], [1.74809424E12, 3697.366666666667], [1.74808638E12, 15732.433333333332], [1.7480886E12, 6292.933333333333], [1.74809082E12, 4683.5], [1.74809304E12, 4059.9333333333334], [1.74809526E12, 3465.5], [1.74808656E12, 14630.433333333332], [1.7480898E12, 5263.5], [1.74808758E12, 10135.433333333332], [1.74809202E12, 4248.5], [1.74809406E12, 3885.9333333333334], [1.748091E12, 4654.433333333333], [1.74808554E12, 27129.166666666668], [1.74808776E12, 9584.3], [1.74809442E12, 3798.9333333333334], [1.74808878E12, 5886.866666666667], [1.74809322E12, 3943.9333333333334], [1.74809544E12, 3436.5], [1.74808674E12, 14050.3], [1.74808896E12, 5597.0], [1.74808998E12, 5234.366666666667], [1.7480922E12, 4292.0], [1.74809148E12, 4538.5], [1.7480949E12, 3711.866666666667], [1.74808602E12, 19357.366666666665], [1.74808824E12, 8641.933333333332], [1.74808926E12, 5437.366666666667], [1.74808722E12, 12194.3], [1.74809268E12, 4103.433333333333], [1.74809046E12, 4958.933333333333], [1.7480937E12, 3828.0], [1.74808944E12, 5553.5], [1.74808842E12, 7337.0], [1.74809166E12, 4277.433333333333], [1.74809064E12, 4785.0], [1.74809508E12, 3654.0], [1.7480862E12, 17602.933333333334], [1.74809286E12, 4045.4333333333334], [1.74809388E12, 3929.4333333333334], [1.7480874E12, 11643.366666666667], [1.74808962E12, 5336.0], [1.74809184E12, 4466.0], [1.74808728E12, 11947.866666666667], [1.74809052E12, 4944.5], [1.74809394E12, 3885.9333333333334], [1.74809274E12, 4074.5], [1.7480883E12, 8264.933333333332], [1.74809496E12, 3639.4333333333334], [1.74808848E12, 6626.5], [1.74808626E12, 16689.433333333334], [1.7480895E12, 5495.433333333333], [1.74809172E12, 4408.0], [1.74808746E12, 10613.866666666667], [1.7480907E12, 4857.5], [1.74809292E12, 4016.5], [1.74808968E12, 5408.433333333333], [1.74809412E12, 3668.5], [1.74808866E12, 6089.933333333333], [1.7480919E12, 4234.0], [1.74809514E12, 3538.0], [1.74808644E12, 15413.5], [1.74809088E12, 4756.0], [1.74808794E12, 9439.5], [1.74809118E12, 4596.433333333333], [1.7480934E12, 3828.0], [1.74808572E12, 23199.8], [1.74809016E12, 4987.933333333333], [1.7480946E12, 3668.4333333333334], [1.74808914E12, 5698.366666666667], [1.74809238E12, 4117.933333333333], [1.74808524E12, 44761.23333333333], [1.74809562E12, 3494.5], [1.74808692E12, 13339.933333333332], [1.74809136E12, 4364.5], [1.74809358E12, 3987.5], [1.74809376E12, 3813.5], [1.74809478E12, 3581.5], [1.7480859E12, 20734.866666666665], [1.74808812E12, 9018.866666666667], [1.74809034E12, 4973.5], [1.74809256E12, 4132.366666666667], [1.74808608E12, 18704.8], [1.74809154E12, 4581.866666666667], [1.7480871E12, 12557.0], [1.74808932E12, 5437.433333333333], [1.7480958E12, 3393.0], [1.74809586E12, 1145.5], [1.74808698E12, 13209.433333333332], [1.7480892E12, 5683.8], [1.74809022E12, 5104.0], [1.74809244E12, 4219.5], [1.74809364E12, 3871.5], [1.74808818E12, 8830.5], [1.74809142E12, 4567.433333333333], [1.74809466E12, 3639.5], [1.74808596E12, 19676.3], [1.7480904E12, 4886.5], [1.74808938E12, 5553.5], [1.74809262E12, 4088.9333333333334], [1.74808716E12, 12223.3], [1.7480916E12, 4393.5], [1.74809382E12, 3784.4333333333334], [1.74809484E12, 3668.5], [1.74809058E12, 4857.5], [1.7480928E12, 4175.933333333333], [1.74808614E12, 18154.0], [1.74808836E12, 7917.0], [1.7480931E12, 3929.5], [1.74808542E12, 31363.3], [1.74808764E12, 10033.8], [1.74808986E12, 5118.5], [1.74809208E12, 4306.5], [1.7480943E12, 3726.4333333333334], [1.7480856E12, 25592.1], [1.74809532E12, 3538.0], [1.74808662E12, 14586.733333333334], [1.74808884E12, 5814.5], [1.74809106E12, 4567.5], [1.74809328E12, 3944.0], [1.7480868E12, 13789.366666666667], [1.74809568E12, 3364.0], [1.74809004E12, 5191.0], [1.74808782E12, 9613.5], [1.74809226E12, 4349.933333333333], [1.74809124E12, 4553.0], [1.74809448E12, 3769.866666666667], [1.74808578E12, 22271.8], [1.748088E12, 9540.866666666667], [1.74808902E12, 5785.433333333333], [1.74809346E12, 3958.5], [1.7480955E12, 3494.5], [1.7480889E12, 5684.0], [1.74809214E12, 4190.5], [1.74808668E12, 14325.8], [1.74809112E12, 4683.433333333333], [1.74809556E12, 3436.5], [1.74809334E12, 4031.0], [1.74809436E12, 3799.0], [1.74808566E12, 23808.666666666668], [1.74808788E12, 9497.5], [1.7480901E12, 5031.5], [1.74809232E12, 4277.366666666667], [1.74809472E12, 3711.9333333333334], [1.74808584E12, 21619.1], [1.74809574E12, 3480.0], [1.74808686E12, 13369.0], [1.74808908E12, 5611.366666666667], [1.7480913E12, 4726.933333333333], [1.74809352E12, 3973.0], [1.74808704E12, 12919.433333333332], [1.74809028E12, 5089.5], [1.74808806E12, 9091.5], [1.7480925E12, 4103.366666666667], [1.74809454E12, 3784.5], [1.74808632E12, 16283.166666666666], [1.7480952E12, 3552.5], [1.74808956E12, 5278.0], [1.74809178E12, 4233.933333333333], [1.74808734E12, 11774.0], [1.74809076E12, 4828.5], [1.748094E12, 3871.5], [1.7480853E12, 39149.8], [1.74808752E12, 10222.433333333332], [1.74808854E12, 6510.5], [1.74809298E12, 4118.0], [1.74809502E12, 3523.5], [1.7480865E12, 15123.433333333332], [1.74808872E12, 6031.866666666667], [1.74809538E12, 3552.4333333333334], [1.74808974E12, 5365.0], [1.74809196E12, 4437.0], [1.7480877E12, 9975.933333333332], [1.74809094E12, 4756.0], [1.74809316E12, 4103.433333333333], [1.74809418E12, 3798.9333333333334], [1.74808548E12, 28883.933333333334], [1.74808992E12, 5190.933333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74809586E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 16.544434050514536, "minX": 1.74808518E12, "maxY": 257.2543103448277, "series": [{"data": [[1.74808518E12, 16.544434050514536], [1.74808536E12, 24.66963151207113], [1.74809424E12, 234.8549019607843], [1.74808638E12, 54.564055299539135], [1.7480886E12, 137.34792626728097], [1.74809082E12, 185.2972136222911], [1.74809304E12, 213.075], [1.74809526E12, 250.4769874476986], [1.74808656E12, 58.679881070366676], [1.7480898E12, 164.43526170798893], [1.74808758E12, 85.12160228898426], [1.74809202E12, 204.40273037542656], [1.74809406E12, 224.0298507462687], [1.748091E12, 186.53894080996884], [1.74808554E12, 31.308925708177455], [1.74808776E12, 89.91830559757933], [1.74809442E12, 228.91221374045801], [1.74808878E12, 146.80049261083755], [1.74809322E12, 219.17279411764696], [1.74809544E12, 252.90295358649783], [1.74808674E12, 61.14757481940142], [1.74808896E12, 154.5233160621762], [1.74808998E12, 165.49861495844902], [1.7480922E12, 201.46283783783798], [1.74809148E12, 190.93929712460064], [1.7480949E12, 233.94140625000006], [1.74808602E12, 44.32284644194752], [1.74808824E12, 99.80369127516784], [1.74808926E12, 159.0666666666666], [1.74808722E12, 70.81331747919133], [1.74809268E12, 211.3109540636042], [1.74809046E12, 174.9035087719297], [1.7480937E12, 226.74999999999994], [1.74808944E12, 156.10182767624028], [1.74808842E12, 117.7845849802371], [1.74809166E12, 202.17288135593236], [1.74809064E12, 181.36666666666667], [1.74809508E12, 237.00793650793625], [1.7480862E12, 48.75288303130146], [1.74809286E12, 214.08243727598563], [1.74809388E12, 221.32841328413292], [1.7480874E12, 74.05230386052305], [1.74808962E12, 162.26630434782595], [1.74809184E12, 194.57467532467538], [1.74808728E12, 72.13956310679603], [1.74809052E12, 174.6950146627566], [1.74809394E12, 223.20522388059706], [1.74809274E12, 213.0782918149466], [1.7480883E12, 104.46491228070171], [1.74809496E12, 238.70916334661354], [1.74808848E12, 130.35448577680518], [1.74808626E12, 51.41702867072111], [1.7480895E12, 157.71503957783636], [1.74809172E12, 197.17434210526315], [1.74808746E12, 81.29918032786891], [1.7480907E12, 177.98208955223876], [1.74809292E12, 215.9891696750902], [1.74808968E12, 160.17962466487944], [1.74809412E12, 235.73913043478262], [1.74808866E12, 142.14285714285725], [1.7480919E12, 204.27397260273975], [1.74809514E12, 245.36065573770486], [1.74808644E12, 55.75164628410157], [1.74809088E12, 182.24085365853654], [1.74808794E12, 91.30107526881719], [1.74809118E12, 188.42902208201895], [1.7480934E12, 227.16287878787867], [1.74808572E12, 36.671250000000015], [1.74809016E12, 173.67732558139545], [1.7480946E12, 236.39920948616603], [1.74808914E12, 151.91603053435117], [1.74809238E12, 210.10211267605627], [1.74808524E12, 18.674441205053434], [1.74809562E12, 248.16182572614096], [1.74808692E12, 64.41847826086946], [1.74809136E12, 198.24916943521592], [1.74809358E12, 217.53090909090912], [1.74809376E12, 227.9657794676807], [1.74809478E12, 242.7327935222672], [1.7480859E12, 41.36993006992999], [1.74808812E12, 95.68810289389062], [1.74809034E12, 174.24198250728867], [1.74809256E12, 210.30526315789479], [1.74808608E12, 45.89302325581397], [1.74809154E12, 189.07911392405063], [1.7480871E12, 68.66859122401846], [1.74808932E12, 159.43733333333333], [1.7480958E12, 256.17094017094], [1.74809586E12, 244.9873417721519], [1.74808698E12, 65.2491767288694], [1.7480892E12, 152.55867346938768], [1.74809022E12, 169.85795454545456], [1.74809244E12, 205.2096219931271], [1.74809364E12, 224.1161048689138], [1.74808818E12, 97.73563218390802], [1.74809142E12, 189.40317460317453], [1.74809466E12, 237.77689243027896], [1.74808596E12, 43.57921886514377], [1.7480904E12, 177.46884272997013], [1.74808938E12, 156.1514360313316], [1.74809262E12, 211.2340425531916], [1.74808716E12, 70.53499406880184], [1.7480916E12, 197.4488448844885], [1.74809382E12, 228.69348659003836], [1.74809484E12, 236.12648221343866], [1.74809058E12, 178.64179104477617], [1.7480928E12, 207.03819444444437], [1.74808614E12, 47.2683706070287], [1.74808836E12, 108.92673992673996], [1.7480931E12, 221.14391143911433], [1.74808542E12, 26.955617198335645], [1.74808764E12, 85.8554913294797], [1.74808986E12, 169.66572237960355], [1.74809208E12, 201.07744107744114], [1.7480943E12, 233.10505836575877], [1.7480856E12, 33.20849858356945], [1.74809532E12, 245.24180327868856], [1.74808662E12, 58.897614314115344], [1.74808884E12, 148.61596009975065], [1.74809106E12, 189.4285714285714], [1.74809328E12, 220.69117647058826], [1.7480868E12, 62.233438485804456], [1.74809568E12, 257.2543103448277], [1.74809004E12, 166.75139664804485], [1.74808782E12, 89.72699849170439], [1.74809226E12, 199.1766666666667], [1.74809124E12, 190.58917197452237], [1.74809448E12, 229.68076923076916], [1.74808578E12, 38.24153645833329], [1.748088E12, 90.30699088145897], [1.74808902E12, 149.2080200501253], [1.74809346E12, 219.31501831501828], [1.7480955E12, 248.3195020746889], [1.7480889E12, 151.73724489795913], [1.74809214E12, 207.0034602076124], [1.74808668E12, 59.94939271255061], [1.74809112E12, 184.86068111455097], [1.74809556E12, 252.7046413502109], [1.74809334E12, 214.7230215827338], [1.74809436E12, 227.88167938931292], [1.74808566E12, 35.72959805115707], [1.74808788E12, 90.77862595419845], [1.7480901E12, 172.2881844380402], [1.74809232E12, 202.90847457627098], [1.74809472E12, 233.72265625000017], [1.74808584E12, 39.636485580147585], [1.74809574E12, 249.56249999999991], [1.74808686E12, 64.26681127982651], [1.74808908E12, 154.80361757105945], [1.7480913E12, 183.59815950920242], [1.74809352E12, 218.02919708029194], [1.74808704E12, 66.79461279461287], [1.74809028E12, 170.14814814814832], [1.74808806E12, 95.01275917065385], [1.7480925E12, 211.06007067137813], [1.74809454E12, 229.81609195402314], [1.74808632E12, 52.74087266251117], [1.7480952E12, 244.6408163265305], [1.74808956E12, 163.99725274725273], [1.74809178E12, 204.10273972602738], [1.74808734E12, 73.25246305418725], [1.74809076E12, 179.45945945945945], [1.748094E12, 223.47191011235958], [1.7480853E12, 21.47592592592595], [1.74808752E12, 84.36595744680864], [1.74808854E12, 132.71492204899783], [1.74809298E12, 210.23239436619718], [1.74809502E12, 246.0], [1.7480865E12, 56.78619367209973], [1.74808872E12, 143.40624999999994], [1.74809538E12, 243.60408163265305], [1.74808974E12, 161.73243243243246], [1.74809196E12, 195.13071895424832], [1.7480877E12, 86.58575581395341], [1.74809094E12, 181.75304878048775], [1.74809316E12, 211.43462897526499], [1.74809418E12, 228.2862595419848], [1.74808548E12, 29.32881526104422], [1.74808992E12, 166.63128491620114]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74809586E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 16.525724976613652, "minX": 1.74808518E12, "maxY": 257.2543103448277, "series": [{"data": [[1.74808518E12, 16.525724976613652], [1.74808536E12, 24.66836086404068], [1.74809424E12, 234.85098039215688], [1.74808638E12, 54.55944700460828], [1.7480886E12, 137.34792626728097], [1.74809082E12, 185.29102167182654], [1.74809304E12, 213.0714285714286], [1.74809526E12, 250.47280334728032], [1.74808656E12, 58.676907829534194], [1.7480898E12, 164.42699724517897], [1.74808758E12, 85.11731044349064], [1.74809202E12, 204.3959044368602], [1.74809406E12, 224.0261194029851], [1.748091E12, 186.53894080996884], [1.74808554E12, 31.30411544628543], [1.74808776E12, 89.91376701966713], [1.74809442E12, 228.90839694656475], [1.74808878E12, 146.79310344827584], [1.74809322E12, 219.17279411764696], [1.74809544E12, 252.90295358649783], [1.74808674E12, 61.14344685242515], [1.74808896E12, 154.51813471502578], [1.74808998E12, 165.49861495844902], [1.7480922E12, 201.45945945945942], [1.74809148E12, 190.93610223642182], [1.7480949E12, 233.94140625000006], [1.74808602E12, 44.32059925093634], [1.74808824E12, 99.79865771812074], [1.74808926E12, 159.06399999999994], [1.74808722E12, 70.8073721759809], [1.74809268E12, 211.3109540636042], [1.74809046E12, 174.90058479532155], [1.7480937E12, 226.74621212121218], [1.74808944E12, 156.09921671018284], [1.74808842E12, 117.78063241106717], [1.74809166E12, 202.16949152542375], [1.74809064E12, 181.3606060606062], [1.74809508E12, 237.00396825396837], [1.7480862E12, 48.748764415156515], [1.74809286E12, 214.07885304659493], [1.74809388E12, 221.32841328413292], [1.7480874E12, 74.04732254047336], [1.74808962E12, 162.26086956521735], [1.74809184E12, 194.56818181818176], [1.74808728E12, 72.13834951456317], [1.74809052E12, 174.68328445747804], [1.74809394E12, 223.2014925373135], [1.74809274E12, 213.07117437722437], [1.7480883E12, 104.46491228070171], [1.74809496E12, 238.70119521912352], [1.74808848E12, 130.35448577680518], [1.74808626E12, 51.41355343179841], [1.7480895E12, 157.71240105540886], [1.74809172E12, 197.1710526315791], [1.74808746E12, 81.29918032786891], [1.7480907E12, 177.97910447761194], [1.74809292E12, 215.97833935018048], [1.74808968E12, 160.17694369973194], [1.74809412E12, 235.73122529644263], [1.74808866E12, 142.13809523809522], [1.7480919E12, 204.27054794520555], [1.74809514E12, 245.36065573770486], [1.74808644E12, 55.75070555032923], [1.74809088E12, 182.24085365853654], [1.74808794E12, 91.29493087557596], [1.74809118E12, 188.4258675078865], [1.7480934E12, 227.15909090909088], [1.74808572E12, 36.66874999999995], [1.74809016E12, 173.67732558139545], [1.7480946E12, 236.38735177865618], [1.74808914E12, 151.91094147582697], [1.74809238E12, 210.10211267605627], [1.74808524E12, 18.665694849368347], [1.74809562E12, 248.15767634854785], [1.74808692E12, 64.41630434782608], [1.74809136E12, 198.2425249169434], [1.74809358E12, 217.52727272727273], [1.74809376E12, 227.96197718631186], [1.74809478E12, 242.7327935222672], [1.7480859E12, 41.366433566433464], [1.74808812E12, 95.68167202572342], [1.74809034E12, 174.2390670553935], [1.74809256E12, 210.30526315789479], [1.74808608E12, 45.89069767441861], [1.74809154E12, 189.07594936708858], [1.7480871E12, 68.66512702078532], [1.74808932E12, 159.43466666666674], [1.7480958E12, 256.16239316239324], [1.74809586E12, 244.96202531645565], [1.74808698E12, 65.24478594950615], [1.7480892E12, 152.5535714285716], [1.74809022E12, 169.85795454545456], [1.74809244E12, 205.2096219931271], [1.74809364E12, 224.11235955056182], [1.74808818E12, 97.73070607553369], [1.74809142E12, 189.3936507936509], [1.74809466E12, 237.77290836653395], [1.74808596E12, 43.5755342667649], [1.7480904E12, 177.46587537091995], [1.74808938E12, 156.1462140992167], [1.74809262E12, 211.2340425531916], [1.74808716E12, 70.53024911032031], [1.7480916E12, 197.4422442244224], [1.74809382E12, 228.68582375478925], [1.74809484E12, 236.12648221343866], [1.74809058E12, 178.63582089552241], [1.7480928E12, 207.03819444444437], [1.74808614E12, 47.265175718849854], [1.74808836E12, 108.92490842490857], [1.7480931E12, 221.14391143911433], [1.74808542E12, 26.953305594082288], [1.74808764E12, 85.85404624277463], [1.74808986E12, 169.66572237960355], [1.74809208E12, 201.07744107744114], [1.7480943E12, 233.09727626459141], [1.7480856E12, 33.203966005665755], [1.74809532E12, 245.23770491803276], [1.74808662E12, 58.89165009940354], [1.74808884E12, 148.61346633416457], [1.74809106E12, 189.4285714285714], [1.74809328E12, 220.68750000000003], [1.7480868E12, 62.228180862250255], [1.74809568E12, 257.2543103448277], [1.74809004E12, 166.745810055866], [1.74808782E12, 89.72247360482642], [1.74809226E12, 199.17333333333335], [1.74809124E12, 190.58917197452237], [1.74809448E12, 229.67307692307688], [1.74808578E12, 38.23958333333329], [1.748088E12, 90.30547112462001], [1.74808902E12, 149.2005012531327], [1.74809346E12, 219.31501831501828], [1.7480955E12, 248.31535269709548], [1.7480889E12, 151.72959183673458], [1.74809214E12, 207.0034602076124], [1.74808668E12, 59.94635627530365], [1.74809112E12, 184.85758513931887], [1.74809556E12, 252.7046413502109], [1.74809334E12, 214.7230215827338], [1.74809436E12, 227.87404580152696], [1.74808566E12, 35.72777101096225], [1.74808788E12, 90.77709923664113], [1.7480901E12, 172.28530259365976], [1.74809232E12, 202.90508474576288], [1.74809472E12, 233.71484375], [1.74808584E12, 39.633132126089905], [1.74809574E12, 249.56249999999991], [1.74808686E12, 64.26355748373098], [1.74808908E12, 154.79586563307498], [1.7480913E12, 183.58895705521465], [1.74809352E12, 218.02919708029194], [1.74808704E12, 66.79236812570146], [1.74809028E12, 170.1452991452993], [1.74808806E12, 95.00637958532691], [1.7480925E12, 211.05653710247347], [1.74809454E12, 229.81226053639847], [1.74808632E12, 52.73731077471059], [1.7480952E12, 244.6367346938776], [1.74808956E12, 163.99725274725273], [1.74809178E12, 204.09246575342468], [1.74808734E12, 73.25000000000006], [1.74809076E12, 179.45345345345348], [1.748094E12, 223.47191011235958], [1.7480853E12, 21.470740740740727], [1.74808752E12, 84.36595744680864], [1.74808854E12, 132.71269487750547], [1.74809298E12, 210.23239436619718], [1.74809502E12, 245.9958847736626], [1.7480865E12, 56.77948226270374], [1.74808872E12, 143.40624999999994], [1.74809538E12, 243.60000000000008], [1.74808974E12, 161.72972972972954], [1.74809196E12, 195.1274509803921], [1.7480877E12, 86.58284883720935], [1.74809094E12, 181.75304878048775], [1.74809316E12, 211.43462897526499], [1.74809418E12, 228.27862595419833], [1.74808548E12, 29.324799196787158], [1.74808992E12, 166.63128491620114]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74809586E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74808518E12, "maxY": 0.11552853133769889, "series": [{"data": [[1.74808518E12, 0.11552853133769889], [1.74808536E12, 0.0025412960609911043], [1.74809424E12, 0.011764705882352946], [1.74808638E12, 0.0036866359447004673], [1.7480886E12, 0.006912442396313355], [1.74809082E12, 0.009287925696594427], [1.74809304E12, 0.01428571428571428], [1.74809526E12, 0.016736401673640162], [1.74808656E12, 0.003964321110009918], [1.7480898E12, 0.008264462809917354], [1.74808758E12, 0.0071530758226037265], [1.74809202E12, 0.013651877133105794], [1.74809406E12, 0.01119402985074627], [1.748091E12, 0.009345794392523364], [1.74808554E12, 0.0032068412613575604], [1.74808776E12, 0.0060514372163388815], [1.74809442E12, 0.011450381679389316], [1.74808878E12, 0.007389162561576348], [1.74809322E12, 0.014705882352941171], [1.74809544E12, 0.016877637130801683], [1.74808674E12, 0.004127966976264198], [1.74808896E12, 0.010362694300518125], [1.74808998E12, 0.011080332409972292], [1.7480922E12, 0.01013513513513514], [1.74809148E12, 0.0159744408945687], [1.7480949E12, 0.011718750000000002], [1.74808602E12, 0.0029962546816479445], [1.74808824E12, 0.006711409395973154], [1.74808926E12, 0.007999999999999998], [1.74808722E12, 0.0035671819262782394], [1.74809268E12, 0.010600706713780921], [1.74809046E12, 0.011695906432748529], [1.7480937E12, 0.011363636363636367], [1.74808944E12, 0.007832898172323756], [1.74808842E12, 0.007905138339920958], [1.74809166E12, 0.010169491525423733], [1.74809064E12, 0.009090909090909085], [1.74809508E12, 0.011904761904761906], [1.7480862E12, 0.0032948929159802363], [1.74809286E12, 0.010752688172043015], [1.74809388E12, 0.014760147601476009], [1.7480874E12, 0.004981320049813208], [1.74808962E12, 0.010869565217391297], [1.74809184E12, 0.009740259740259738], [1.74808728E12, 0.0036407766990291263], [1.74809052E12, 0.008797653958944277], [1.74809394E12, 0.014925373134328356], [1.74809274E12, 0.014234875444839852], [1.7480883E12, 0.0070175438596491195], [1.74809496E12, 0.015936254980079678], [1.74808848E12, 0.008752735229759296], [1.74808626E12, 0.005212858384013904], [1.7480895E12, 0.007915567282321897], [1.74809172E12, 0.00986842105263158], [1.74808746E12, 0.005464480874316945], [1.7480907E12, 0.008955223880597009], [1.74809292E12, 0.0108303249097473], [1.74808968E12, 0.008042895442359248], [1.74809412E12, 0.01581027667984189], [1.74808866E12, 0.023809523809523832], [1.7480919E12, 0.017123287671232883], [1.74809514E12, 0.00819672131147541], [1.74808644E12, 0.004703668861712132], [1.74809088E12, 0.015243902439024402], [1.74808794E12, 0.0061443932411674364], [1.74809118E12, 0.00946372239747634], [1.7480934E12, 0.011363636363636367], [1.74808572E12, 0.0025000000000000096], [1.74809016E12, 0.011627906976744177], [1.7480946E12, 0.011857707509881427], [1.74808914E12, 0.0076335877862595365], [1.74809238E12, 0.010563380281690148], [1.74808524E12, 0.0038872691933916474], [1.74809562E12, 0.012448132780082992], [1.74808692E12, 0.004347826086956531], [1.74809136E12, 0.013289036544850488], [1.74809358E12, 0.010909090909090913], [1.74809376E12, 0.019011406844106463], [1.74809478E12, 0.012145748987854258], [1.7480859E12, 0.003496503496503496], [1.74808812E12, 0.004823151125401925], [1.74809034E12, 0.011661807580174918], [1.74809256E12, 0.021052631578947375], [1.74808608E12, 0.0031007751937984543], [1.74809154E12, 0.009493670886075946], [1.7480871E12, 0.00461893764434181], [1.74808932E12, 0.01066666666666666], [1.7480958E12, 0.017094017094017092], [1.74809586E12, 0.0], [1.74808698E12, 0.004390779363337003], [1.7480892E12, 0.012755102040816335], [1.74809022E12, 0.00852272727272727], [1.74809244E12, 0.010309278350515469], [1.74809364E12, 0.01123595505617978], [1.74808818E12, 0.006568144499178983], [1.74809142E12, 0.009523809523809521], [1.74809466E12, 0.007968127490039837], [1.74808596E12, 0.003684598378776712], [1.7480904E12, 0.011869436201780404], [1.74808938E12, 0.007832898172323756], [1.74809262E12, 0.010638297872340432], [1.74808716E12, 0.004744958481613296], [1.7480916E12, 0.009900990099009906], [1.74809382E12, 0.011494252873563225], [1.74809484E12, 0.011857707509881427], [1.74809058E12, 0.008955223880597015], [1.7480928E12, 0.010416666666666671], [1.74808614E12, 0.004792332268370611], [1.74808836E12, 0.005494505494505491], [1.7480931E12, 0.011070110701107016], [1.74808542E12, 0.002773925104022191], [1.74808764E12, 0.00578034682080925], [1.74808986E12, 0.011331444759206787], [1.74809208E12, 0.010101010101010105], [1.7480943E12, 0.007782101167315172], [1.7480856E12, 0.002832861189801701], [1.74809532E12, 0.012295081967213123], [1.74808662E12, 0.003976143141153089], [1.74808884E12, 0.00748129675810473], [1.74809106E12, 0.012698412698412688], [1.74809328E12, 0.01838235294117647], [1.7480868E12, 0.0042060988433228275], [1.74809568E12, 0.01293103448275863], [1.74809004E12, 0.01117318435754189], [1.74808782E12, 0.007541478129713431], [1.74809226E12, 0.010000000000000004], [1.74809124E12, 0.012738853503184704], [1.74809448E12, 0.011538461538461543], [1.74808578E12, 0.0032552083333333387], [1.748088E12, 0.006079027355623101], [1.74808902E12, 0.010025062656641595], [1.74809346E12, 0.010989010989010997], [1.7480955E12, 0.01659751037344398], [1.7480889E12, 0.010204081632653052], [1.74809214E12, 0.013840830449826983], [1.74808668E12, 0.005060728744939271], [1.74809112E12, 0.012383900928792562], [1.74809556E12, 0.016877637130801683], [1.74809334E12, 0.010791366906474824], [1.74809436E12, 0.011450381679389316], [1.74808566E12, 0.00243605359317906], [1.74808788E12, 0.006106870229007635], [1.7480901E12, 0.014409221902017308], [1.74809232E12, 0.013559322033898296], [1.74809472E12, 0.011718750000000002], [1.74808584E12, 0.0026827632461435356], [1.74809574E12, 0.012500000000000004], [1.74808686E12, 0.004338394793926257], [1.74808908E12, 0.010335917312661492], [1.7480913E12, 0.009202453987730055], [1.74809352E12, 0.010948905109489055], [1.74808704E12, 0.004489337822671166], [1.74809028E12, 0.011396011396011388], [1.74808806E12, 0.004784688995215307], [1.7480925E12, 0.010600706713780925], [1.74809454E12, 0.011494252873563218], [1.74808632E12, 0.00445235975066785], [1.7480952E12, 0.012244897959183685], [1.74808956E12, 0.00824175824175824], [1.74809178E12, 0.013698630136986294], [1.74808734E12, 0.004926108374384245], [1.74809076E12, 0.009009009009009007], [1.748094E12, 0.014981273408239695], [1.7480853E12, 0.0033333333333333322], [1.74808752E12, 0.005673758865248229], [1.74808854E12, 0.00668151447661469], [1.74809298E12, 0.010563380281690144], [1.74809502E12, 0.01234567901234569], [1.7480865E12, 0.0038350910834132382], [1.74808872E12, 0.007211538461538452], [1.74809538E12, 0.012244897959183678], [1.74808974E12, 0.008108108108108107], [1.74809196E12, 0.009803921568627449], [1.7480877E12, 0.008720930232558127], [1.74809094E12, 0.009146341463414632], [1.74809316E12, 0.010600706713780921], [1.74809418E12, 0.015267175572519078], [1.74808548E12, 0.003012048192771084], [1.74808992E12, 0.013966480446927387]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74809586E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 14.0, "minX": 1.74808518E12, "maxY": 419.0, "series": [{"data": [[1.74808518E12, 317.0], [1.74808536E12, 134.0], [1.74809424E12, 273.0], [1.74808638E12, 182.0], [1.7480886E12, 184.0], [1.74809082E12, 223.0], [1.74809304E12, 241.0], [1.74809526E12, 300.0], [1.74808656E12, 161.0], [1.7480898E12, 204.0], [1.74808758E12, 133.0], [1.74809202E12, 249.0], [1.74809406E12, 263.0], [1.748091E12, 232.0], [1.74808554E12, 72.0], [1.74808776E12, 200.0], [1.74809442E12, 300.0], [1.74808878E12, 209.0], [1.74809322E12, 290.0], [1.74809544E12, 346.0], [1.74808674E12, 103.0], [1.74808896E12, 240.0], [1.74808998E12, 207.0], [1.7480922E12, 248.0], [1.74809148E12, 238.0], [1.7480949E12, 274.0], [1.74808602E12, 92.0], [1.74808824E12, 140.0], [1.74808926E12, 248.0], [1.74808722E12, 113.0], [1.74809268E12, 253.0], [1.74809046E12, 255.0], [1.7480937E12, 263.0], [1.74808944E12, 197.0], [1.74808842E12, 182.0], [1.74809166E12, 258.0], [1.74809064E12, 229.0], [1.74809508E12, 281.0], [1.7480862E12, 85.0], [1.74809286E12, 250.0], [1.74809388E12, 257.0], [1.7480874E12, 126.0], [1.74808962E12, 199.0], [1.74809184E12, 231.0], [1.74808728E12, 116.0], [1.74809052E12, 234.0], [1.74809394E12, 291.0], [1.74809274E12, 253.0], [1.7480883E12, 155.0], [1.74809496E12, 286.0], [1.74808848E12, 171.0], [1.74808626E12, 128.0], [1.7480895E12, 203.0], [1.74809172E12, 242.0], [1.74808746E12, 156.0], [1.7480907E12, 224.0], [1.74809292E12, 289.0], [1.74808968E12, 211.0], [1.74809412E12, 324.0], [1.74808866E12, 272.0], [1.7480919E12, 245.0], [1.74809514E12, 313.0], [1.74808644E12, 92.0], [1.74809088E12, 226.0], [1.74808794E12, 130.0], [1.74809118E12, 235.0], [1.7480934E12, 267.0], [1.74808572E12, 119.0], [1.74809016E12, 242.0], [1.7480946E12, 283.0], [1.74808914E12, 191.0], [1.74809238E12, 276.0], [1.74808524E12, 70.0], [1.74809562E12, 350.0], [1.74808692E12, 105.0], [1.74809136E12, 419.0], [1.74809358E12, 261.0], [1.74809376E12, 285.0], [1.74809478E12, 329.0], [1.7480859E12, 84.0], [1.74808812E12, 157.0], [1.74809034E12, 217.0], [1.74809256E12, 275.0], [1.74808608E12, 91.0], [1.74809154E12, 234.0], [1.7480871E12, 121.0], [1.74808932E12, 191.0], [1.7480958E12, 287.0], [1.74809586E12, 311.0], [1.74808698E12, 162.0], [1.7480892E12, 196.0], [1.74809022E12, 210.0], [1.74809244E12, 244.0], [1.74809364E12, 265.0], [1.74808818E12, 163.0], [1.74809142E12, 237.0], [1.74809466E12, 276.0], [1.74808596E12, 133.0], [1.7480904E12, 226.0], [1.74808938E12, 273.0], [1.74809262E12, 255.0], [1.74808716E12, 162.0], [1.7480916E12, 238.0], [1.74809382E12, 268.0], [1.74809484E12, 275.0], [1.74809058E12, 276.0], [1.7480928E12, 244.0], [1.74808614E12, 83.0], [1.74808836E12, 168.0], [1.7480931E12, 258.0], [1.74808542E12, 87.0], [1.74808764E12, 139.0], [1.74808986E12, 241.0], [1.74809208E12, 268.0], [1.7480943E12, 268.0], [1.7480856E12, 76.0], [1.74809532E12, 331.0], [1.74808662E12, 105.0], [1.74808884E12, 188.0], [1.74809106E12, 256.0], [1.74809328E12, 258.0], [1.7480868E12, 106.0], [1.74809568E12, 295.0], [1.74809004E12, 226.0], [1.74808782E12, 140.0], [1.74809226E12, 254.0], [1.74809124E12, 236.0], [1.74809448E12, 275.0], [1.74808578E12, 153.0], [1.748088E12, 141.0], [1.74808902E12, 191.0], [1.74809346E12, 254.0], [1.7480955E12, 308.0], [1.7480889E12, 190.0], [1.74809214E12, 261.0], [1.74808668E12, 98.0], [1.74809112E12, 226.0], [1.74809556E12, 321.0], [1.74809334E12, 252.0], [1.74809436E12, 290.0], [1.74808566E12, 157.0], [1.74808788E12, 138.0], [1.7480901E12, 220.0], [1.74809232E12, 246.0], [1.74809472E12, 276.0], [1.74808584E12, 77.0], [1.74809574E12, 298.0], [1.74808686E12, 175.0], [1.74808908E12, 199.0], [1.7480913E12, 225.0], [1.74809352E12, 260.0], [1.74808704E12, 102.0], [1.74809028E12, 212.0], [1.74808806E12, 163.0], [1.7480925E12, 255.0], [1.74809454E12, 267.0], [1.74808632E12, 101.0], [1.7480952E12, 299.0], [1.74808956E12, 248.0], [1.74809178E12, 246.0], [1.74808734E12, 118.0], [1.74809076E12, 267.0], [1.748094E12, 266.0], [1.7480853E12, 94.0], [1.74808752E12, 133.0], [1.74808854E12, 176.0], [1.74809298E12, 336.0], [1.74809502E12, 346.0], [1.7480865E12, 101.0], [1.74808872E12, 188.0], [1.74809538E12, 317.0], [1.74808974E12, 207.0], [1.74809196E12, 249.0], [1.7480877E12, 134.0], [1.74809094E12, 233.0], [1.74809316E12, 267.0], [1.74809418E12, 300.0], [1.74808548E12, 67.0], [1.74808992E12, 209.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74808518E12, 18.0], [1.74808536E12, 25.0], [1.74809424E12, 251.0], [1.74808638E12, 55.0], [1.7480886E12, 150.0], [1.74809082E12, 197.0], [1.74809304E12, 227.9], [1.74809526E12, 265.0], [1.74808656E12, 59.0], [1.7480898E12, 177.0], [1.74808758E12, 97.0], [1.74809202E12, 219.0], [1.74809406E12, 231.0], [1.748091E12, 199.0], [1.74808554E12, 32.0], [1.74808776E12, 104.0], [1.74809442E12, 236.0], [1.74808878E12, 160.0], [1.74809322E12, 235.0], [1.74809544E12, 267.0], [1.74808674E12, 62.0], [1.74808896E12, 167.0], [1.74808998E12, 179.8], [1.7480922E12, 218.0], [1.74809148E12, 204.0], [1.7480949E12, 241.3], [1.74808602E12, 45.0], [1.74808824E12, 114.30000000000007], [1.74808926E12, 170.0], [1.74808722E12, 71.0], [1.74809268E12, 227.6], [1.74809046E12, 189.0], [1.7480937E12, 243.0], [1.74808944E12, 172.0], [1.74808842E12, 128.0], [1.74809166E12, 214.40000000000003], [1.74809064E12, 192.0], [1.74809508E12, 246.70000000000002], [1.7480862E12, 49.0], [1.74809286E12, 230.0], [1.74809388E12, 228.0], [1.7480874E12, 77.0], [1.74808962E12, 175.0], [1.74809184E12, 208.0], [1.74808728E12, 75.5], [1.74809052E12, 189.0], [1.74809394E12, 229.0], [1.74809274E12, 229.0], [1.7480883E12, 117.0], [1.74809496E12, 255.8], [1.74808848E12, 139.0], [1.74808626E12, 52.0], [1.7480895E12, 172.0], [1.74809172E12, 213.0], [1.74808746E12, 95.0], [1.7480907E12, 193.0], [1.74809292E12, 233.0], [1.74808968E12, 175.0], [1.74809412E12, 249.0], [1.74808866E12, 155.0], [1.7480919E12, 217.0], [1.74809514E12, 262.0], [1.74808644E12, 56.0], [1.74809088E12, 195.0], [1.74808794E12, 103.80000000000007], [1.74809118E12, 201.0], [1.7480934E12, 240.0], [1.74808572E12, 37.0], [1.74809016E12, 185.0], [1.7480946E12, 254.0], [1.74808914E12, 167.0], [1.74809238E12, 224.5], [1.74808524E12, 20.0], [1.74809562E12, 265.0], [1.74808692E12, 65.0], [1.74809136E12, 214.0], [1.74809358E12, 223.0], [1.74809376E12, 243.6], [1.74809478E12, 258.0], [1.7480859E12, 42.0], [1.74808812E12, 109.0], [1.74809034E12, 187.0], [1.74809256E12, 226.40000000000003], [1.74808608E12, 46.0], [1.74809154E12, 204.3], [1.7480871E12, 70.0], [1.74808932E12, 172.0], [1.7480958E12, 272.0], [1.74809586E12, 253.0], [1.74808698E12, 67.0], [1.7480892E12, 168.0], [1.74809022E12, 185.0], [1.74809244E12, 221.8], [1.74809364E12, 240.0], [1.74808818E12, 112.0], [1.74809142E12, 204.0], [1.74809466E12, 254.0], [1.74808596E12, 43.0], [1.7480904E12, 189.2], [1.74808938E12, 171.0], [1.74809262E12, 226.0], [1.74808716E12, 74.0], [1.7480916E12, 212.0], [1.74809382E12, 244.0], [1.74809484E12, 250.0], [1.74809058E12, 191.0], [1.7480928E12, 213.0], [1.74808614E12, 48.0], [1.74808836E12, 120.0], [1.7480931E12, 236.0], [1.74808542E12, 28.0], [1.74808764E12, 99.70000000000005], [1.74808986E12, 180.0], [1.74809208E12, 217.0], [1.7480943E12, 250.0], [1.7480856E12, 34.0], [1.74809532E12, 261.0], [1.74808662E12, 59.0], [1.74808884E12, 164.8], [1.74809106E12, 201.0], [1.74809328E12, 237.0], [1.7480868E12, 63.0], [1.74809568E12, 272.70000000000005], [1.74809004E12, 181.0], [1.74808782E12, 102.60000000000002], [1.74809226E12, 204.0], [1.74809124E12, 203.0], [1.74809448E12, 237.0], [1.74808578E12, 39.0], [1.748088E12, 104.0], [1.74808902E12, 166.0], [1.74809346E12, 232.6], [1.7480955E12, 264.8], [1.7480889E12, 165.0], [1.74809214E12, 221.0], [1.74808668E12, 60.0], [1.74809112E12, 200.0], [1.74809556E12, 268.0], [1.74809334E12, 221.0], [1.74809436E12, 235.0], [1.74808566E12, 36.0], [1.74808788E12, 103.0], [1.7480901E12, 184.0], [1.74809232E12, 218.0], [1.74809472E12, 247.0], [1.74808584E12, 40.0], [1.74809574E12, 264.9], [1.74808686E12, 69.0], [1.74808908E12, 168.0], [1.7480913E12, 194.0], [1.74809352E12, 224.0], [1.74808704E12, 69.80000000000007], [1.74809028E12, 186.0], [1.74808806E12, 110.0], [1.7480925E12, 224.0], [1.74809454E12, 236.0], [1.74808632E12, 53.60000000000002], [1.7480952E12, 263.0], [1.74808956E12, 175.0], [1.74809178E12, 215.0], [1.74808734E12, 77.70000000000005], [1.74809076E12, 193.0], [1.748094E12, 230.0], [1.7480853E12, 23.0], [1.74808752E12, 97.0], [1.74808854E12, 143.0], [1.74809298E12, 216.0], [1.74809502E12, 260.0], [1.7480865E12, 57.0], [1.74808872E12, 157.0], [1.74809538E12, 260.0], [1.74808974E12, 176.0], [1.74809196E12, 200.0], [1.7480877E12, 99.0], [1.74809094E12, 196.0], [1.74809316E12, 217.0], [1.74809418E12, 241.0], [1.74808548E12, 30.0], [1.74808992E12, 180.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74808518E12, 24.610000000000127], [1.74808536E12, 50.0], [1.74809424E12, 271.0], [1.74808638E12, 77.2800000000002], [1.7480886E12, 169.0], [1.74809082E12, 219.76], [1.74809304E12, 239.38], [1.74809526E12, 292.59999999999997], [1.74808656E12, 119.0], [1.7480898E12, 196.0], [1.74808758E12, 118.0], [1.74809202E12, 239.24], [1.74809406E12, 259.24], [1.748091E12, 218.55999999999995], [1.74808554E12, 54.0], [1.74808776E12, 126.0], [1.74809442E12, 274.8800000000001], [1.74808878E12, 189.44000000000005], [1.74809322E12, 262.77999999999975], [1.74809544E12, 300.0], [1.74808674E12, 81.0], [1.74808896E12, 235.26], [1.74808998E12, 199.14], [1.7480922E12, 233.02999999999997], [1.74809148E12, 229.46000000000015], [1.7480949E12, 263.43], [1.74808602E12, 68.0], [1.74808824E12, 125.02999999999997], [1.74808926E12, 239.0], [1.74808722E12, 96.0], [1.74809268E12, 247.32000000000005], [1.74809046E12, 239.14], [1.7480937E12, 259.7500000000001], [1.74808944E12, 181.0], [1.74808842E12, 154.51000000000005], [1.74809166E12, 240.28000000000014], [1.74809064E12, 219.45], [1.74809508E12, 269.82], [1.7480862E12, 69.84999999999991], [1.74809286E12, 244.39999999999998], [1.74809388E12, 250.55999999999995], [1.7480874E12, 106.0], [1.74808962E12, 193.62], [1.74809184E12, 227.0], [1.74808728E12, 101.0], [1.74809052E12, 208.15999999999997], [1.74809394E12, 260.58000000000004], [1.74809274E12, 247.90000000000003], [1.7480883E12, 128.0], [1.74809496E12, 276.0], [1.74808848E12, 163.42000000000002], [1.74808626E12, 118.0], [1.7480895E12, 184.2], [1.74809172E12, 234.79999999999995], [1.74808746E12, 127.0], [1.7480907E12, 215.67999999999984], [1.74809292E12, 271.3999999999994], [1.74808968E12, 186.29999999999995], [1.74809412E12, 273.06000000000006], [1.74808866E12, 209.44000000000074], [1.7480919E12, 234.48999999999995], [1.74809514E12, 292.20000000000005], [1.74808644E12, 78.3599999999999], [1.74809088E12, 218.70999999999998], [1.74808794E12, 121.48000000000002], [1.74809118E12, 225.82], [1.7480934E12, 257.45000000000016], [1.74808572E12, 61.0], [1.74809016E12, 240.0], [1.7480946E12, 272.0], [1.74808914E12, 185.06], [1.74809238E12, 240.44999999999948], [1.74808524E12, 29.0], [1.74809562E12, 325.35999999999933], [1.74808692E12, 84.0], [1.74809136E12, 263.8800000000001], [1.74809358E12, 252.0], [1.74809376E12, 265.80000000000007], [1.74809478E12, 287.6], [1.7480859E12, 65.0], [1.74808812E12, 124.0], [1.74809034E12, 212.56], [1.74809256E12, 250.65999999999974], [1.74808608E12, 68.0], [1.74809154E12, 221.65999999999997], [1.7480871E12, 87.0], [1.74808932E12, 186.20000000000005], [1.7480958E12, 286.0], [1.74809586E12, 311.0], [1.74808698E12, 85.0], [1.7480892E12, 183.34999999999997], [1.74809022E12, 203.93999999999994], [1.74809244E12, 238.15999999999997], [1.74809364E12, 252.83999999999992], [1.74808818E12, 127.89999999999998], [1.74809142E12, 220.03999999999985], [1.74809466E12, 268.3599999999999], [1.74808596E12, 90.98000000000138], [1.7480904E12, 214.06000000000006], [1.74808938E12, 196.91999999999962], [1.74809262E12, 249.51000000000005], [1.74808716E12, 118.55999999999995], [1.7480916E12, 232.91999999999996], [1.74809382E12, 261.76], [1.74809484E12, 268.22], [1.74809058E12, 213.03999999999985], [1.7480928E12, 239.33000000000004], [1.74808614E12, 71.0], [1.74808836E12, 139.52999999999997], [1.7480931E12, 253.83999999999992], [1.74808542E12, 54.0], [1.74808764E12, 116.07000000000005], [1.74808986E12, 238.45999999999998], [1.74809208E12, 243.27999999999975], [1.7480943E12, 264.84], [1.7480856E12, 55.33999999999992], [1.74809532E12, 292.20000000000005], [1.74808662E12, 78.0], [1.74808884E12, 179.98000000000002], [1.74809106E12, 241.83999999999997], [1.74809328E12, 254.3499999999999], [1.7480868E12, 80.48000000000002], [1.74809568E12, 292.66999999999996], [1.74809004E12, 197.05000000000013], [1.74808782E12, 123.0], [1.74809226E12, 241.98000000000002], [1.74809124E12, 223.10000000000014], [1.74809448E12, 266.89999999999986], [1.74808578E12, 63.0], [1.748088E12, 120.0], [1.74808902E12, 183.0], [1.74809346E12, 250.03999999999996], [1.7480955E12, 295.73999999999995], [1.7480889E12, 183.07], [1.74809214E12, 247.80000000000018], [1.74808668E12, 80.0], [1.74809112E12, 208.0], [1.74809556E12, 302.0200000000001], [1.74809334E12, 245.20999999999998], [1.74809436E12, 266.37], [1.74808566E12, 70.0], [1.74808788E12, 123.31999999999982], [1.7480901E12, 211.55999999999995], [1.74809232E12, 234.36000000000018], [1.74809472E12, 270.43], [1.74808584E12, 64.0], [1.74809574E12, 285.13], [1.74808686E12, 119.0], [1.74808908E12, 189.0], [1.7480913E12, 212.46000000000004], [1.74809352E12, 251.0], [1.74808704E12, 86.24000000000012], [1.74809028E12, 201.44000000000005], [1.74808806E12, 135.8800000000001], [1.7480925E12, 241.2800000000002], [1.74809454E12, 260.38], [1.74808632E12, 72.75999999999999], [1.7480952E12, 293.15999999999997], [1.74808956E12, 238.35000000000002], [1.74809178E12, 243.14], [1.74808734E12, 103.87], [1.74809076E12, 240.0], [1.748094E12, 259.64], [1.7480853E12, 36.98999999999978], [1.74808752E12, 113.93999999999994], [1.74808854E12, 166.0], [1.74809298E12, 248.14999999999998], [1.74809502E12, 305.56000000000006], [1.7480865E12, 77.55999999999995], [1.74808872E12, 176.82999999999998], [1.74809538E12, 292.31999999999994], [1.74808974E12, 190.61000000000018], [1.74809196E12, 238.72000000000003], [1.7480877E12, 118.0], [1.74809094E12, 221.25999999999988], [1.74809316E12, 241.0], [1.74809418E12, 261.37], [1.74808548E12, 55.0], [1.74808992E12, 192.23000000000008]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74808518E12, 19.0], [1.74808536E12, 30.0], [1.74809424E12, 253.2], [1.74808638E12, 68.0], [1.7480886E12, 155.25], [1.74809082E12, 200.0], [1.74809304E12, 233.0], [1.74809526E12, 271.0], [1.74808656E12, 72.0], [1.7480898E12, 182.8], [1.74808758E12, 104.0], [1.74809202E12, 222.3], [1.74809406E12, 233.0], [1.748091E12, 202.89999999999998], [1.74808554E12, 41.399999999999864], [1.74808776E12, 111.0], [1.74809442E12, 240.85], [1.74808878E12, 165.0], [1.74809322E12, 240.0], [1.74809544E12, 281.59999999999997], [1.74808674E12, 73.0], [1.74808896E12, 174.0], [1.74808998E12, 183.0], [1.7480922E12, 222.14999999999998], [1.74809148E12, 209.0], [1.7480949E12, 243.0], [1.74808602E12, 52.200000000000045], [1.74808824E12, 118.0], [1.74808926E12, 174.0], [1.74808722E12, 84.89999999999998], [1.74809268E12, 231.0], [1.74809046E12, 197.69999999999993], [1.7480937E12, 246.0], [1.74808944E12, 175.0], [1.74808842E12, 133.0], [1.74809166E12, 220.2], [1.74809064E12, 194.0], [1.74809508E12, 252.35], [1.7480862E12, 59.0], [1.74809286E12, 235.0], [1.74809388E12, 232.0], [1.7480874E12, 92.0], [1.74808962E12, 177.0], [1.74809184E12, 215.0], [1.74808728E12, 89.0], [1.74809052E12, 191.0], [1.74809394E12, 232.0], [1.74809274E12, 233.0], [1.7480883E12, 121.44999999999993], [1.74809496E12, 261.4], [1.74808848E12, 145.0], [1.74808626E12, 65.0], [1.7480895E12, 175.0], [1.74809172E12, 216.0], [1.74808746E12, 104.35000000000002], [1.7480907E12, 196.2], [1.74809292E12, 238.0], [1.74808968E12, 176.0], [1.74809412E12, 251.29999999999998], [1.74808866E12, 162.0], [1.7480919E12, 219.34999999999997], [1.74809514E12, 265.75], [1.74808644E12, 68.0], [1.74809088E12, 199.55], [1.74808794E12, 111.0], [1.74809118E12, 203.09999999999997], [1.7480934E12, 241.0], [1.74808572E12, 47.0], [1.74809016E12, 190.0], [1.7480946E12, 256.0], [1.74808914E12, 171.0], [1.74809238E12, 228.0], [1.74808524E12, 21.0], [1.74809562E12, 273.9], [1.74808692E12, 76.0], [1.74809136E12, 227.89999999999998], [1.74809358E12, 228.0], [1.74809376E12, 246.0], [1.74809478E12, 261.0], [1.7480859E12, 52.0], [1.74808812E12, 114.0], [1.74809034E12, 188.8], [1.74809256E12, 229.0], [1.74808608E12, 57.0], [1.74809154E12, 208.14999999999998], [1.7480871E12, 82.64999999999998], [1.74808932E12, 174.0], [1.7480958E12, 276.0], [1.74809586E12, 254.0], [1.74808698E12, 74.0], [1.7480892E12, 171.34999999999997], [1.74809022E12, 188.0], [1.74809244E12, 225.0], [1.74809364E12, 243.6], [1.74808818E12, 117.0], [1.74809142E12, 207.2], [1.74809466E12, 259.0], [1.74808596E12, 55.09999999999991], [1.7480904E12, 192.09999999999997], [1.74808938E12, 174.0], [1.74809262E12, 229.84999999999997], [1.74808716E12, 85.0], [1.7480916E12, 214.8], [1.74809382E12, 247.0], [1.74809484E12, 258.0], [1.74809058E12, 196.2], [1.7480928E12, 216.0], [1.74808614E12, 57.0], [1.74808836E12, 124.64999999999998], [1.7480931E12, 238.0], [1.74808542E12, 33.0], [1.74808764E12, 107.0], [1.74808986E12, 188.3], [1.74809208E12, 219.09999999999997], [1.7480943E12, 254.0], [1.7480856E12, 44.0], [1.74809532E12, 267.0], [1.74808662E12, 71.0], [1.74808884E12, 167.0], [1.74809106E12, 207.59999999999997], [1.74809328E12, 239.0], [1.7480868E12, 73.0], [1.74809568E12, 278.35], [1.74809004E12, 184.0], [1.74808782E12, 110.0], [1.74809226E12, 216.95], [1.74809124E12, 207.0], [1.74809448E12, 238.0], [1.74808578E12, 45.0], [1.748088E12, 110.0], [1.74808902E12, 168.0], [1.74809346E12, 239.3], [1.7480955E12, 269.9], [1.7480889E12, 168.0], [1.74809214E12, 226.0], [1.74808668E12, 72.54999999999995], [1.74809112E12, 202.0], [1.74809556E12, 274.0], [1.74809334E12, 223.0], [1.74809436E12, 236.0], [1.74808566E12, 47.0], [1.74808788E12, 111.0], [1.7480901E12, 188.0], [1.74809232E12, 223.0], [1.74809472E12, 251.44999999999993], [1.74808584E12, 47.399999999999864], [1.74809574E12, 273.9], [1.74808686E12, 76.0], [1.74808908E12, 171.0], [1.7480913E12, 202.0], [1.74809352E12, 235.0], [1.74808704E12, 75.39999999999998], [1.74809028E12, 189.0], [1.74808806E12, 116.0], [1.7480925E12, 226.0], [1.74809454E12, 238.0], [1.74808632E12, 65.0], [1.7480952E12, 265.7], [1.74808956E12, 181.75], [1.74809178E12, 218.0], [1.74808734E12, 91.0], [1.74809076E12, 196.0], [1.748094E12, 232.6], [1.7480853E12, 25.0], [1.74808752E12, 103.69999999999993], [1.74808854E12, 150.0], [1.74809298E12, 220.0], [1.74809502E12, 266.59999999999997], [1.7480865E12, 67.79999999999995], [1.74808872E12, 163.14999999999998], [1.74809538E12, 265.4], [1.74808974E12, 180.0], [1.74809196E12, 205.0], [1.7480877E12, 106.0], [1.74809094E12, 199.0], [1.74809316E12, 219.8], [1.74809418E12, 251.0], [1.74808548E12, 40.0], [1.74808992E12, 184.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.74808518E12, 14.0], [1.74808536E12, 21.0], [1.74809424E12, 210.0], [1.74808638E12, 51.0], [1.7480886E12, 116.0], [1.74809082E12, 167.0], [1.74809304E12, 190.0], [1.74809526E12, 220.0], [1.74808656E12, 54.0], [1.7480898E12, 137.0], [1.74808758E12, 72.0], [1.74809202E12, 179.0], [1.74809406E12, 204.0], [1.748091E12, 158.0], [1.74808554E12, 27.0], [1.74808776E12, 75.0], [1.74809442E12, 207.0], [1.74808878E12, 118.0], [1.74809322E12, 192.0], [1.74809544E12, 222.0], [1.74808674E12, 57.0], [1.74808896E12, 132.0], [1.74808998E12, 140.0], [1.7480922E12, 177.0], [1.74809148E12, 170.0], [1.7480949E12, 214.0], [1.74808602E12, 41.0], [1.74808824E12, 81.0], [1.74808926E12, 133.0], [1.74808722E12, 67.0], [1.74809268E12, 186.0], [1.74809046E12, 149.0], [1.7480937E12, 202.0], [1.74808944E12, 132.0], [1.74808842E12, 96.0], [1.74809166E12, 171.0], [1.74809064E12, 164.0], [1.74809508E12, 215.0], [1.7480862E12, 44.0], [1.74809286E12, 186.0], [1.74809388E12, 204.0], [1.7480874E12, 70.0], [1.74808962E12, 135.0], [1.74809184E12, 173.0], [1.74808728E12, 67.0], [1.74809052E12, 151.0], [1.74809394E12, 206.0], [1.74809274E12, 186.0], [1.7480883E12, 82.0], [1.74809496E12, 218.0], [1.74808848E12, 99.0], [1.74808626E12, 47.0], [1.7480895E12, 132.0], [1.74809172E12, 172.0], [1.74808746E12, 71.0], [1.7480907E12, 155.0], [1.74809292E12, 194.0], [1.74808968E12, 136.0], [1.74809412E12, 206.0], [1.74808866E12, 118.0], [1.7480919E12, 174.0], [1.74809514E12, 214.0], [1.74808644E12, 52.0], [1.74809088E12, 160.0], [1.74808794E12, 76.0], [1.74809118E12, 160.0], [1.7480934E12, 200.0], [1.74808572E12, 33.0], [1.74809016E12, 143.0], [1.7480946E12, 216.0], [1.74808914E12, 128.0], [1.74809238E12, 181.0], [1.74808524E12, 15.0], [1.74809562E12, 220.0], [1.74808692E12, 60.0], [1.74809136E12, 171.0], [1.74809358E12, 200.0], [1.74809376E12, 201.0], [1.74809478E12, 214.0], [1.7480859E12, 38.0], [1.74808812E12, 80.0], [1.74809034E12, 148.0], [1.74809256E12, 180.0], [1.74808608E12, 42.0], [1.74809154E12, 166.0], [1.7480871E12, 65.0], [1.74808932E12, 129.0], [1.7480958E12, 223.0], [1.74809586E12, 226.0], [1.74808698E12, 62.0], [1.7480892E12, 130.0], [1.74809022E12, 146.0], [1.74809244E12, 181.0], [1.74809364E12, 203.0], [1.74808818E12, 80.0], [1.74809142E12, 165.0], [1.74809466E12, 211.0], [1.74808596E12, 40.0], [1.7480904E12, 146.0], [1.74808938E12, 129.0], [1.74809262E12, 186.0], [1.74808716E12, 66.0], [1.7480916E12, 170.0], [1.74809382E12, 202.0], [1.74809484E12, 213.0], [1.74809058E12, 155.0], [1.7480928E12, 191.0], [1.74808614E12, 44.0], [1.74808836E12, 89.0], [1.7480931E12, 192.0], [1.74808542E12, 23.0], [1.74808764E12, 73.0], [1.74808986E12, 148.0], [1.74809208E12, 179.0], [1.7480943E12, 204.0], [1.7480856E12, 30.0], [1.74809532E12, 220.0], [1.74808662E12, 56.0], [1.74808884E12, 116.0], [1.74809106E12, 165.0], [1.74809328E12, 197.0], [1.7480868E12, 58.0], [1.74809568E12, 226.0], [1.74809004E12, 148.0], [1.74808782E12, 75.0], [1.74809226E12, 180.0], [1.74809124E12, 162.0], [1.74809448E12, 209.0], [1.74808578E12, 35.0], [1.748088E12, 77.0], [1.74808902E12, 124.0], [1.74809346E12, 200.0], [1.7480955E12, 219.0], [1.7480889E12, 120.0], [1.74809214E12, 183.0], [1.74808668E12, 57.0], [1.74809112E12, 159.0], [1.74809556E12, 225.0], [1.74809334E12, 194.0], [1.74809436E12, 207.0], [1.74808566E12, 31.0], [1.74808788E12, 77.0], [1.7480901E12, 146.0], [1.74809232E12, 181.0], [1.74809472E12, 214.0], [1.74808584E12, 36.0], [1.74809574E12, 226.0], [1.74808686E12, 60.0], [1.74808908E12, 124.0], [1.7480913E12, 164.0], [1.74809352E12, 199.0], [1.74808704E12, 63.0], [1.74809028E12, 148.0], [1.74808806E12, 79.0], [1.7480925E12, 181.0], [1.74809454E12, 208.0], [1.74808632E12, 48.0], [1.7480952E12, 216.0], [1.74808956E12, 139.0], [1.74809178E12, 181.0], [1.74808734E12, 69.0], [1.74809076E12, 156.0], [1.748094E12, 205.0], [1.7480853E12, 18.0], [1.74808752E12, 72.0], [1.74808854E12, 100.0], [1.74809298E12, 188.0], [1.74809502E12, 214.0], [1.7480865E12, 53.0], [1.74808872E12, 118.0], [1.74809538E12, 217.0], [1.74808974E12, 138.0], [1.74809196E12, 176.0], [1.7480877E12, 74.0], [1.74809094E12, 157.0], [1.74809316E12, 192.0], [1.74809418E12, 206.0], [1.74808548E12, 26.0], [1.74808992E12, 138.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74808518E12, 16.0], [1.74808536E12, 24.0], [1.74809424E12, 233.0], [1.74808638E12, 53.0], [1.7480886E12, 136.0], [1.74809082E12, 186.0], [1.74809304E12, 210.0], [1.74809526E12, 251.0], [1.74808656E12, 57.0], [1.7480898E12, 166.0], [1.74808758E12, 84.0], [1.74809202E12, 201.0], [1.74809406E12, 222.0], [1.748091E12, 187.0], [1.74808554E12, 30.0], [1.74808776E12, 87.0], [1.74809442E12, 226.0], [1.74808878E12, 149.5], [1.74809322E12, 216.0], [1.74809544E12, 253.0], [1.74808674E12, 60.0], [1.74808896E12, 156.5], [1.74808998E12, 162.0], [1.7480922E12, 200.0], [1.74809148E12, 188.0], [1.7480949E12, 232.0], [1.74808602E12, 43.0], [1.74808824E12, 98.0], [1.74808926E12, 162.0], [1.74808722E12, 69.0], [1.74809268E12, 208.0], [1.74809046E12, 170.0], [1.7480937E12, 224.0], [1.74808944E12, 152.0], [1.74808842E12, 117.0], [1.74809166E12, 204.0], [1.74809064E12, 183.0], [1.74809508E12, 234.0], [1.7480862E12, 48.0], [1.74809286E12, 211.0], [1.74809388E12, 219.0], [1.7480874E12, 72.0], [1.74808962E12, 165.5], [1.74809184E12, 194.0], [1.74808728E12, 70.0], [1.74809052E12, 171.0], [1.74809394E12, 221.0], [1.74809274E12, 211.0], [1.7480883E12, 103.0], [1.74809496E12, 234.0], [1.74808848E12, 129.0], [1.74808626E12, 50.0], [1.7480895E12, 155.0], [1.74809172E12, 195.0], [1.74808746E12, 80.0], [1.7480907E12, 174.0], [1.74809292E12, 213.0], [1.74808968E12, 157.0], [1.74809412E12, 238.0], [1.74808866E12, 139.0], [1.7480919E12, 207.0], [1.74809514E12, 243.5], [1.74808644E12, 55.0], [1.74809088E12, 180.5], [1.74808794E12, 89.0], [1.74809118E12, 189.0], [1.7480934E12, 229.0], [1.74808572E12, 36.0], [1.74809016E12, 175.0], [1.7480946E12, 233.0], [1.74808914E12, 148.0], [1.74809238E12, 212.0], [1.74808524E12, 18.0], [1.74809562E12, 244.0], [1.74808692E12, 63.0], [1.74809136E12, 196.0], [1.74809358E12, 215.0], [1.74809376E12, 225.0], [1.74809478E12, 243.0], [1.7480859E12, 40.0], [1.74808812E12, 94.0], [1.74809034E12, 177.0], [1.74809256E12, 207.0], [1.74808608E12, 45.0], [1.74809154E12, 187.0], [1.7480871E12, 67.0], [1.74808932E12, 163.0], [1.7480958E12, 258.0], [1.74809586E12, 242.0], [1.74808698E12, 64.0], [1.7480892E12, 148.5], [1.74809022E12, 166.0], [1.74809244E12, 204.0], [1.74809364E12, 222.0], [1.74808818E12, 96.0], [1.74809142E12, 186.0], [1.74809466E12, 236.0], [1.74808596E12, 42.0], [1.7480904E12, 179.0], [1.74808938E12, 152.0], [1.74809262E12, 208.0], [1.74808716E12, 68.0], [1.7480916E12, 195.0], [1.74809382E12, 226.0], [1.74809484E12, 232.0], [1.74809058E12, 181.0], [1.7480928E12, 205.0], [1.74808614E12, 46.0], [1.74808836E12, 108.0], [1.7480931E12, 224.0], [1.74808542E12, 26.0], [1.74808764E12, 84.5], [1.74808986E12, 170.0], [1.74809208E12, 200.0], [1.7480943E12, 231.0], [1.7480856E12, 32.0], [1.74809532E12, 243.0], [1.74808662E12, 58.0], [1.74808884E12, 151.0], [1.74809106E12, 189.0], [1.74809328E12, 218.0], [1.7480868E12, 61.0], [1.74809568E12, 258.0], [1.74809004E12, 163.0], [1.74808782E12, 88.0], [1.74809226E12, 197.0], [1.74809124E12, 192.0], [1.74809448E12, 228.0], [1.74808578E12, 37.0], [1.748088E12, 88.0], [1.74808902E12, 145.0], [1.74809346E12, 216.0], [1.7480955E12, 245.0], [1.7480889E12, 155.0], [1.74809214E12, 207.0], [1.74808668E12, 59.0], [1.74809112E12, 182.0], [1.74809556E12, 254.0], [1.74809334E12, 213.0], [1.74809436E12, 225.0], [1.74808566E12, 34.0], [1.74808788E12, 88.0], [1.7480901E12, 175.0], [1.74809232E12, 202.0], [1.74809472E12, 230.5], [1.74808584E12, 39.0], [1.74809574E12, 246.0], [1.74808686E12, 62.0], [1.74808908E12, 158.0], [1.7480913E12, 183.0], [1.74809352E12, 215.0], [1.74808704E12, 66.0], [1.74809028E12, 166.0], [1.74808806E12, 93.0], [1.7480925E12, 211.0], [1.74809454E12, 227.0], [1.74808632E12, 52.0], [1.7480952E12, 242.0], [1.74808956E12, 165.0], [1.74809178E12, 206.0], [1.74808734E12, 71.0], [1.74809076E12, 175.0], [1.748094E12, 221.0], [1.7480853E12, 21.0], [1.74808752E12, 84.0], [1.74808854E12, 131.0], [1.74809298E12, 208.0], [1.74809502E12, 246.0], [1.7480865E12, 56.0], [1.74808872E12, 141.0], [1.74809538E12, 240.0], [1.74808974E12, 158.0], [1.74809196E12, 193.0], [1.7480877E12, 85.0], [1.74809094E12, 179.0], [1.74809316E12, 210.0], [1.74809418E12, 225.0], [1.74808548E12, 28.0], [1.74808992E12, 169.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74809586E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 15.0, "minX": 2.0, "maxY": 261.0, "series": [{"data": [[2.0, 246.0], [3.0, 261.0], [4.0, 233.0], [5.0, 204.0], [6.0, 168.0], [7.0, 146.0], [8.0, 129.0], [9.0, 109.0], [10.0, 96.0], [11.0, 88.0], [12.0, 82.0], [13.0, 73.0], [14.0, 70.0], [15.0, 64.0], [16.0, 61.0], [17.0, 57.0], [18.0, 54.0], [19.0, 51.0], [20.0, 48.0], [21.0, 46.0], [22.0, 44.0], [23.0, 42.0], [24.0, 40.0], [25.0, 38.0], [26.0, 37.0], [27.0, 35.0], [28.0, 34.0], [29.0, 33.0], [30.0, 32.0], [31.0, 31.0], [33.0, 29.0], [32.0, 29.0], [35.0, 27.0], [34.0, 28.0], [37.0, 25.0], [36.0, 26.0], [39.0, 24.0], [38.0, 25.0], [40.0, 23.0], [41.0, 23.0], [43.0, 22.0], [42.0, 23.0], [45.0, 21.0], [44.0, 21.0], [47.0, 20.0], [46.0, 20.0], [49.0, 19.0], [48.0, 20.0], [51.0, 18.0], [50.0, 19.0], [53.0, 18.0], [52.0, 18.0], [54.0, 17.0], [55.0, 17.0], [56.0, 17.0], [57.0, 16.0], [58.0, 16.0], [59.0, 16.0], [60.0, 16.0], [61.0, 15.0], [62.0, 15.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 62.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 15.0, "minX": 2.0, "maxY": 261.0, "series": [{"data": [[2.0, 246.0], [3.0, 261.0], [4.0, 233.0], [5.0, 204.0], [6.0, 168.0], [7.0, 146.0], [8.0, 129.0], [9.0, 109.0], [10.0, 96.0], [11.0, 88.0], [12.0, 82.0], [13.0, 73.0], [14.0, 70.0], [15.0, 64.0], [16.0, 61.0], [17.0, 57.0], [18.0, 54.0], [19.0, 51.0], [20.0, 48.0], [21.0, 46.0], [22.0, 44.0], [23.0, 42.0], [24.0, 40.0], [25.0, 38.0], [26.0, 37.0], [27.0, 35.0], [28.0, 34.0], [29.0, 33.0], [30.0, 32.0], [31.0, 31.0], [33.0, 29.0], [32.0, 29.0], [35.0, 27.0], [34.0, 28.0], [37.0, 25.0], [36.0, 26.0], [39.0, 24.0], [38.0, 25.0], [40.0, 23.0], [41.0, 23.0], [43.0, 22.0], [42.0, 23.0], [45.0, 21.0], [44.0, 21.0], [47.0, 20.0], [46.0, 20.0], [49.0, 19.0], [48.0, 20.0], [51.0, 18.0], [50.0, 19.0], [53.0, 18.0], [52.0, 18.0], [54.0, 17.0], [55.0, 17.0], [56.0, 17.0], [57.0, 16.0], [58.0, 16.0], [59.0, 15.0], [60.0, 16.0], [61.0, 15.0], [62.0, 15.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 62.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.3, "minX": 1.74808518E12, "maxY": 51.45, "series": [{"data": [[1.74808518E12, 35.65], [1.74808536E12, 39.35], [1.74809424E12, 4.25], [1.74808638E12, 18.083333333333332], [1.7480886E12, 7.233333333333333], [1.74809082E12, 5.383333333333334], [1.74809304E12, 4.666666666666667], [1.74809526E12, 3.9833333333333334], [1.74808656E12, 16.816666666666666], [1.7480898E12, 6.05], [1.74808758E12, 11.65], [1.74809202E12, 4.883333333333334], [1.74809406E12, 4.466666666666667], [1.748091E12, 5.35], [1.74808554E12, 31.183333333333334], [1.74808776E12, 11.016666666666667], [1.74809442E12, 4.366666666666666], [1.74808878E12, 6.766666666666667], [1.74809322E12, 4.533333333333333], [1.74809544E12, 3.95], [1.74808674E12, 16.15], [1.74808896E12, 6.433333333333334], [1.74808998E12, 6.016666666666667], [1.7480922E12, 4.933333333333334], [1.74809148E12, 5.216666666666667], [1.7480949E12, 4.266666666666667], [1.74808602E12, 22.25], [1.74808824E12, 9.933333333333334], [1.74808926E12, 6.25], [1.74808722E12, 14.016666666666667], [1.74809268E12, 4.716666666666667], [1.74809046E12, 5.7], [1.7480937E12, 4.4], [1.74808944E12, 6.383333333333334], [1.74808842E12, 8.433333333333334], [1.74809166E12, 4.916666666666667], [1.74809064E12, 5.5], [1.74809508E12, 4.2], [1.7480862E12, 20.233333333333334], [1.74809286E12, 4.65], [1.74809388E12, 4.516666666666667], [1.7480874E12, 13.383333333333333], [1.74808962E12, 6.133333333333334], [1.74809184E12, 5.133333333333334], [1.74808728E12, 13.733333333333333], [1.74809052E12, 5.683333333333334], [1.74809394E12, 4.466666666666667], [1.74809274E12, 4.683333333333334], [1.7480883E12, 9.5], [1.74809496E12, 4.183333333333334], [1.74808848E12, 7.616666666666666], [1.74808626E12, 19.183333333333334], [1.7480895E12, 6.316666666666666], [1.74809172E12, 5.066666666666666], [1.74808746E12, 12.2], [1.7480907E12, 5.583333333333333], [1.74809292E12, 4.616666666666666], [1.74808968E12, 6.216666666666667], [1.74809412E12, 4.216666666666667], [1.74808866E12, 7.0], [1.7480919E12, 4.866666666666666], [1.74809514E12, 4.066666666666666], [1.74808644E12, 17.716666666666665], [1.74809088E12, 5.466666666666667], [1.74808794E12, 10.85], [1.74809118E12, 5.283333333333333], [1.7480934E12, 4.4], [1.74808572E12, 26.666666666666668], [1.74809016E12, 5.733333333333333], [1.7480946E12, 4.216666666666667], [1.74808914E12, 6.55], [1.74809238E12, 4.733333333333333], [1.74808524E12, 51.45], [1.74809562E12, 4.016666666666667], [1.74808692E12, 15.333333333333334], [1.74809136E12, 5.016666666666667], [1.74809358E12, 4.583333333333333], [1.74809376E12, 4.383333333333334], [1.74809478E12, 4.116666666666666], [1.7480859E12, 23.833333333333332], [1.74808812E12, 10.366666666666667], [1.74809034E12, 5.716666666666667], [1.74809256E12, 4.75], [1.74808608E12, 21.5], [1.74809154E12, 5.266666666666667], [1.7480871E12, 14.433333333333334], [1.74808932E12, 6.25], [1.7480958E12, 3.9], [1.74809586E12, 1.3], [1.74808698E12, 15.183333333333334], [1.7480892E12, 6.533333333333333], [1.74809022E12, 5.866666666666666], [1.74809244E12, 4.85], [1.74809364E12, 4.45], [1.74808818E12, 10.15], [1.74809142E12, 5.25], [1.74809466E12, 4.183333333333334], [1.74808596E12, 22.616666666666667], [1.7480904E12, 5.616666666666666], [1.74808938E12, 6.383333333333334], [1.74809262E12, 4.7], [1.74808716E12, 14.05], [1.7480916E12, 5.05], [1.74809382E12, 4.35], [1.74809484E12, 4.216666666666667], [1.74809058E12, 5.583333333333333], [1.7480928E12, 4.8], [1.74808614E12, 20.866666666666667], [1.74808836E12, 9.1], [1.7480931E12, 4.516666666666667], [1.74808542E12, 36.05], [1.74808764E12, 11.533333333333333], [1.74808986E12, 5.883333333333334], [1.74809208E12, 4.95], [1.7480943E12, 4.283333333333333], [1.7480856E12, 29.416666666666668], [1.74809532E12, 4.066666666666666], [1.74808662E12, 16.766666666666666], [1.74808884E12, 6.683333333333334], [1.74809106E12, 5.25], [1.74809328E12, 4.533333333333333], [1.7480868E12, 15.85], [1.74809568E12, 3.8666666666666667], [1.74809004E12, 5.966666666666667], [1.74808782E12, 11.05], [1.74809226E12, 5.0], [1.74809124E12, 5.233333333333333], [1.74809448E12, 4.333333333333333], [1.74808578E12, 25.6], [1.748088E12, 10.966666666666667], [1.74808902E12, 6.65], [1.74809346E12, 4.55], [1.7480955E12, 4.016666666666667], [1.7480889E12, 6.533333333333333], [1.74809214E12, 4.816666666666666], [1.74808668E12, 16.466666666666665], [1.74809112E12, 5.383333333333334], [1.74809556E12, 3.95], [1.74809334E12, 4.633333333333334], [1.74809436E12, 4.366666666666666], [1.74808566E12, 27.366666666666667], [1.74808788E12, 10.916666666666666], [1.7480901E12, 5.783333333333333], [1.74809232E12, 4.916666666666667], [1.74809472E12, 4.266666666666667], [1.74808584E12, 24.85], [1.74809574E12, 4.0], [1.74808686E12, 15.366666666666667], [1.74808908E12, 6.45], [1.7480913E12, 5.433333333333334], [1.74809352E12, 4.566666666666666], [1.74808704E12, 14.85], [1.74809028E12, 5.85], [1.74808806E12, 10.45], [1.7480925E12, 4.716666666666667], [1.74809454E12, 4.35], [1.74808632E12, 18.716666666666665], [1.7480952E12, 4.083333333333333], [1.74808956E12, 6.066666666666666], [1.74809178E12, 4.866666666666666], [1.74808734E12, 13.533333333333333], [1.74809076E12, 5.55], [1.748094E12, 4.45], [1.7480853E12, 45.0], [1.74808752E12, 11.75], [1.74808854E12, 7.483333333333333], [1.74809298E12, 4.733333333333333], [1.74809502E12, 4.05], [1.7480865E12, 17.383333333333333], [1.74808872E12, 6.933333333333334], [1.74809538E12, 4.083333333333333], [1.74808974E12, 6.166666666666667], [1.74809196E12, 5.1], [1.7480877E12, 11.466666666666667], [1.74809094E12, 5.466666666666667], [1.74809316E12, 4.716666666666667], [1.74809418E12, 4.366666666666666], [1.74808548E12, 33.2], [1.74808992E12, 5.966666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74809586E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.3166666666666667, "minX": 1.74808518E12, "maxY": 51.45, "series": [{"data": [[1.74808518E12, 35.63333333333333], [1.74808536E12, 39.35], [1.74809424E12, 4.25], [1.74808638E12, 18.083333333333332], [1.7480886E12, 7.233333333333333], [1.74809082E12, 5.383333333333334], [1.74809304E12, 4.666666666666667], [1.74809526E12, 3.9833333333333334], [1.74808656E12, 16.816666666666666], [1.7480898E12, 6.05], [1.74808758E12, 11.65], [1.74809202E12, 4.883333333333334], [1.74809406E12, 4.466666666666667], [1.748091E12, 5.35], [1.74808554E12, 31.183333333333334], [1.74808776E12, 11.016666666666667], [1.74809442E12, 4.366666666666666], [1.74808878E12, 6.766666666666667], [1.74809322E12, 4.533333333333333], [1.74809544E12, 3.95], [1.74808674E12, 16.15], [1.74808896E12, 6.433333333333334], [1.74808998E12, 6.016666666666667], [1.7480922E12, 4.933333333333334], [1.74809148E12, 5.216666666666667], [1.7480949E12, 4.266666666666667], [1.74808602E12, 22.25], [1.74808824E12, 9.933333333333334], [1.74808926E12, 6.25], [1.74808722E12, 14.016666666666667], [1.74809268E12, 4.716666666666667], [1.74809046E12, 5.7], [1.7480937E12, 4.4], [1.74808944E12, 6.383333333333334], [1.74808842E12, 8.433333333333334], [1.74809166E12, 4.916666666666667], [1.74809064E12, 5.5], [1.74809508E12, 4.2], [1.7480862E12, 20.233333333333334], [1.74809286E12, 4.65], [1.74809388E12, 4.516666666666667], [1.7480874E12, 13.383333333333333], [1.74808962E12, 6.133333333333334], [1.74809184E12, 5.133333333333334], [1.74808728E12, 13.733333333333333], [1.74809052E12, 5.683333333333334], [1.74809394E12, 4.466666666666667], [1.74809274E12, 4.683333333333334], [1.7480883E12, 9.5], [1.74809496E12, 4.183333333333334], [1.74808848E12, 7.616666666666666], [1.74808626E12, 19.183333333333334], [1.7480895E12, 6.316666666666666], [1.74809172E12, 5.066666666666666], [1.74808746E12, 12.2], [1.7480907E12, 5.583333333333333], [1.74809292E12, 4.616666666666666], [1.74808968E12, 6.216666666666667], [1.74809412E12, 4.216666666666667], [1.74808866E12, 7.0], [1.7480919E12, 4.866666666666666], [1.74809514E12, 4.066666666666666], [1.74808644E12, 17.716666666666665], [1.74809088E12, 5.466666666666667], [1.74808794E12, 10.85], [1.74809118E12, 5.283333333333333], [1.7480934E12, 4.4], [1.74808572E12, 26.666666666666668], [1.74809016E12, 5.733333333333333], [1.7480946E12, 4.216666666666667], [1.74808914E12, 6.55], [1.74809238E12, 4.733333333333333], [1.74808524E12, 51.45], [1.74809562E12, 4.016666666666667], [1.74808692E12, 15.333333333333334], [1.74809136E12, 5.016666666666667], [1.74809358E12, 4.583333333333333], [1.74809376E12, 4.383333333333334], [1.74809478E12, 4.116666666666666], [1.7480859E12, 23.833333333333332], [1.74808812E12, 10.366666666666667], [1.74809034E12, 5.716666666666667], [1.74809256E12, 4.75], [1.74808608E12, 21.5], [1.74809154E12, 5.266666666666667], [1.7480871E12, 14.433333333333334], [1.74808932E12, 6.25], [1.7480958E12, 3.9], [1.74809586E12, 1.3166666666666667], [1.74808698E12, 15.183333333333334], [1.7480892E12, 6.533333333333333], [1.74809022E12, 5.866666666666666], [1.74809244E12, 4.85], [1.74809364E12, 4.45], [1.74808818E12, 10.15], [1.74809142E12, 5.25], [1.74809466E12, 4.183333333333334], [1.74808596E12, 22.616666666666667], [1.7480904E12, 5.616666666666666], [1.74808938E12, 6.383333333333334], [1.74809262E12, 4.7], [1.74808716E12, 14.05], [1.7480916E12, 5.05], [1.74809382E12, 4.35], [1.74809484E12, 4.216666666666667], [1.74809058E12, 5.583333333333333], [1.7480928E12, 4.8], [1.74808614E12, 20.866666666666667], [1.74808836E12, 9.1], [1.7480931E12, 4.516666666666667], [1.74808542E12, 36.05], [1.74808764E12, 11.533333333333333], [1.74808986E12, 5.883333333333334], [1.74809208E12, 4.95], [1.7480943E12, 4.283333333333333], [1.7480856E12, 29.416666666666668], [1.74809532E12, 4.066666666666666], [1.74808662E12, 16.766666666666666], [1.74808884E12, 6.683333333333334], [1.74809106E12, 5.25], [1.74809328E12, 4.533333333333333], [1.7480868E12, 15.85], [1.74809568E12, 3.8666666666666667], [1.74809004E12, 5.966666666666667], [1.74808782E12, 11.05], [1.74809226E12, 5.0], [1.74809124E12, 5.233333333333333], [1.74809448E12, 4.333333333333333], [1.74808578E12, 25.6], [1.748088E12, 10.966666666666667], [1.74808902E12, 6.65], [1.74809346E12, 4.55], [1.7480955E12, 4.016666666666667], [1.7480889E12, 6.533333333333333], [1.74809214E12, 4.816666666666666], [1.74808668E12, 16.466666666666665], [1.74809112E12, 5.383333333333334], [1.74809556E12, 3.95], [1.74809334E12, 4.633333333333334], [1.74809436E12, 4.366666666666666], [1.74808566E12, 27.366666666666667], [1.74808788E12, 10.916666666666666], [1.7480901E12, 5.783333333333333], [1.74809232E12, 4.916666666666667], [1.74809472E12, 4.266666666666667], [1.74808584E12, 24.85], [1.74809574E12, 4.0], [1.74808686E12, 15.366666666666667], [1.74808908E12, 6.45], [1.7480913E12, 5.433333333333334], [1.74809352E12, 4.566666666666666], [1.74808704E12, 14.85], [1.74809028E12, 5.85], [1.74808806E12, 10.45], [1.7480925E12, 4.716666666666667], [1.74809454E12, 4.35], [1.74808632E12, 18.716666666666665], [1.7480952E12, 4.083333333333333], [1.74808956E12, 6.066666666666666], [1.74809178E12, 4.866666666666666], [1.74808734E12, 13.533333333333333], [1.74809076E12, 5.55], [1.748094E12, 4.45], [1.7480853E12, 45.0], [1.74808752E12, 11.75], [1.74808854E12, 7.483333333333333], [1.74809298E12, 4.733333333333333], [1.74809502E12, 4.05], [1.7480865E12, 17.383333333333333], [1.74808872E12, 6.933333333333334], [1.74809538E12, 4.083333333333333], [1.74808974E12, 6.166666666666667], [1.74809196E12, 5.1], [1.7480877E12, 11.466666666666667], [1.74809094E12, 5.466666666666667], [1.74809316E12, 4.716666666666667], [1.74809418E12, 4.366666666666666], [1.74808548E12, 33.2], [1.74808992E12, 5.966666666666667]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74809586E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.3166666666666667, "minX": 1.74808518E12, "maxY": 51.45, "series": [{"data": [[1.74808518E12, 35.63333333333333], [1.74808536E12, 39.35], [1.74809424E12, 4.25], [1.74808638E12, 18.083333333333332], [1.7480886E12, 7.233333333333333], [1.74809082E12, 5.383333333333334], [1.74809304E12, 4.666666666666667], [1.74809526E12, 3.9833333333333334], [1.74808656E12, 16.816666666666666], [1.7480898E12, 6.05], [1.74808758E12, 11.65], [1.74809202E12, 4.883333333333334], [1.74809406E12, 4.466666666666667], [1.748091E12, 5.35], [1.74808554E12, 31.183333333333334], [1.74808776E12, 11.016666666666667], [1.74809442E12, 4.366666666666666], [1.74808878E12, 6.766666666666667], [1.74809322E12, 4.533333333333333], [1.74809544E12, 3.95], [1.74808674E12, 16.15], [1.74808896E12, 6.433333333333334], [1.74808998E12, 6.016666666666667], [1.7480922E12, 4.933333333333334], [1.74809148E12, 5.216666666666667], [1.7480949E12, 4.266666666666667], [1.74808602E12, 22.25], [1.74808824E12, 9.933333333333334], [1.74808926E12, 6.25], [1.74808722E12, 14.016666666666667], [1.74809268E12, 4.716666666666667], [1.74809046E12, 5.7], [1.7480937E12, 4.4], [1.74808944E12, 6.383333333333334], [1.74808842E12, 8.433333333333334], [1.74809166E12, 4.916666666666667], [1.74809064E12, 5.5], [1.74809508E12, 4.2], [1.7480862E12, 20.233333333333334], [1.74809286E12, 4.65], [1.74809388E12, 4.516666666666667], [1.7480874E12, 13.383333333333333], [1.74808962E12, 6.133333333333334], [1.74809184E12, 5.133333333333334], [1.74808728E12, 13.733333333333333], [1.74809052E12, 5.683333333333334], [1.74809394E12, 4.466666666666667], [1.74809274E12, 4.683333333333334], [1.7480883E12, 9.5], [1.74809496E12, 4.183333333333334], [1.74808848E12, 7.616666666666666], [1.74808626E12, 19.183333333333334], [1.7480895E12, 6.316666666666666], [1.74809172E12, 5.066666666666666], [1.74808746E12, 12.2], [1.7480907E12, 5.583333333333333], [1.74809292E12, 4.616666666666666], [1.74808968E12, 6.216666666666667], [1.74809412E12, 4.216666666666667], [1.74808866E12, 7.0], [1.7480919E12, 4.866666666666666], [1.74809514E12, 4.066666666666666], [1.74808644E12, 17.716666666666665], [1.74809088E12, 5.466666666666667], [1.74808794E12, 10.85], [1.74809118E12, 5.283333333333333], [1.7480934E12, 4.4], [1.74808572E12, 26.666666666666668], [1.74809016E12, 5.733333333333333], [1.7480946E12, 4.216666666666667], [1.74808914E12, 6.55], [1.74809238E12, 4.733333333333333], [1.74808524E12, 51.45], [1.74809562E12, 4.016666666666667], [1.74808692E12, 15.333333333333334], [1.74809136E12, 5.016666666666667], [1.74809358E12, 4.583333333333333], [1.74809376E12, 4.383333333333334], [1.74809478E12, 4.116666666666666], [1.7480859E12, 23.833333333333332], [1.74808812E12, 10.366666666666667], [1.74809034E12, 5.716666666666667], [1.74809256E12, 4.75], [1.74808608E12, 21.5], [1.74809154E12, 5.266666666666667], [1.7480871E12, 14.433333333333334], [1.74808932E12, 6.25], [1.7480958E12, 3.9], [1.74809586E12, 1.3166666666666667], [1.74808698E12, 15.183333333333334], [1.7480892E12, 6.533333333333333], [1.74809022E12, 5.866666666666666], [1.74809244E12, 4.85], [1.74809364E12, 4.45], [1.74808818E12, 10.15], [1.74809142E12, 5.25], [1.74809466E12, 4.183333333333334], [1.74808596E12, 22.616666666666667], [1.7480904E12, 5.616666666666666], [1.74808938E12, 6.383333333333334], [1.74809262E12, 4.7], [1.74808716E12, 14.05], [1.7480916E12, 5.05], [1.74809382E12, 4.35], [1.74809484E12, 4.216666666666667], [1.74809058E12, 5.583333333333333], [1.7480928E12, 4.8], [1.74808614E12, 20.866666666666667], [1.74808836E12, 9.1], [1.7480931E12, 4.516666666666667], [1.74808542E12, 36.05], [1.74808764E12, 11.533333333333333], [1.74808986E12, 5.883333333333334], [1.74809208E12, 4.95], [1.7480943E12, 4.283333333333333], [1.7480856E12, 29.416666666666668], [1.74809532E12, 4.066666666666666], [1.74808662E12, 16.766666666666666], [1.74808884E12, 6.683333333333334], [1.74809106E12, 5.25], [1.74809328E12, 4.533333333333333], [1.7480868E12, 15.85], [1.74809568E12, 3.8666666666666667], [1.74809004E12, 5.966666666666667], [1.74808782E12, 11.05], [1.74809226E12, 5.0], [1.74809124E12, 5.233333333333333], [1.74809448E12, 4.333333333333333], [1.74808578E12, 25.6], [1.748088E12, 10.966666666666667], [1.74808902E12, 6.65], [1.74809346E12, 4.55], [1.7480955E12, 4.016666666666667], [1.7480889E12, 6.533333333333333], [1.74809214E12, 4.816666666666666], [1.74808668E12, 16.466666666666665], [1.74809112E12, 5.383333333333334], [1.74809556E12, 3.95], [1.74809334E12, 4.633333333333334], [1.74809436E12, 4.366666666666666], [1.74808566E12, 27.366666666666667], [1.74808788E12, 10.916666666666666], [1.7480901E12, 5.783333333333333], [1.74809232E12, 4.916666666666667], [1.74809472E12, 4.266666666666667], [1.74808584E12, 24.85], [1.74809574E12, 4.0], [1.74808686E12, 15.366666666666667], [1.74808908E12, 6.45], [1.7480913E12, 5.433333333333334], [1.74809352E12, 4.566666666666666], [1.74808704E12, 14.85], [1.74809028E12, 5.85], [1.74808806E12, 10.45], [1.7480925E12, 4.716666666666667], [1.74809454E12, 4.35], [1.74808632E12, 18.716666666666665], [1.7480952E12, 4.083333333333333], [1.74808956E12, 6.066666666666666], [1.74809178E12, 4.866666666666666], [1.74808734E12, 13.533333333333333], [1.74809076E12, 5.55], [1.748094E12, 4.45], [1.7480853E12, 45.0], [1.74808752E12, 11.75], [1.74808854E12, 7.483333333333333], [1.74809298E12, 4.733333333333333], [1.74809502E12, 4.05], [1.7480865E12, 17.383333333333333], [1.74808872E12, 6.933333333333334], [1.74809538E12, 4.083333333333333], [1.74808974E12, 6.166666666666667], [1.74809196E12, 5.1], [1.7480877E12, 11.466666666666667], [1.74809094E12, 5.466666666666667], [1.74809316E12, 4.716666666666667], [1.74809418E12, 4.366666666666666], [1.74808548E12, 33.2], [1.74808992E12, 5.966666666666667]], "isOverall": false, "label": "HTTP Request - enroll-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74809586E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.3166666666666667, "minX": 1.74808518E12, "maxY": 51.45, "series": [{"data": [[1.74808518E12, 35.63333333333333], [1.74808536E12, 39.35], [1.74809424E12, 4.25], [1.74808638E12, 18.083333333333332], [1.7480886E12, 7.233333333333333], [1.74809082E12, 5.383333333333334], [1.74809304E12, 4.666666666666667], [1.74809526E12, 3.9833333333333334], [1.74808656E12, 16.816666666666666], [1.7480898E12, 6.05], [1.74808758E12, 11.65], [1.74809202E12, 4.883333333333334], [1.74809406E12, 4.466666666666667], [1.748091E12, 5.35], [1.74808554E12, 31.183333333333334], [1.74808776E12, 11.016666666666667], [1.74809442E12, 4.366666666666666], [1.74808878E12, 6.766666666666667], [1.74809322E12, 4.533333333333333], [1.74809544E12, 3.95], [1.74808674E12, 16.15], [1.74808896E12, 6.433333333333334], [1.74808998E12, 6.016666666666667], [1.7480922E12, 4.933333333333334], [1.74809148E12, 5.216666666666667], [1.7480949E12, 4.266666666666667], [1.74808602E12, 22.25], [1.74808824E12, 9.933333333333334], [1.74808926E12, 6.25], [1.74808722E12, 14.016666666666667], [1.74809268E12, 4.716666666666667], [1.74809046E12, 5.7], [1.7480937E12, 4.4], [1.74808944E12, 6.383333333333334], [1.74808842E12, 8.433333333333334], [1.74809166E12, 4.916666666666667], [1.74809064E12, 5.5], [1.74809508E12, 4.2], [1.7480862E12, 20.233333333333334], [1.74809286E12, 4.65], [1.74809388E12, 4.516666666666667], [1.7480874E12, 13.383333333333333], [1.74808962E12, 6.133333333333334], [1.74809184E12, 5.133333333333334], [1.74808728E12, 13.733333333333333], [1.74809052E12, 5.683333333333334], [1.74809394E12, 4.466666666666667], [1.74809274E12, 4.683333333333334], [1.7480883E12, 9.5], [1.74809496E12, 4.183333333333334], [1.74808848E12, 7.616666666666666], [1.74808626E12, 19.183333333333334], [1.7480895E12, 6.316666666666666], [1.74809172E12, 5.066666666666666], [1.74808746E12, 12.2], [1.7480907E12, 5.583333333333333], [1.74809292E12, 4.616666666666666], [1.74808968E12, 6.216666666666667], [1.74809412E12, 4.216666666666667], [1.74808866E12, 7.0], [1.7480919E12, 4.866666666666666], [1.74809514E12, 4.066666666666666], [1.74808644E12, 17.716666666666665], [1.74809088E12, 5.466666666666667], [1.74808794E12, 10.85], [1.74809118E12, 5.283333333333333], [1.7480934E12, 4.4], [1.74808572E12, 26.666666666666668], [1.74809016E12, 5.733333333333333], [1.7480946E12, 4.216666666666667], [1.74808914E12, 6.55], [1.74809238E12, 4.733333333333333], [1.74808524E12, 51.45], [1.74809562E12, 4.016666666666667], [1.74808692E12, 15.333333333333334], [1.74809136E12, 5.016666666666667], [1.74809358E12, 4.583333333333333], [1.74809376E12, 4.383333333333334], [1.74809478E12, 4.116666666666666], [1.7480859E12, 23.833333333333332], [1.74808812E12, 10.366666666666667], [1.74809034E12, 5.716666666666667], [1.74809256E12, 4.75], [1.74808608E12, 21.5], [1.74809154E12, 5.266666666666667], [1.7480871E12, 14.433333333333334], [1.74808932E12, 6.25], [1.7480958E12, 3.9], [1.74809586E12, 1.3166666666666667], [1.74808698E12, 15.183333333333334], [1.7480892E12, 6.533333333333333], [1.74809022E12, 5.866666666666666], [1.74809244E12, 4.85], [1.74809364E12, 4.45], [1.74808818E12, 10.15], [1.74809142E12, 5.25], [1.74809466E12, 4.183333333333334], [1.74808596E12, 22.616666666666667], [1.7480904E12, 5.616666666666666], [1.74808938E12, 6.383333333333334], [1.74809262E12, 4.7], [1.74808716E12, 14.05], [1.7480916E12, 5.05], [1.74809382E12, 4.35], [1.74809484E12, 4.216666666666667], [1.74809058E12, 5.583333333333333], [1.7480928E12, 4.8], [1.74808614E12, 20.866666666666667], [1.74808836E12, 9.1], [1.7480931E12, 4.516666666666667], [1.74808542E12, 36.05], [1.74808764E12, 11.533333333333333], [1.74808986E12, 5.883333333333334], [1.74809208E12, 4.95], [1.7480943E12, 4.283333333333333], [1.7480856E12, 29.416666666666668], [1.74809532E12, 4.066666666666666], [1.74808662E12, 16.766666666666666], [1.74808884E12, 6.683333333333334], [1.74809106E12, 5.25], [1.74809328E12, 4.533333333333333], [1.7480868E12, 15.85], [1.74809568E12, 3.8666666666666667], [1.74809004E12, 5.966666666666667], [1.74808782E12, 11.05], [1.74809226E12, 5.0], [1.74809124E12, 5.233333333333333], [1.74809448E12, 4.333333333333333], [1.74808578E12, 25.6], [1.748088E12, 10.966666666666667], [1.74808902E12, 6.65], [1.74809346E12, 4.55], [1.7480955E12, 4.016666666666667], [1.7480889E12, 6.533333333333333], [1.74809214E12, 4.816666666666666], [1.74808668E12, 16.466666666666665], [1.74809112E12, 5.383333333333334], [1.74809556E12, 3.95], [1.74809334E12, 4.633333333333334], [1.74809436E12, 4.366666666666666], [1.74808566E12, 27.366666666666667], [1.74808788E12, 10.916666666666666], [1.7480901E12, 5.783333333333333], [1.74809232E12, 4.916666666666667], [1.74809472E12, 4.266666666666667], [1.74808584E12, 24.85], [1.74809574E12, 4.0], [1.74808686E12, 15.366666666666667], [1.74808908E12, 6.45], [1.7480913E12, 5.433333333333334], [1.74809352E12, 4.566666666666666], [1.74808704E12, 14.85], [1.74809028E12, 5.85], [1.74808806E12, 10.45], [1.7480925E12, 4.716666666666667], [1.74809454E12, 4.35], [1.74808632E12, 18.716666666666665], [1.7480952E12, 4.083333333333333], [1.74808956E12, 6.066666666666666], [1.74809178E12, 4.866666666666666], [1.74808734E12, 13.533333333333333], [1.74809076E12, 5.55], [1.748094E12, 4.45], [1.7480853E12, 45.0], [1.74808752E12, 11.75], [1.74808854E12, 7.483333333333333], [1.74809298E12, 4.733333333333333], [1.74809502E12, 4.05], [1.7480865E12, 17.383333333333333], [1.74808872E12, 6.933333333333334], [1.74809538E12, 4.083333333333333], [1.74808974E12, 6.166666666666667], [1.74809196E12, 5.1], [1.7480877E12, 11.466666666666667], [1.74809094E12, 5.466666666666667], [1.74809316E12, 4.716666666666667], [1.74809418E12, 4.366666666666666], [1.74808548E12, 33.2], [1.74808992E12, 5.966666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74809586E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

