/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 114.0, "minX": 0.0, "maxY": 2189.0, "series": [{"data": [[0.0, 114.0], [0.1, 120.0], [0.2, 122.0], [0.3, 124.0], [0.4, 126.0], [0.5, 128.0], [0.6, 130.0], [0.7, 132.0], [0.8, 133.0], [0.9, 134.0], [1.0, 136.0], [1.1, 138.0], [1.2, 140.0], [1.3, 141.0], [1.4, 142.0], [1.5, 143.0], [1.6, 145.0], [1.7, 146.0], [1.8, 147.0], [1.9, 149.0], [2.0, 150.0], [2.1, 150.0], [2.2, 152.0], [2.3, 153.0], [2.4, 153.0], [2.5, 153.0], [2.6, 154.0], [2.7, 155.0], [2.8, 155.0], [2.9, 157.0], [3.0, 158.0], [3.1, 159.0], [3.2, 160.0], [3.3, 161.0], [3.4, 162.0], [3.5, 163.0], [3.6, 164.0], [3.7, 165.0], [3.8, 166.0], [3.9, 167.0], [4.0, 167.0], [4.1, 167.0], [4.2, 168.0], [4.3, 169.0], [4.4, 170.0], [4.5, 170.0], [4.6, 171.0], [4.7, 172.0], [4.8, 172.0], [4.9, 173.0], [5.0, 174.0], [5.1, 174.0], [5.2, 175.0], [5.3, 176.0], [5.4, 176.0], [5.5, 177.0], [5.6, 178.0], [5.7, 179.0], [5.8, 179.0], [5.9, 180.0], [6.0, 180.0], [6.1, 181.0], [6.2, 182.0], [6.3, 183.0], [6.4, 183.0], [6.5, 183.0], [6.6, 184.0], [6.7, 185.0], [6.8, 186.0], [6.9, 186.0], [7.0, 187.0], [7.1, 187.0], [7.2, 188.0], [7.3, 188.0], [7.4, 189.0], [7.5, 190.0], [7.6, 190.0], [7.7, 191.0], [7.8, 191.0], [7.9, 192.0], [8.0, 192.0], [8.1, 193.0], [8.2, 194.0], [8.3, 194.0], [8.4, 195.0], [8.5, 195.0], [8.6, 196.0], [8.7, 197.0], [8.8, 197.0], [8.9, 197.0], [9.0, 198.0], [9.1, 198.0], [9.2, 199.0], [9.3, 199.0], [9.4, 200.0], [9.5, 200.0], [9.6, 201.0], [9.7, 201.0], [9.8, 202.0], [9.9, 202.0], [10.0, 203.0], [10.1, 203.0], [10.2, 204.0], [10.3, 204.0], [10.4, 205.0], [10.5, 205.0], [10.6, 206.0], [10.7, 206.0], [10.8, 207.0], [10.9, 207.0], [11.0, 207.0], [11.1, 208.0], [11.2, 208.0], [11.3, 209.0], [11.4, 210.0], [11.5, 210.0], [11.6, 211.0], [11.7, 212.0], [11.8, 212.0], [11.9, 213.0], [12.0, 214.0], [12.1, 214.0], [12.2, 215.0], [12.3, 215.0], [12.4, 216.0], [12.5, 216.0], [12.6, 217.0], [12.7, 217.0], [12.8, 217.0], [12.9, 218.0], [13.0, 218.0], [13.1, 219.0], [13.2, 219.0], [13.3, 219.0], [13.4, 220.0], [13.5, 220.0], [13.6, 221.0], [13.7, 221.0], [13.8, 222.0], [13.9, 222.0], [14.0, 223.0], [14.1, 223.0], [14.2, 223.0], [14.3, 224.0], [14.4, 224.0], [14.5, 225.0], [14.6, 226.0], [14.7, 226.0], [14.8, 227.0], [14.9, 227.0], [15.0, 228.0], [15.1, 228.0], [15.2, 229.0], [15.3, 229.0], [15.4, 229.0], [15.5, 230.0], [15.6, 230.0], [15.7, 231.0], [15.8, 231.0], [15.9, 232.0], [16.0, 232.0], [16.1, 233.0], [16.2, 233.0], [16.3, 234.0], [16.4, 234.0], [16.5, 235.0], [16.6, 235.0], [16.7, 236.0], [16.8, 236.0], [16.9, 236.0], [17.0, 237.0], [17.1, 237.0], [17.2, 238.0], [17.3, 238.0], [17.4, 239.0], [17.5, 239.0], [17.6, 240.0], [17.7, 240.0], [17.8, 241.0], [17.9, 241.0], [18.0, 242.0], [18.1, 242.0], [18.2, 243.0], [18.3, 243.0], [18.4, 244.0], [18.5, 244.0], [18.6, 245.0], [18.7, 245.0], [18.8, 246.0], [18.9, 247.0], [19.0, 247.0], [19.1, 247.0], [19.2, 248.0], [19.3, 248.0], [19.4, 249.0], [19.5, 249.0], [19.6, 250.0], [19.7, 250.0], [19.8, 250.0], [19.9, 251.0], [20.0, 251.0], [20.1, 252.0], [20.2, 252.0], [20.3, 252.0], [20.4, 253.0], [20.5, 254.0], [20.6, 254.0], [20.7, 255.0], [20.8, 255.0], [20.9, 256.0], [21.0, 256.0], [21.1, 257.0], [21.2, 257.0], [21.3, 258.0], [21.4, 258.0], [21.5, 259.0], [21.6, 259.0], [21.7, 260.0], [21.8, 260.0], [21.9, 261.0], [22.0, 261.0], [22.1, 262.0], [22.2, 262.0], [22.3, 262.0], [22.4, 263.0], [22.5, 263.0], [22.6, 264.0], [22.7, 264.0], [22.8, 265.0], [22.9, 265.0], [23.0, 266.0], [23.1, 266.0], [23.2, 266.0], [23.3, 267.0], [23.4, 267.0], [23.5, 268.0], [23.6, 268.0], [23.7, 269.0], [23.8, 269.0], [23.9, 269.0], [24.0, 270.0], [24.1, 270.0], [24.2, 271.0], [24.3, 271.0], [24.4, 272.0], [24.5, 272.0], [24.6, 272.0], [24.7, 273.0], [24.8, 274.0], [24.9, 274.0], [25.0, 274.0], [25.1, 275.0], [25.2, 275.0], [25.3, 276.0], [25.4, 276.0], [25.5, 277.0], [25.6, 277.0], [25.7, 278.0], [25.8, 278.0], [25.9, 279.0], [26.0, 279.0], [26.1, 280.0], [26.2, 280.0], [26.3, 281.0], [26.4, 281.0], [26.5, 282.0], [26.6, 282.0], [26.7, 282.0], [26.8, 283.0], [26.9, 284.0], [27.0, 284.0], [27.1, 285.0], [27.2, 285.0], [27.3, 285.0], [27.4, 286.0], [27.5, 286.0], [27.6, 286.0], [27.7, 287.0], [27.8, 287.0], [27.9, 288.0], [28.0, 288.0], [28.1, 288.0], [28.2, 289.0], [28.3, 289.0], [28.4, 290.0], [28.5, 290.0], [28.6, 291.0], [28.7, 291.0], [28.8, 292.0], [28.9, 292.0], [29.0, 293.0], [29.1, 293.0], [29.2, 293.0], [29.3, 294.0], [29.4, 294.0], [29.5, 295.0], [29.6, 295.0], [29.7, 296.0], [29.8, 296.0], [29.9, 296.0], [30.0, 297.0], [30.1, 297.0], [30.2, 298.0], [30.3, 298.0], [30.4, 299.0], [30.5, 299.0], [30.6, 300.0], [30.7, 300.0], [30.8, 301.0], [30.9, 301.0], [31.0, 302.0], [31.1, 302.0], [31.2, 303.0], [31.3, 303.0], [31.4, 303.0], [31.5, 304.0], [31.6, 304.0], [31.7, 305.0], [31.8, 306.0], [31.9, 306.0], [32.0, 307.0], [32.1, 307.0], [32.2, 308.0], [32.3, 308.0], [32.4, 309.0], [32.5, 310.0], [32.6, 310.0], [32.7, 311.0], [32.8, 311.0], [32.9, 312.0], [33.0, 312.0], [33.1, 312.0], [33.2, 313.0], [33.3, 313.0], [33.4, 314.0], [33.5, 315.0], [33.6, 315.0], [33.7, 316.0], [33.8, 316.0], [33.9, 317.0], [34.0, 317.0], [34.1, 318.0], [34.2, 318.0], [34.3, 319.0], [34.4, 319.0], [34.5, 320.0], [34.6, 320.0], [34.7, 320.0], [34.8, 321.0], [34.9, 321.0], [35.0, 322.0], [35.1, 322.0], [35.2, 323.0], [35.3, 323.0], [35.4, 323.0], [35.5, 324.0], [35.6, 324.0], [35.7, 324.0], [35.8, 325.0], [35.9, 325.0], [36.0, 326.0], [36.1, 326.0], [36.2, 327.0], [36.3, 327.0], [36.4, 328.0], [36.5, 328.0], [36.6, 329.0], [36.7, 329.0], [36.8, 329.0], [36.9, 330.0], [37.0, 330.0], [37.1, 331.0], [37.2, 331.0], [37.3, 332.0], [37.4, 332.0], [37.5, 332.0], [37.6, 333.0], [37.7, 333.0], [37.8, 334.0], [37.9, 334.0], [38.0, 335.0], [38.1, 335.0], [38.2, 335.0], [38.3, 336.0], [38.4, 337.0], [38.5, 337.0], [38.6, 337.0], [38.7, 338.0], [38.8, 338.0], [38.9, 339.0], [39.0, 339.0], [39.1, 340.0], [39.2, 340.0], [39.3, 341.0], [39.4, 341.0], [39.5, 342.0], [39.6, 343.0], [39.7, 343.0], [39.8, 344.0], [39.9, 344.0], [40.0, 345.0], [40.1, 345.0], [40.2, 345.0], [40.3, 346.0], [40.4, 346.0], [40.5, 347.0], [40.6, 347.0], [40.7, 347.0], [40.8, 348.0], [40.9, 348.0], [41.0, 349.0], [41.1, 349.0], [41.2, 349.0], [41.3, 350.0], [41.4, 350.0], [41.5, 351.0], [41.6, 351.0], [41.7, 351.0], [41.8, 352.0], [41.9, 352.0], [42.0, 353.0], [42.1, 353.0], [42.2, 354.0], [42.3, 354.0], [42.4, 355.0], [42.5, 355.0], [42.6, 355.0], [42.7, 356.0], [42.8, 356.0], [42.9, 357.0], [43.0, 357.0], [43.1, 358.0], [43.2, 358.0], [43.3, 359.0], [43.4, 359.0], [43.5, 360.0], [43.6, 361.0], [43.7, 361.0], [43.8, 362.0], [43.9, 362.0], [44.0, 363.0], [44.1, 363.0], [44.2, 364.0], [44.3, 364.0], [44.4, 364.0], [44.5, 365.0], [44.6, 366.0], [44.7, 366.0], [44.8, 367.0], [44.9, 368.0], [45.0, 369.0], [45.1, 369.0], [45.2, 369.0], [45.3, 370.0], [45.4, 370.0], [45.5, 371.0], [45.6, 371.0], [45.7, 372.0], [45.8, 372.0], [45.9, 373.0], [46.0, 373.0], [46.1, 373.0], [46.2, 374.0], [46.3, 374.0], [46.4, 375.0], [46.5, 375.0], [46.6, 376.0], [46.7, 376.0], [46.8, 377.0], [46.9, 377.0], [47.0, 378.0], [47.1, 379.0], [47.2, 379.0], [47.3, 380.0], [47.4, 380.0], [47.5, 381.0], [47.6, 382.0], [47.7, 382.0], [47.8, 383.0], [47.9, 383.0], [48.0, 384.0], [48.1, 384.0], [48.2, 385.0], [48.3, 385.0], [48.4, 386.0], [48.5, 386.0], [48.6, 387.0], [48.7, 388.0], [48.8, 388.0], [48.9, 389.0], [49.0, 390.0], [49.1, 391.0], [49.2, 391.0], [49.3, 392.0], [49.4, 393.0], [49.5, 393.0], [49.6, 394.0], [49.7, 394.0], [49.8, 395.0], [49.9, 395.0], [50.0, 396.0], [50.1, 397.0], [50.2, 398.0], [50.3, 398.0], [50.4, 399.0], [50.5, 400.0], [50.6, 400.0], [50.7, 401.0], [50.8, 401.0], [50.9, 402.0], [51.0, 403.0], [51.1, 403.0], [51.2, 404.0], [51.3, 405.0], [51.4, 405.0], [51.5, 406.0], [51.6, 406.0], [51.7, 407.0], [51.8, 407.0], [51.9, 408.0], [52.0, 408.0], [52.1, 408.0], [52.2, 409.0], [52.3, 409.0], [52.4, 410.0], [52.5, 410.0], [52.6, 410.0], [52.7, 411.0], [52.8, 412.0], [52.9, 412.0], [53.0, 413.0], [53.1, 413.0], [53.2, 414.0], [53.3, 414.0], [53.4, 415.0], [53.5, 415.0], [53.6, 416.0], [53.7, 416.0], [53.8, 417.0], [53.9, 418.0], [54.0, 418.0], [54.1, 419.0], [54.2, 419.0], [54.3, 420.0], [54.4, 421.0], [54.5, 421.0], [54.6, 422.0], [54.7, 422.0], [54.8, 422.0], [54.9, 423.0], [55.0, 424.0], [55.1, 424.0], [55.2, 425.0], [55.3, 425.0], [55.4, 426.0], [55.5, 426.0], [55.6, 427.0], [55.7, 427.0], [55.8, 428.0], [55.9, 428.0], [56.0, 429.0], [56.1, 429.0], [56.2, 430.0], [56.3, 430.0], [56.4, 431.0], [56.5, 432.0], [56.6, 432.0], [56.7, 433.0], [56.8, 434.0], [56.9, 434.0], [57.0, 435.0], [57.1, 435.0], [57.2, 435.0], [57.3, 436.0], [57.4, 437.0], [57.5, 437.0], [57.6, 438.0], [57.7, 439.0], [57.8, 439.0], [57.9, 440.0], [58.0, 441.0], [58.1, 441.0], [58.2, 441.0], [58.3, 442.0], [58.4, 442.0], [58.5, 443.0], [58.6, 444.0], [58.7, 445.0], [58.8, 446.0], [58.9, 446.0], [59.0, 447.0], [59.1, 448.0], [59.2, 449.0], [59.3, 450.0], [59.4, 451.0], [59.5, 451.0], [59.6, 452.0], [59.7, 453.0], [59.8, 454.0], [59.9, 454.0], [60.0, 454.0], [60.1, 455.0], [60.2, 456.0], [60.3, 457.0], [60.4, 457.0], [60.5, 458.0], [60.6, 458.0], [60.7, 459.0], [60.8, 460.0], [60.9, 460.0], [61.0, 461.0], [61.1, 462.0], [61.2, 462.0], [61.3, 463.0], [61.4, 463.0], [61.5, 464.0], [61.6, 464.0], [61.7, 465.0], [61.8, 466.0], [61.9, 467.0], [62.0, 467.0], [62.1, 468.0], [62.2, 469.0], [62.3, 470.0], [62.4, 471.0], [62.5, 471.0], [62.6, 472.0], [62.7, 472.0], [62.8, 473.0], [62.9, 474.0], [63.0, 474.0], [63.1, 475.0], [63.2, 476.0], [63.3, 476.0], [63.4, 477.0], [63.5, 478.0], [63.6, 478.0], [63.7, 479.0], [63.8, 480.0], [63.9, 480.0], [64.0, 480.0], [64.1, 481.0], [64.2, 482.0], [64.3, 482.0], [64.4, 482.0], [64.5, 483.0], [64.6, 484.0], [64.7, 484.0], [64.8, 485.0], [64.9, 485.0], [65.0, 486.0], [65.1, 487.0], [65.2, 487.0], [65.3, 488.0], [65.4, 488.0], [65.5, 489.0], [65.6, 490.0], [65.7, 490.0], [65.8, 491.0], [65.9, 492.0], [66.0, 492.0], [66.1, 493.0], [66.2, 494.0], [66.3, 495.0], [66.4, 496.0], [66.5, 497.0], [66.6, 498.0], [66.7, 499.0], [66.8, 499.0], [66.9, 500.0], [67.0, 501.0], [67.1, 502.0], [67.2, 503.0], [67.3, 503.0], [67.4, 504.0], [67.5, 504.0], [67.6, 505.0], [67.7, 506.0], [67.8, 507.0], [67.9, 507.0], [68.0, 509.0], [68.1, 510.0], [68.2, 511.0], [68.3, 512.0], [68.4, 513.0], [68.5, 514.0], [68.6, 514.0], [68.7, 515.0], [68.8, 516.0], [68.9, 516.0], [69.0, 517.0], [69.1, 517.0], [69.2, 518.0], [69.3, 519.0], [69.4, 520.0], [69.5, 521.0], [69.6, 521.0], [69.7, 522.0], [69.8, 523.0], [69.9, 524.0], [70.0, 525.0], [70.1, 526.0], [70.2, 527.0], [70.3, 527.0], [70.4, 528.0], [70.5, 529.0], [70.6, 530.0], [70.7, 532.0], [70.8, 532.0], [70.9, 533.0], [71.0, 534.0], [71.1, 535.0], [71.2, 536.0], [71.3, 537.0], [71.4, 537.0], [71.5, 539.0], [71.6, 540.0], [71.7, 540.0], [71.8, 541.0], [71.9, 542.0], [72.0, 543.0], [72.1, 544.0], [72.2, 545.0], [72.3, 546.0], [72.4, 546.0], [72.5, 547.0], [72.6, 548.0], [72.7, 548.0], [72.8, 550.0], [72.9, 551.0], [73.0, 552.0], [73.1, 553.0], [73.2, 553.0], [73.3, 555.0], [73.4, 555.0], [73.5, 556.0], [73.6, 557.0], [73.7, 558.0], [73.8, 559.0], [73.9, 559.0], [74.0, 560.0], [74.1, 561.0], [74.2, 562.0], [74.3, 563.0], [74.4, 564.0], [74.5, 565.0], [74.6, 566.0], [74.7, 567.0], [74.8, 567.0], [74.9, 568.0], [75.0, 569.0], [75.1, 570.0], [75.2, 571.0], [75.3, 572.0], [75.4, 573.0], [75.5, 574.0], [75.6, 576.0], [75.7, 577.0], [75.8, 578.0], [75.9, 579.0], [76.0, 580.0], [76.1, 581.0], [76.2, 582.0], [76.3, 583.0], [76.4, 584.0], [76.5, 585.0], [76.6, 586.0], [76.7, 587.0], [76.8, 589.0], [76.9, 590.0], [77.0, 591.0], [77.1, 592.0], [77.2, 594.0], [77.3, 594.0], [77.4, 595.0], [77.5, 596.0], [77.6, 597.0], [77.7, 599.0], [77.8, 600.0], [77.9, 600.0], [78.0, 601.0], [78.1, 603.0], [78.2, 604.0], [78.3, 605.0], [78.4, 606.0], [78.5, 607.0], [78.6, 608.0], [78.7, 609.0], [78.8, 610.0], [78.9, 611.0], [79.0, 612.0], [79.1, 613.0], [79.2, 614.0], [79.3, 616.0], [79.4, 617.0], [79.5, 618.0], [79.6, 620.0], [79.7, 621.0], [79.8, 622.0], [79.9, 623.0], [80.0, 625.0], [80.1, 626.0], [80.2, 627.0], [80.3, 628.0], [80.4, 630.0], [80.5, 630.0], [80.6, 631.0], [80.7, 632.0], [80.8, 633.0], [80.9, 635.0], [81.0, 636.0], [81.1, 637.0], [81.2, 639.0], [81.3, 639.0], [81.4, 641.0], [81.5, 642.0], [81.6, 643.0], [81.7, 644.0], [81.8, 646.0], [81.9, 647.0], [82.0, 649.0], [82.1, 650.0], [82.2, 652.0], [82.3, 653.0], [82.4, 654.0], [82.5, 655.0], [82.6, 656.0], [82.7, 657.0], [82.8, 658.0], [82.9, 659.0], [83.0, 661.0], [83.1, 662.0], [83.2, 664.0], [83.3, 666.0], [83.4, 667.0], [83.5, 668.0], [83.6, 670.0], [83.7, 670.0], [83.8, 671.0], [83.9, 672.0], [84.0, 673.0], [84.1, 675.0], [84.2, 676.0], [84.3, 677.0], [84.4, 678.0], [84.5, 680.0], [84.6, 681.0], [84.7, 682.0], [84.8, 684.0], [84.9, 685.0], [85.0, 686.0], [85.1, 688.0], [85.2, 690.0], [85.3, 691.0], [85.4, 693.0], [85.5, 695.0], [85.6, 697.0], [85.7, 698.0], [85.8, 700.0], [85.9, 702.0], [86.0, 702.0], [86.1, 704.0], [86.2, 707.0], [86.3, 707.0], [86.4, 709.0], [86.5, 711.0], [86.6, 713.0], [86.7, 715.0], [86.8, 717.0], [86.9, 718.0], [87.0, 720.0], [87.1, 721.0], [87.2, 723.0], [87.3, 724.0], [87.4, 725.0], [87.5, 728.0], [87.6, 730.0], [87.7, 731.0], [87.8, 733.0], [87.9, 735.0], [88.0, 737.0], [88.1, 739.0], [88.2, 743.0], [88.3, 744.0], [88.4, 746.0], [88.5, 747.0], [88.6, 748.0], [88.7, 750.0], [88.8, 752.0], [88.9, 754.0], [89.0, 755.0], [89.1, 758.0], [89.2, 759.0], [89.3, 761.0], [89.4, 763.0], [89.5, 765.0], [89.6, 767.0], [89.7, 770.0], [89.8, 771.0], [89.9, 774.0], [90.0, 777.0], [90.1, 778.0], [90.2, 781.0], [90.3, 783.0], [90.4, 784.0], [90.5, 787.0], [90.6, 789.0], [90.7, 792.0], [90.8, 795.0], [90.9, 798.0], [91.0, 800.0], [91.1, 803.0], [91.2, 807.0], [91.3, 810.0], [91.4, 814.0], [91.5, 815.0], [91.6, 818.0], [91.7, 820.0], [91.8, 823.0], [91.9, 825.0], [92.0, 828.0], [92.1, 831.0], [92.2, 833.0], [92.3, 836.0], [92.4, 840.0], [92.5, 841.0], [92.6, 844.0], [92.7, 846.0], [92.8, 850.0], [92.9, 854.0], [93.0, 858.0], [93.1, 859.0], [93.2, 862.0], [93.3, 865.0], [93.4, 867.0], [93.5, 870.0], [93.6, 873.0], [93.7, 875.0], [93.8, 877.0], [93.9, 880.0], [94.0, 882.0], [94.1, 885.0], [94.2, 887.0], [94.3, 891.0], [94.4, 894.0], [94.5, 897.0], [94.6, 899.0], [94.7, 904.0], [94.8, 908.0], [94.9, 914.0], [95.0, 916.0], [95.1, 921.0], [95.2, 925.0], [95.3, 930.0], [95.4, 936.0], [95.5, 940.0], [95.6, 944.0], [95.7, 949.0], [95.8, 954.0], [95.9, 958.0], [96.0, 963.0], [96.1, 968.0], [96.2, 978.0], [96.3, 986.0], [96.4, 990.0], [96.5, 994.0], [96.6, 1000.0], [96.7, 1007.0], [96.8, 1014.0], [96.9, 1018.0], [97.0, 1024.0], [97.1, 1034.0], [97.2, 1045.0], [97.3, 1055.0], [97.4, 1064.0], [97.5, 1069.0], [97.6, 1081.0], [97.7, 1092.0], [97.8, 1106.0], [97.9, 1116.0], [98.0, 1127.0], [98.1, 1133.0], [98.2, 1140.0], [98.3, 1146.0], [98.4, 1158.0], [98.5, 1170.0], [98.6, 1191.0], [98.7, 1207.0], [98.8, 1224.0], [98.9, 1241.0], [99.0, 1260.0], [99.1, 1271.0], [99.2, 1299.0], [99.3, 1314.0], [99.4, 1350.0], [99.5, 1401.0], [99.6, 1439.0], [99.7, 1481.0], [99.8, 1516.0], [99.9, 1583.0], [100.0, 2189.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[0.0, 341.0], [0.1, 345.0], [0.2, 346.0], [0.3, 346.0], [0.4, 347.0], [0.5, 348.0], [0.6, 348.0], [0.7, 349.0], [0.8, 350.0], [0.9, 350.0], [1.0, 350.0], [1.1, 351.0], [1.2, 351.0], [1.3, 351.0], [1.4, 351.0], [1.5, 352.0], [1.6, 352.0], [1.7, 352.0], [1.8, 352.0], [1.9, 352.0], [2.0, 353.0], [2.1, 353.0], [2.2, 353.0], [2.3, 353.0], [2.4, 353.0], [2.5, 353.0], [2.6, 353.0], [2.7, 354.0], [2.8, 354.0], [2.9, 354.0], [3.0, 354.0], [3.1, 354.0], [3.2, 354.0], [3.3, 354.0], [3.4, 354.0], [3.5, 354.0], [3.6, 354.0], [3.7, 354.0], [3.8, 354.0], [3.9, 354.0], [4.0, 355.0], [4.1, 355.0], [4.2, 355.0], [4.3, 355.0], [4.4, 355.0], [4.5, 355.0], [4.6, 355.0], [4.7, 355.0], [4.8, 355.0], [4.9, 355.0], [5.0, 355.0], [5.1, 355.0], [5.2, 355.0], [5.3, 355.0], [5.4, 355.0], [5.5, 355.0], [5.6, 355.0], [5.7, 355.0], [5.8, 355.0], [5.9, 355.0], [6.0, 356.0], [6.1, 356.0], [6.2, 356.0], [6.3, 356.0], [6.4, 356.0], [6.5, 356.0], [6.6, 356.0], [6.7, 356.0], [6.8, 356.0], [6.9, 356.0], [7.0, 356.0], [7.1, 356.0], [7.2, 356.0], [7.3, 356.0], [7.4, 356.0], [7.5, 356.0], [7.6, 356.0], [7.7, 356.0], [7.8, 356.0], [7.9, 356.0], [8.0, 356.0], [8.1, 356.0], [8.2, 356.0], [8.3, 356.0], [8.4, 356.0], [8.5, 356.0], [8.6, 356.0], [8.7, 357.0], [8.8, 357.0], [8.9, 357.0], [9.0, 357.0], [9.1, 357.0], [9.2, 357.0], [9.3, 357.0], [9.4, 357.0], [9.5, 357.0], [9.6, 357.0], [9.7, 357.0], [9.8, 357.0], [9.9, 357.0], [10.0, 357.0], [10.1, 357.0], [10.2, 357.0], [10.3, 357.0], [10.4, 357.0], [10.5, 357.0], [10.6, 357.0], [10.7, 357.0], [10.8, 357.0], [10.9, 357.0], [11.0, 357.0], [11.1, 357.0], [11.2, 357.0], [11.3, 357.0], [11.4, 357.0], [11.5, 357.0], [11.6, 357.0], [11.7, 357.0], [11.8, 357.0], [11.9, 357.0], [12.0, 357.0], [12.1, 357.0], [12.2, 357.0], [12.3, 357.0], [12.4, 358.0], [12.5, 358.0], [12.6, 358.0], [12.7, 358.0], [12.8, 358.0], [12.9, 358.0], [13.0, 358.0], [13.1, 358.0], [13.2, 358.0], [13.3, 358.0], [13.4, 358.0], [13.5, 358.0], [13.6, 358.0], [13.7, 358.0], [13.8, 358.0], [13.9, 358.0], [14.0, 358.0], [14.1, 358.0], [14.2, 358.0], [14.3, 358.0], [14.4, 358.0], [14.5, 358.0], [14.6, 358.0], [14.7, 358.0], [14.8, 358.0], [14.9, 358.0], [15.0, 358.0], [15.1, 358.0], [15.2, 358.0], [15.3, 358.0], [15.4, 358.0], [15.5, 358.0], [15.6, 358.0], [15.7, 358.0], [15.8, 358.0], [15.9, 358.0], [16.0, 358.0], [16.1, 358.0], [16.2, 358.0], [16.3, 358.0], [16.4, 358.0], [16.5, 358.0], [16.6, 358.0], [16.7, 358.0], [16.8, 358.0], [16.9, 358.0], [17.0, 358.0], [17.1, 359.0], [17.2, 359.0], [17.3, 359.0], [17.4, 359.0], [17.5, 359.0], [17.6, 359.0], [17.7, 359.0], [17.8, 359.0], [17.9, 359.0], [18.0, 359.0], [18.1, 359.0], [18.2, 359.0], [18.3, 359.0], [18.4, 359.0], [18.5, 359.0], [18.6, 359.0], [18.7, 359.0], [18.8, 359.0], [18.9, 359.0], [19.0, 359.0], [19.1, 359.0], [19.2, 359.0], [19.3, 359.0], [19.4, 359.0], [19.5, 359.0], [19.6, 359.0], [19.7, 359.0], [19.8, 359.0], [19.9, 359.0], [20.0, 359.0], [20.1, 359.0], [20.2, 359.0], [20.3, 359.0], [20.4, 359.0], [20.5, 359.0], [20.6, 359.0], [20.7, 359.0], [20.8, 359.0], [20.9, 359.0], [21.0, 359.0], [21.1, 359.0], [21.2, 359.0], [21.3, 359.0], [21.4, 359.0], [21.5, 359.0], [21.6, 359.0], [21.7, 359.0], [21.8, 359.0], [21.9, 359.0], [22.0, 359.0], [22.1, 359.0], [22.2, 359.0], [22.3, 359.0], [22.4, 359.0], [22.5, 359.0], [22.6, 360.0], [22.7, 360.0], [22.8, 360.0], [22.9, 360.0], [23.0, 360.0], [23.1, 360.0], [23.2, 360.0], [23.3, 360.0], [23.4, 360.0], [23.5, 360.0], [23.6, 360.0], [23.7, 360.0], [23.8, 360.0], [23.9, 360.0], [24.0, 360.0], [24.1, 360.0], [24.2, 360.0], [24.3, 360.0], [24.4, 360.0], [24.5, 360.0], [24.6, 360.0], [24.7, 360.0], [24.8, 360.0], [24.9, 360.0], [25.0, 360.0], [25.1, 360.0], [25.2, 360.0], [25.3, 360.0], [25.4, 360.0], [25.5, 360.0], [25.6, 360.0], [25.7, 360.0], [25.8, 360.0], [25.9, 360.0], [26.0, 360.0], [26.1, 360.0], [26.2, 360.0], [26.3, 360.0], [26.4, 360.0], [26.5, 360.0], [26.6, 360.0], [26.7, 360.0], [26.8, 360.0], [26.9, 360.0], [27.0, 360.0], [27.1, 360.0], [27.2, 360.0], [27.3, 360.0], [27.4, 360.0], [27.5, 360.0], [27.6, 360.0], [27.7, 360.0], [27.8, 360.0], [27.9, 360.0], [28.0, 360.0], [28.1, 360.0], [28.2, 360.0], [28.3, 360.0], [28.4, 360.0], [28.5, 360.0], [28.6, 360.0], [28.7, 360.0], [28.8, 361.0], [28.9, 361.0], [29.0, 361.0], [29.1, 361.0], [29.2, 361.0], [29.3, 361.0], [29.4, 361.0], [29.5, 361.0], [29.6, 361.0], [29.7, 361.0], [29.8, 361.0], [29.9, 361.0], [30.0, 361.0], [30.1, 361.0], [30.2, 361.0], [30.3, 361.0], [30.4, 361.0], [30.5, 361.0], [30.6, 361.0], [30.7, 361.0], [30.8, 361.0], [30.9, 361.0], [31.0, 361.0], [31.1, 361.0], [31.2, 361.0], [31.3, 361.0], [31.4, 361.0], [31.5, 361.0], [31.6, 361.0], [31.7, 361.0], [31.8, 361.0], [31.9, 361.0], [32.0, 361.0], [32.1, 361.0], [32.2, 361.0], [32.3, 361.0], [32.4, 361.0], [32.5, 361.0], [32.6, 361.0], [32.7, 361.0], [32.8, 361.0], [32.9, 361.0], [33.0, 361.0], [33.1, 361.0], [33.2, 361.0], [33.3, 361.0], [33.4, 361.0], [33.5, 361.0], [33.6, 361.0], [33.7, 361.0], [33.8, 361.0], [33.9, 361.0], [34.0, 361.0], [34.1, 361.0], [34.2, 361.0], [34.3, 361.0], [34.4, 361.0], [34.5, 361.0], [34.6, 361.0], [34.7, 361.0], [34.8, 361.0], [34.9, 361.0], [35.0, 361.0], [35.1, 361.0], [35.2, 361.0], [35.3, 361.0], [35.4, 361.0], [35.5, 361.0], [35.6, 361.0], [35.7, 361.0], [35.8, 361.0], [35.9, 362.0], [36.0, 362.0], [36.1, 362.0], [36.2, 362.0], [36.3, 362.0], [36.4, 362.0], [36.5, 362.0], [36.6, 362.0], [36.7, 362.0], [36.8, 362.0], [36.9, 362.0], [37.0, 362.0], [37.1, 362.0], [37.2, 362.0], [37.3, 362.0], [37.4, 362.0], [37.5, 362.0], [37.6, 362.0], [37.7, 362.0], [37.8, 362.0], [37.9, 362.0], [38.0, 362.0], [38.1, 362.0], [38.2, 362.0], [38.3, 362.0], [38.4, 362.0], [38.5, 362.0], [38.6, 362.0], [38.7, 362.0], [38.8, 362.0], [38.9, 362.0], [39.0, 362.0], [39.1, 362.0], [39.2, 362.0], [39.3, 362.0], [39.4, 362.0], [39.5, 362.0], [39.6, 362.0], [39.7, 362.0], [39.8, 362.0], [39.9, 362.0], [40.0, 362.0], [40.1, 362.0], [40.2, 362.0], [40.3, 362.0], [40.4, 362.0], [40.5, 362.0], [40.6, 362.0], [40.7, 362.0], [40.8, 362.0], [40.9, 362.0], [41.0, 362.0], [41.1, 362.0], [41.2, 362.0], [41.3, 362.0], [41.4, 362.0], [41.5, 362.0], [41.6, 362.0], [41.7, 362.0], [41.8, 362.0], [41.9, 362.0], [42.0, 362.0], [42.1, 362.0], [42.2, 362.0], [42.3, 362.0], [42.4, 362.0], [42.5, 362.0], [42.6, 362.0], [42.7, 362.0], [42.8, 362.0], [42.9, 362.0], [43.0, 362.0], [43.1, 363.0], [43.2, 363.0], [43.3, 363.0], [43.4, 363.0], [43.5, 363.0], [43.6, 363.0], [43.7, 363.0], [43.8, 363.0], [43.9, 363.0], [44.0, 363.0], [44.1, 363.0], [44.2, 363.0], [44.3, 363.0], [44.4, 363.0], [44.5, 363.0], [44.6, 363.0], [44.7, 363.0], [44.8, 363.0], [44.9, 363.0], [45.0, 363.0], [45.1, 363.0], [45.2, 363.0], [45.3, 363.0], [45.4, 363.0], [45.5, 363.0], [45.6, 363.0], [45.7, 363.0], [45.8, 363.0], [45.9, 363.0], [46.0, 363.0], [46.1, 363.0], [46.2, 363.0], [46.3, 363.0], [46.4, 363.0], [46.5, 363.0], [46.6, 363.0], [46.7, 363.0], [46.8, 363.0], [46.9, 363.0], [47.0, 363.0], [47.1, 363.0], [47.2, 363.0], [47.3, 363.0], [47.4, 363.0], [47.5, 363.0], [47.6, 363.0], [47.7, 363.0], [47.8, 363.0], [47.9, 363.0], [48.0, 363.0], [48.1, 363.0], [48.2, 363.0], [48.3, 363.0], [48.4, 363.0], [48.5, 363.0], [48.6, 363.0], [48.7, 363.0], [48.8, 363.0], [48.9, 363.0], [49.0, 363.0], [49.1, 363.0], [49.2, 363.0], [49.3, 363.0], [49.4, 363.0], [49.5, 363.0], [49.6, 363.0], [49.7, 363.0], [49.8, 363.0], [49.9, 363.0], [50.0, 363.0], [50.1, 363.0], [50.2, 363.0], [50.3, 363.0], [50.4, 363.0], [50.5, 363.0], [50.6, 364.0], [50.7, 364.0], [50.8, 364.0], [50.9, 364.0], [51.0, 364.0], [51.1, 364.0], [51.2, 364.0], [51.3, 364.0], [51.4, 364.0], [51.5, 364.0], [51.6, 364.0], [51.7, 364.0], [51.8, 364.0], [51.9, 364.0], [52.0, 364.0], [52.1, 364.0], [52.2, 364.0], [52.3, 364.0], [52.4, 364.0], [52.5, 364.0], [52.6, 364.0], [52.7, 364.0], [52.8, 364.0], [52.9, 364.0], [53.0, 364.0], [53.1, 364.0], [53.2, 364.0], [53.3, 364.0], [53.4, 364.0], [53.5, 364.0], [53.6, 364.0], [53.7, 364.0], [53.8, 364.0], [53.9, 364.0], [54.0, 364.0], [54.1, 364.0], [54.2, 364.0], [54.3, 364.0], [54.4, 364.0], [54.5, 364.0], [54.6, 364.0], [54.7, 364.0], [54.8, 364.0], [54.9, 364.0], [55.0, 364.0], [55.1, 364.0], [55.2, 364.0], [55.3, 364.0], [55.4, 364.0], [55.5, 364.0], [55.6, 364.0], [55.7, 364.0], [55.8, 364.0], [55.9, 364.0], [56.0, 364.0], [56.1, 364.0], [56.2, 364.0], [56.3, 364.0], [56.4, 364.0], [56.5, 364.0], [56.6, 364.0], [56.7, 364.0], [56.8, 364.0], [56.9, 364.0], [57.0, 364.0], [57.1, 364.0], [57.2, 364.0], [57.3, 364.0], [57.4, 364.0], [57.5, 364.0], [57.6, 364.0], [57.7, 364.0], [57.8, 364.0], [57.9, 364.0], [58.0, 365.0], [58.1, 365.0], [58.2, 365.0], [58.3, 365.0], [58.4, 365.0], [58.5, 365.0], [58.6, 365.0], [58.7, 365.0], [58.8, 365.0], [58.9, 365.0], [59.0, 365.0], [59.1, 365.0], [59.2, 365.0], [59.3, 365.0], [59.4, 365.0], [59.5, 365.0], [59.6, 365.0], [59.7, 365.0], [59.8, 365.0], [59.9, 365.0], [60.0, 365.0], [60.1, 365.0], [60.2, 365.0], [60.3, 365.0], [60.4, 365.0], [60.5, 365.0], [60.6, 365.0], [60.7, 365.0], [60.8, 365.0], [60.9, 365.0], [61.0, 365.0], [61.1, 365.0], [61.2, 365.0], [61.3, 365.0], [61.4, 365.0], [61.5, 365.0], [61.6, 365.0], [61.7, 365.0], [61.8, 365.0], [61.9, 365.0], [62.0, 365.0], [62.1, 365.0], [62.2, 365.0], [62.3, 365.0], [62.4, 365.0], [62.5, 365.0], [62.6, 365.0], [62.7, 365.0], [62.8, 365.0], [62.9, 365.0], [63.0, 365.0], [63.1, 365.0], [63.2, 365.0], [63.3, 365.0], [63.4, 365.0], [63.5, 365.0], [63.6, 365.0], [63.7, 365.0], [63.8, 365.0], [63.9, 365.0], [64.0, 365.0], [64.1, 365.0], [64.2, 365.0], [64.3, 365.0], [64.4, 365.0], [64.5, 365.0], [64.6, 365.0], [64.7, 365.0], [64.8, 365.0], [64.9, 365.0], [65.0, 365.0], [65.1, 365.0], [65.2, 365.0], [65.3, 365.0], [65.4, 365.0], [65.5, 366.0], [65.6, 366.0], [65.7, 366.0], [65.8, 366.0], [65.9, 366.0], [66.0, 366.0], [66.1, 366.0], [66.2, 366.0], [66.3, 366.0], [66.4, 366.0], [66.5, 366.0], [66.6, 366.0], [66.7, 366.0], [66.8, 366.0], [66.9, 366.0], [67.0, 366.0], [67.1, 366.0], [67.2, 366.0], [67.3, 366.0], [67.4, 366.0], [67.5, 366.0], [67.6, 366.0], [67.7, 366.0], [67.8, 366.0], [67.9, 366.0], [68.0, 366.0], [68.1, 366.0], [68.2, 366.0], [68.3, 366.0], [68.4, 366.0], [68.5, 366.0], [68.6, 366.0], [68.7, 366.0], [68.8, 366.0], [68.9, 366.0], [69.0, 366.0], [69.1, 366.0], [69.2, 366.0], [69.3, 366.0], [69.4, 366.0], [69.5, 366.0], [69.6, 366.0], [69.7, 366.0], [69.8, 366.0], [69.9, 366.0], [70.0, 366.0], [70.1, 366.0], [70.2, 366.0], [70.3, 366.0], [70.4, 366.0], [70.5, 366.0], [70.6, 366.0], [70.7, 366.0], [70.8, 366.0], [70.9, 366.0], [71.0, 366.0], [71.1, 366.0], [71.2, 366.0], [71.3, 366.0], [71.4, 366.0], [71.5, 366.0], [71.6, 366.0], [71.7, 366.0], [71.8, 366.0], [71.9, 366.0], [72.0, 366.0], [72.1, 366.0], [72.2, 366.0], [72.3, 366.0], [72.4, 366.0], [72.5, 366.0], [72.6, 367.0], [72.7, 367.0], [72.8, 367.0], [72.9, 367.0], [73.0, 367.0], [73.1, 367.0], [73.2, 367.0], [73.3, 367.0], [73.4, 367.0], [73.5, 367.0], [73.6, 367.0], [73.7, 367.0], [73.8, 367.0], [73.9, 367.0], [74.0, 367.0], [74.1, 367.0], [74.2, 367.0], [74.3, 367.0], [74.4, 367.0], [74.5, 367.0], [74.6, 367.0], [74.7, 367.0], [74.8, 367.0], [74.9, 367.0], [75.0, 367.0], [75.1, 367.0], [75.2, 367.0], [75.3, 367.0], [75.4, 367.0], [75.5, 367.0], [75.6, 367.0], [75.7, 367.0], [75.8, 367.0], [75.9, 367.0], [76.0, 367.0], [76.1, 367.0], [76.2, 367.0], [76.3, 367.0], [76.4, 367.0], [76.5, 367.0], [76.6, 367.0], [76.7, 367.0], [76.8, 367.0], [76.9, 367.0], [77.0, 367.0], [77.1, 367.0], [77.2, 367.0], [77.3, 367.0], [77.4, 367.0], [77.5, 367.0], [77.6, 367.0], [77.7, 367.0], [77.8, 367.0], [77.9, 367.0], [78.0, 367.0], [78.1, 367.0], [78.2, 367.0], [78.3, 367.0], [78.4, 367.0], [78.5, 367.0], [78.6, 367.0], [78.7, 367.0], [78.8, 367.0], [78.9, 367.0], [79.0, 367.0], [79.1, 367.0], [79.2, 368.0], [79.3, 368.0], [79.4, 368.0], [79.5, 368.0], [79.6, 368.0], [79.7, 368.0], [79.8, 368.0], [79.9, 368.0], [80.0, 368.0], [80.1, 368.0], [80.2, 368.0], [80.3, 368.0], [80.4, 368.0], [80.5, 368.0], [80.6, 368.0], [80.7, 368.0], [80.8, 368.0], [80.9, 368.0], [81.0, 368.0], [81.1, 368.0], [81.2, 368.0], [81.3, 368.0], [81.4, 368.0], [81.5, 368.0], [81.6, 368.0], [81.7, 368.0], [81.8, 368.0], [81.9, 368.0], [82.0, 368.0], [82.1, 368.0], [82.2, 368.0], [82.3, 368.0], [82.4, 368.0], [82.5, 368.0], [82.6, 368.0], [82.7, 368.0], [82.8, 368.0], [82.9, 368.0], [83.0, 368.0], [83.1, 368.0], [83.2, 368.0], [83.3, 368.0], [83.4, 368.0], [83.5, 368.0], [83.6, 368.0], [83.7, 368.0], [83.8, 368.0], [83.9, 368.0], [84.0, 368.0], [84.1, 368.0], [84.2, 368.0], [84.3, 368.0], [84.4, 368.0], [84.5, 368.0], [84.6, 369.0], [84.7, 369.0], [84.8, 369.0], [84.9, 369.0], [85.0, 369.0], [85.1, 369.0], [85.2, 369.0], [85.3, 369.0], [85.4, 369.0], [85.5, 369.0], [85.6, 369.0], [85.7, 369.0], [85.8, 369.0], [85.9, 369.0], [86.0, 369.0], [86.1, 369.0], [86.2, 369.0], [86.3, 369.0], [86.4, 369.0], [86.5, 369.0], [86.6, 369.0], [86.7, 369.0], [86.8, 369.0], [86.9, 369.0], [87.0, 369.0], [87.1, 369.0], [87.2, 369.0], [87.3, 369.0], [87.4, 369.0], [87.5, 369.0], [87.6, 369.0], [87.7, 369.0], [87.8, 369.0], [87.9, 369.0], [88.0, 369.0], [88.1, 369.0], [88.2, 369.0], [88.3, 369.0], [88.4, 369.0], [88.5, 369.0], [88.6, 369.0], [88.7, 369.0], [88.8, 369.0], [88.9, 369.0], [89.0, 369.0], [89.1, 370.0], [89.2, 370.0], [89.3, 370.0], [89.4, 370.0], [89.5, 370.0], [89.6, 370.0], [89.7, 370.0], [89.8, 370.0], [89.9, 370.0], [90.0, 370.0], [90.1, 370.0], [90.2, 370.0], [90.3, 370.0], [90.4, 370.0], [90.5, 370.0], [90.6, 370.0], [90.7, 370.0], [90.8, 370.0], [90.9, 370.0], [91.0, 370.0], [91.1, 370.0], [91.2, 370.0], [91.3, 370.0], [91.4, 370.0], [91.5, 370.0], [91.6, 370.0], [91.7, 370.0], [91.8, 370.0], [91.9, 370.0], [92.0, 370.0], [92.1, 370.0], [92.2, 370.0], [92.3, 370.0], [92.4, 370.0], [92.5, 370.0], [92.6, 371.0], [92.7, 371.0], [92.8, 371.0], [92.9, 371.0], [93.0, 371.0], [93.1, 371.0], [93.2, 371.0], [93.3, 371.0], [93.4, 371.0], [93.5, 371.0], [93.6, 371.0], [93.7, 371.0], [93.8, 371.0], [93.9, 371.0], [94.0, 371.0], [94.1, 371.0], [94.2, 371.0], [94.3, 371.0], [94.4, 371.0], [94.5, 371.0], [94.6, 371.0], [94.7, 371.0], [94.8, 371.0], [94.9, 371.0], [95.0, 371.0], [95.1, 371.0], [95.2, 371.0], [95.3, 372.0], [95.4, 372.0], [95.5, 372.0], [95.6, 372.0], [95.7, 372.0], [95.8, 372.0], [95.9, 372.0], [96.0, 372.0], [96.1, 372.0], [96.2, 372.0], [96.3, 372.0], [96.4, 372.0], [96.5, 372.0], [96.6, 372.0], [96.7, 372.0], [96.8, 373.0], [96.9, 373.0], [97.0, 373.0], [97.1, 373.0], [97.2, 373.0], [97.3, 373.0], [97.4, 373.0], [97.5, 373.0], [97.6, 373.0], [97.7, 373.0], [97.8, 373.0], [97.9, 373.0], [98.0, 373.0], [98.1, 374.0], [98.2, 374.0], [98.3, 374.0], [98.4, 374.0], [98.5, 374.0], [98.6, 374.0], [98.7, 374.0], [98.8, 375.0], [98.9, 375.0], [99.0, 375.0], [99.1, 375.0], [99.2, 376.0], [99.3, 376.0], [99.4, 376.0], [99.5, 377.0], [99.6, 377.0], [99.7, 378.0], [99.8, 380.0], [99.9, 384.0]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 9996.0, "series": [{"data": [[2100.0, 1.0], [600.0, 801.0], [700.0, 519.0], [200.0, 2127.0], [800.0, 365.0], [900.0, 196.0], [1000.0, 117.0], [1100.0, 88.0], [300.0, 1987.0], [1200.0, 56.0], [1300.0, 29.0], [1400.0, 24.0], [1500.0, 18.0], [400.0, 1636.0], [100.0, 932.0], [1600.0, 6.0], [1700.0, 1.0], [1800.0, 1.0], [500.0, 1096.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[300.0, 9996.0], [400.0, 3.0], [500.0, 1.0]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 27.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 16693.0, "series": [{"data": [[0.0, 16693.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3280.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 27.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.74594822E12, "maxY": 1.0, "series": [{"data": [[1.7459493E12, 1.0], [1.74595254E12, 1.0], [1.74595152E12, 1.0], [1.74595596E12, 1.0], [1.74595032E12, 1.0], [1.74595356E12, 1.0], [1.74595134E12, 1.0], [1.74595494E12, 1.0], [1.74595578E12, 1.0], [1.74594948E12, 1.0], [1.7459517E12, 1.0], [1.74595392E12, 1.0], [1.74595374E12, 1.0], [1.74595476E12, 1.0], [1.74594828E12, 1.0], [1.7459505E12, 1.0], [1.74595272E12, 1.0], [1.7459556E12, 1.0], [1.74594996E12, 1.0], [1.74595218E12, 1.0], [1.7459544E12, 1.0], [1.74595422E12, 1.0], [1.74595458E12, 1.0], [1.74594876E12, 1.0], [1.74595098E12, 1.0], [1.7459532E12, 1.0], [1.74595236E12, 1.0], [1.74594912E12, 1.0], [1.74595014E12, 1.0], [1.74595116E12, 1.0], [1.74594894E12, 1.0], [1.74595338E12, 1.0], [1.74595542E12, 1.0], [1.74595446E12, 1.0], [1.74595464E12, 1.0], [1.74595566E12, 1.0], [1.745949E12, 1.0], [1.74595122E12, 1.0], [1.74595344E12, 1.0], [1.74595002E12, 1.0], [1.74595584E12, 1.0], [1.74595326E12, 1.0], [1.74595224E12, 1.0], [1.7459514E12, 1.0], [1.74595362E12, 1.0], [1.74594918E12, 1.0], [1.74595548E12, 1.0], [1.7459502E12, 1.0], [1.74595242E12, 1.0], [1.74595188E12, 1.0], [1.74594864E12, 1.0], [1.7459553E12, 1.0], [1.74594966E12, 1.0], [1.7459541E12, 1.0], [1.74595068E12, 1.0], [1.74594846E12, 1.0], [1.7459529E12, 1.0], [1.74594882E12, 1.0], [1.74595512E12, 1.0], [1.74595206E12, 1.0], [1.74595428E12, 1.0], [1.74595104E12, 1.0], [1.74595614E12, 1.0], [1.74595632E12, 1.0], [1.74594984E12, 1.0], [1.74595086E12, 1.0], [1.74595308E12, 1.0], [1.74595092E12, 1.0], [1.7459487E12, 1.0], [1.74595314E12, 1.0], [1.74595554E12, 1.0], [1.74594972E12, 1.0], [1.74595194E12, 1.0], [1.74595416E12, 1.0], [1.74595008E12, 1.0], [1.7459511E12, 1.0], [1.74595332E12, 1.0], [1.74595518E12, 1.0], [1.74595212E12, 1.0], [1.74595536E12, 1.0], [1.74594888E12, 1.0], [1.7459499E12, 1.0], [1.74595434E12, 1.0], [1.74595638E12, 1.0], [1.74594834E12, 1.0], [1.74595158E12, 1.0], [1.7459538E12, 1.0], [1.74595056E12, 1.0], [1.745955E12, 1.0], [1.74594936E12, 1.0], [1.74595038E12, 1.0], [1.7459526E12, 1.0], [1.7459562E12, 1.0], [1.74595398E12, 1.0], [1.74595482E12, 1.0], [1.74594852E12, 1.0], [1.74595074E12, 1.0], [1.74595296E12, 1.0], [1.74594954E12, 1.0], [1.74595278E12, 1.0], [1.74595602E12, 1.0], [1.74595176E12, 1.0], [1.7459496E12, 1.0], [1.74595626E12, 1.0], [1.74595062E12, 1.0], [1.74595284E12, 1.0], [1.74595164E12, 1.0], [1.7459484E12, 1.0], [1.74594942E12, 1.0], [1.74595386E12, 1.0], [1.74595524E12, 1.0], [1.74594978E12, 1.0], [1.74595608E12, 1.0], [1.74595302E12, 1.0], [1.745952E12, 1.0], [1.74594858E12, 1.0], [1.74595182E12, 1.0], [1.74595404E12, 1.0], [1.74595506E12, 1.0], [1.7459508E12, 1.0], [1.74595026E12, 1.0], [1.7459535E12, 1.0], [1.74595248E12, 1.0], [1.7459547E12, 1.0], [1.74594906E12, 1.0], [1.74595488E12, 1.0], [1.7459523E12, 1.0], [1.74595452E12, 1.0], [1.74595128E12, 1.0], [1.7459559E12, 1.0], [1.74595044E12, 1.0], [1.74595266E12, 1.0], [1.74594822E12, 1.0], [1.74595572E12, 1.0], [1.74595146E12, 1.0], [1.74595368E12, 1.0], [1.74594924E12, 1.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74595638E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 363.369199999999, "minX": 1.0, "maxY": 451.96750000000037, "series": [{"data": [[1.0, 451.96750000000037]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.0, 451.96750000000037]], "isOverall": false, "label": "Create CSR-Aggregated", "isController": false}, {"data": [[1.0, 363.369199999999]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}, {"data": [[1.0, 363.369199999999]], "isOverall": false, "label": "HTTP Request - enroll-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 918.1166666666667, "minX": 1.74594822E12, "maxY": 11648.466666666667, "series": [{"data": [[1.7459493E12, 11606.166666666666], [1.74595254E12, 10870.25], [1.74595152E12, 10618.25], [1.74595596E12, 11311.833333333334], [1.74595032E12, 10449.766666666666], [1.74595356E12, 10891.35], [1.74595134E12, 10176.666666666666], [1.74595494E12, 10744.316666666668], [1.74595578E12, 10575.883333333333], [1.74594948E12, 10575.883333333333], [1.7459517E12, 10891.416666666666], [1.74595392E12, 10891.416666666666], [1.74595374E12, 11480.166666666666], [1.74595476E12, 11311.85], [1.74594828E12, 10449.933333333332], [1.7459505E12, 10134.316666666668], [1.74595272E12, 10891.333333333334], [1.7459556E12, 10723.166666666666], [1.74594996E12, 10744.233333333334], [1.74595218E12, 11038.566666666668], [1.7459544E12, 10891.416666666666], [1.74595422E12, 10870.266666666666], [1.74595458E12, 10744.15], [1.74594876E12, 10870.25], [1.74595098E12, 10575.983333333334], [1.7459532E12, 10302.666666666666], [1.74595236E12, 10449.866666666667], [1.74594912E12, 11038.55], [1.74595014E12, 11164.616666666667], [1.74595116E12, 11480.166666666666], [1.74594894E12, 10744.316666666668], [1.74595338E12, 10596.983333333334], [1.74595542E12, 11206.95], [1.74595446E12, 10891.483333333334], [1.74595464E12, 10471.05], [1.74595566E12, 10618.216666666667], [1.745949E12, 10912.5], [1.74595122E12, 11038.583333333334], [1.74595344E12, 10891.4], [1.74595002E12, 10744.2], [1.74595584E12, 11185.716666666667], [1.74595326E12, 11311.883333333333], [1.74595224E12, 10575.883333333333], [1.7459514E12, 10449.883333333333], [1.74595362E12, 10891.35], [1.74594918E12, 10008.283333333333], [1.74595548E12, 10597.0], [1.7459502E12, 10765.316666666668], [1.74595242E12, 11206.85], [1.74595188E12, 11059.683333333332], [1.74594864E12, 10575.85], [1.7459553E12, 11332.983333333334], [1.74594966E12, 10744.216666666667], [1.7459541E12, 11311.816666666668], [1.74595068E12, 11038.666666666666], [1.74594846E12, 11332.966666666667], [1.7459529E12, 11038.533333333333], [1.74594882E12, 10912.566666666668], [1.74595512E12, 10428.716666666667], [1.74595206E12, 10723.1], [1.74595428E12, 10744.2], [1.74595104E12, 11206.916666666666], [1.74595614E12, 10029.4], [1.74595632E12, 11017.416666666666], [1.74594984E12, 10912.616666666667], [1.74595086E12, 10744.2], [1.74595308E12, 10618.2], [1.74595092E12, 10471.0], [1.7459487E12, 10765.383333333333], [1.74595314E12, 10302.716666666667], [1.74595554E12, 10155.55], [1.74594972E12, 11185.8], [1.74595194E12, 11164.683333333332], [1.74595416E12, 11354.133333333333], [1.74595008E12, 11038.5], [1.7459511E12, 10428.733333333334], [1.74595332E12, 10912.466666666667], [1.74595518E12, 11038.533333333333], [1.74595212E12, 11206.866666666667], [1.74595536E12, 10155.566666666668], [1.74594888E12, 11311.8], [1.7459499E12, 11185.866666666667], [1.74595434E12, 11332.883333333333], [1.74595638E12, 6623.066666666667], [1.74594834E12, 11332.966666666667], [1.74595158E12, 10870.183333333332], [1.7459538E12, 10744.15], [1.74595056E12, 10744.25], [1.745955E12, 10302.7], [1.74594936E12, 10765.383333333333], [1.74595038E12, 11017.45], [1.7459526E12, 10765.383333333333], [1.7459562E12, 10428.75], [1.74595398E12, 10723.166666666666], [1.74595482E12, 11354.066666666668], [1.74594852E12, 10597.033333333333], [1.74595074E12, 11185.716666666667], [1.74595296E12, 10281.533333333333], [1.74594954E12, 11332.95], [1.74595278E12, 11311.8], [1.74595602E12, 10618.233333333334], [1.74595176E12, 10302.683333333332], [1.7459496E12, 10618.216666666667], [1.74595626E12, 11059.7], [1.74595062E12, 10155.55], [1.74595284E12, 10765.35], [1.74595164E12, 10302.7], [1.7459484E12, 10891.416666666666], [1.74594942E12, 11332.85], [1.74595386E12, 11059.733333333334], [1.74595524E12, 10891.366666666667], [1.74594978E12, 10723.1], [1.74595608E12, 11017.416666666666], [1.74595302E12, 10302.683333333332], [1.745952E12, 10323.883333333333], [1.74594858E12, 10912.55], [1.74595182E12, 10449.833333333334], [1.74595404E12, 10323.85], [1.74595506E12, 10302.666666666666], [1.7459508E12, 11185.783333333333], [1.74595026E12, 10744.216666666667], [1.7459535E12, 11017.483333333334], [1.74595248E12, 11038.616666666667], [1.7459547E12, 10008.35], [1.74594906E12, 10723.1], [1.74595488E12, 11332.95], [1.7459523E12, 11185.85], [1.74595452E12, 10891.466666666667], [1.74595128E12, 10449.916666666666], [1.7459559E12, 10912.516666666666], [1.74595044E12, 10471.05], [1.74595266E12, 10744.216666666667], [1.74594822E12, 4562.616666666667], [1.74595572E12, 10597.033333333333], [1.74595146E12, 11017.516666666666], [1.74595368E12, 10891.466666666667], [1.74594924E12, 11648.466666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7459493E12, 2339.7166666666667], [1.74595254E12, 2191.633333333333], [1.74595152E12, 2132.4], [1.74595596E12, 2280.483333333333], [1.74595032E12, 2102.7833333333333], [1.74595356E12, 2191.633333333333], [1.74595134E12, 2043.55], [1.74595494E12, 2162.016666666667], [1.74595578E12, 2132.4], [1.74594948E12, 2132.4], [1.7459517E12, 2191.633333333333], [1.74595392E12, 2191.633333333333], [1.74595374E12, 2310.1], [1.74595476E12, 2280.483333333333], [1.74594828E12, 2102.7833333333333], [1.7459505E12, 2043.55], [1.74595272E12, 2191.633333333333], [1.7459556E12, 2162.016666666667], [1.74594996E12, 2162.016666666667], [1.74595218E12, 2221.25], [1.7459544E12, 2191.633333333333], [1.74595422E12, 2191.633333333333], [1.74595458E12, 2162.016666666667], [1.74594876E12, 2191.633333333333], [1.74595098E12, 2132.4], [1.7459532E12, 2073.1666666666665], [1.74595236E12, 2102.7833333333333], [1.74594912E12, 2221.25], [1.74595014E12, 2250.866666666667], [1.74595116E12, 2310.1], [1.74594894E12, 2162.016666666667], [1.74595338E12, 2132.4], [1.74595542E12, 2250.866666666667], [1.74595446E12, 2191.633333333333], [1.74595464E12, 2102.7833333333333], [1.74595566E12, 2132.4], [1.745949E12, 2191.633333333333], [1.74595122E12, 2221.25], [1.74595344E12, 2191.633333333333], [1.74595002E12, 2162.016666666667], [1.74595584E12, 2250.866666666667], [1.74595326E12, 2280.483333333333], [1.74595224E12, 2132.4], [1.7459514E12, 2102.7833333333333], [1.74595362E12, 2191.633333333333], [1.74594918E12, 2013.9333333333334], [1.74595548E12, 2132.4], [1.7459502E12, 2162.016666666667], [1.74595242E12, 2250.866666666667], [1.74595188E12, 2221.25], [1.74594864E12, 2132.4], [1.7459553E12, 2280.483333333333], [1.74594966E12, 2162.016666666667], [1.7459541E12, 2280.483333333333], [1.74595068E12, 2221.25], [1.74594846E12, 2280.483333333333], [1.7459529E12, 2221.25], [1.74594882E12, 2191.633333333333], [1.74595512E12, 2102.7833333333333], [1.74595206E12, 2162.016666666667], [1.74595428E12, 2162.016666666667], [1.74595104E12, 2250.866666666667], [1.74595614E12, 2013.9333333333334], [1.74595632E12, 2221.25], [1.74594984E12, 2191.633333333333], [1.74595086E12, 2162.016666666667], [1.74595308E12, 2132.4], [1.74595092E12, 2102.7833333333333], [1.7459487E12, 2162.016666666667], [1.74595314E12, 2073.1666666666665], [1.74595554E12, 2043.55], [1.74594972E12, 2250.866666666667], [1.74595194E12, 2250.866666666667], [1.74595416E12, 2280.483333333333], [1.74595008E12, 2221.25], [1.7459511E12, 2102.7833333333333], [1.74595332E12, 2191.633333333333], [1.74595518E12, 2221.25], [1.74595212E12, 2250.866666666667], [1.74595536E12, 2043.55], [1.74594888E12, 2280.483333333333], [1.7459499E12, 2250.866666666667], [1.74595434E12, 2280.483333333333], [1.74595638E12, 1332.75], [1.74594834E12, 2280.483333333333], [1.74595158E12, 2191.633333333333], [1.7459538E12, 2162.016666666667], [1.74595056E12, 2162.016666666667], [1.745955E12, 2073.1666666666665], [1.74594936E12, 2162.016666666667], [1.74595038E12, 2221.25], [1.7459526E12, 2162.016666666667], [1.7459562E12, 2102.7833333333333], [1.74595398E12, 2162.016666666667], [1.74595482E12, 2280.483333333333], [1.74594852E12, 2132.4], [1.74595074E12, 2250.866666666667], [1.74595296E12, 2073.1666666666665], [1.74594954E12, 2280.483333333333], [1.74595278E12, 2280.483333333333], [1.74595602E12, 2132.4], [1.74595176E12, 2073.1666666666665], [1.7459496E12, 2132.4], [1.74595626E12, 2221.25], [1.74595062E12, 2043.55], [1.74595284E12, 2162.016666666667], [1.74595164E12, 2073.1666666666665], [1.7459484E12, 2191.633333333333], [1.74594942E12, 2280.483333333333], [1.74595386E12, 2221.25], [1.74595524E12, 2191.633333333333], [1.74594978E12, 2162.016666666667], [1.74595608E12, 2221.25], [1.74595302E12, 2073.1666666666665], [1.745952E12, 2073.1666666666665], [1.74594858E12, 2191.633333333333], [1.74595182E12, 2102.7833333333333], [1.74595404E12, 2073.1666666666665], [1.74595506E12, 2073.1666666666665], [1.7459508E12, 2250.866666666667], [1.74595026E12, 2162.016666666667], [1.7459535E12, 2221.25], [1.74595248E12, 2221.25], [1.7459547E12, 2013.9333333333334], [1.74594906E12, 2162.016666666667], [1.74595488E12, 2280.483333333333], [1.7459523E12, 2250.866666666667], [1.74595452E12, 2191.633333333333], [1.74595128E12, 2102.7833333333333], [1.7459559E12, 2191.633333333333], [1.74595044E12, 2102.7833333333333], [1.74595266E12, 2162.016666666667], [1.74594822E12, 918.1166666666667], [1.74595572E12, 2132.4], [1.74595146E12, 2221.25], [1.74595368E12, 2191.633333333333], [1.74594924E12, 2339.7166666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74595638E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 350.07792207792204, "minX": 1.74594822E12, "maxY": 521.3529411764702, "series": [{"data": [[1.7459493E12, 407.1410256410257], [1.74595254E12, 458.7808219178081], [1.74595152E12, 460.2739726027398], [1.74595596E12, 413.67105263157885], [1.74595032E12, 478.098591549296], [1.74595356E12, 443.6351351351351], [1.74595134E12, 502.3857142857145], [1.74595494E12, 453.64383561643825], [1.74595578E12, 469.36619718309873], [1.74594948E12, 472.77464788732385], [1.7459517E12, 438.01351351351354], [1.74595392E12, 444.4459459459459], [1.74595374E12, 409.1794871794871], [1.74595476E12, 418.9868421052631], [1.74594828E12, 479.4084507042253], [1.7459505E12, 515.6764705882352], [1.74595272E12, 445.32432432432427], [1.7459556E12, 449.6944444444445], [1.74594996E12, 465.5753424657535], [1.74595218E12, 434.8933333333334], [1.7459544E12, 439.2162162162162], [1.74595422E12, 446.68493150684924], [1.74595458E12, 452.7123287671232], [1.74594876E12, 453.9589041095889], [1.74595098E12, 475.6901408450705], [1.7459532E12, 491.24285714285713], [1.74595236E12, 484.281690140845], [1.74594912E12, 440.80000000000007], [1.74595014E12, 430.26666666666665], [1.74595116E12, 410.025641025641], [1.74594894E12, 470.4520547945206], [1.74595338E12, 469.90277777777766], [1.74595542E12, 420.7792207792207], [1.74595446E12, 451.1081081081081], [1.74595464E12, 473.2777777777778], [1.74595566E12, 472.5342465753425], [1.745949E12, 446.36], [1.74595122E12, 438.64], [1.74595344E12, 441.3783783783783], [1.74595002E12, 457.63013698630135], [1.74595584E12, 424.3157894736841], [1.74595326E12, 417.47368421052624], [1.74595224E12, 477.50704225352115], [1.7459514E12, 485.3098591549295], [1.74595362E12, 447.391891891892], [1.74594918E12, 521.3529411764702], [1.74595548E12, 461.54166666666663], [1.7459502E12, 459.16216216216225], [1.74595242E12, 421.3376623376622], [1.74595188E12, 438.5394736842106], [1.74594864E12, 475.6197183098592], [1.7459553E12, 412.51948051948057], [1.74594966E12, 466.13698630137003], [1.7459541E12, 420.17105263157885], [1.74595068E12, 442.64000000000004], [1.74594846E12, 407.05194805194805], [1.7459529E12, 436.0800000000001], [1.74594882E12, 444.3200000000001], [1.74595512E12, 485.2285714285715], [1.74595206E12, 462.33333333333326], [1.74595428E12, 463.75342465753414], [1.74595104E12, 427.27272727272714], [1.74595614E12, 516.3478260869564], [1.74595632E12, 433.39189189189176], [1.74594984E12, 452.36000000000007], [1.74595086E12, 455.32876712328755], [1.74595308E12, 460.5616438356164], [1.74595092E12, 486.0], [1.7459487E12, 456.1351351351352], [1.74595314E12, 492.7857142857144], [1.74595554E12, 502.20289855072446], [1.74594972E12, 426.49999999999994], [1.74595194E12, 428.47999999999996], [1.74595416E12, 406.8333333333332], [1.74595008E12, 442.00000000000006], [1.7459511E12, 487.9428571428571], [1.74595332E12, 435.49333333333334], [1.74595518E12, 426.65333333333353], [1.74595212E12, 421.1818181818182], [1.74595536E12, 498.6231884057972], [1.74594888E12, 431.64473684210515], [1.7459499E12, 423.4078947368419], [1.74595434E12, 415.6493506493507], [1.74595638E12, 411.06666666666666], [1.74594834E12, 422.1298701298702], [1.74595158E12, 449.9178082191782], [1.7459538E12, 451.10958904109583], [1.74595056E12, 461.8630136986303], [1.745955E12, 489.3857142857142], [1.74594936E12, 452.9594594594594], [1.74595038E12, 446.45945945945937], [1.7459526E12, 449.45945945945954], [1.7459562E12, 479.5714285714286], [1.74595398E12, 457.5833333333333], [1.74595482E12, 405.0256410256411], [1.74594852E12, 482.45833333333337], [1.74595074E12, 420.6052631578946], [1.74595296E12, 498.47826086956536], [1.74594954E12, 417.5844155844156], [1.74595278E12, 416.6315789473684], [1.74595602E12, 458.08219178082186], [1.74595176E12, 497.21428571428567], [1.7459496E12, 463.7534246575342], [1.74595626E12, 424.31578947368416], [1.74595062E12, 502.1884057971015], [1.74595284E12, 454.6756756756756], [1.74595164E12, 501.04285714285714], [1.7459484E12, 451.6891891891891], [1.74594942E12, 418.84415584415575], [1.74595386E12, 430.8157894736843], [1.74595524E12, 447.3108108108108], [1.74594978E12, 460.15277777777766], [1.74595608E12, 437.78378378378386], [1.74595302E12, 489.1571428571428], [1.745952E12, 489.1549295774648], [1.74594858E12, 446.17333333333323], [1.74595182E12, 472.9718309859154], [1.74595404E12, 485.5352112676056], [1.74595506E12, 489.14285714285717], [1.7459508E12, 436.52631578947364], [1.74595026E12, 459.3698630136987], [1.7459535E12, 439.2027027027027], [1.74595248E12, 439.08000000000004], [1.7459547E12, 510.205882352941], [1.74594906E12, 469.44444444444457], [1.74595488E12, 409.5584415584414], [1.7459523E12, 422.80263157894717], [1.74595452E12, 442.06756756756766], [1.74595128E12, 478.15492957746477], [1.7459559E12, 437.0666666666668], [1.74595044E12, 471.95833333333326], [1.74595266E12, 460.6438356164383], [1.74594822E12, 465.64516129032256], [1.74595572E12, 462.3333333333332], [1.74595146E12, 442.95945945945954], [1.74595368E12, 435.1351351351352], [1.74594924E12, 395.8625]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.7459493E12, 358.759493670886], [1.74595254E12, 356.8783783783784], [1.74595152E12, 363.95833333333326], [1.74595596E12, 368.7012987012987], [1.74595032E12, 362.9436619718309], [1.74595356E12, 366.3918918918918], [1.74595134E12, 361.4057971014492], [1.74595494E12, 368.23287671232873], [1.74595578E12, 367.5972222222222], [1.74594948E12, 360.72222222222223], [1.7459517E12, 363.77027027027015], [1.74595392E12, 367.40540540540536], [1.74595374E12, 366.8205128205126], [1.74595476E12, 366.8311688311688], [1.74594828E12, 359.12676056338034], [1.7459505E12, 360.24637681159425], [1.74595272E12, 362.8648648648647], [1.7459556E12, 368.54794520547944], [1.74594996E12, 359.4109589041096], [1.74595218E12, 362.7066666666668], [1.7459544E12, 366.55405405405384], [1.74595422E12, 365.8108108108108], [1.74595458E12, 366.58904109589025], [1.74594876E12, 360.51351351351354], [1.74595098E12, 360.70833333333337], [1.7459532E12, 364.4428571428571], [1.74595236E12, 362.6338028169013], [1.74594912E12, 357.15999999999997], [1.74595014E12, 359.8157894736843], [1.74595116E12, 359.58974358974336], [1.74594894E12, 353.7123287671234], [1.74595338E12, 366.45833333333337], [1.74595542E12, 367.1052631578947], [1.74595446E12, 366.48648648648646], [1.74595464E12, 366.35211267605627], [1.74595566E12, 366.52777777777777], [1.745949E12, 357.6216216216216], [1.74595122E12, 360.16], [1.74595344E12, 365.3783783783784], [1.74595002E12, 358.86301369863025], [1.74595584E12, 366.8157894736842], [1.74595326E12, 365.01298701298686], [1.74595224E12, 363.0972222222222], [1.7459514E12, 362.7605633802816], [1.74595362E12, 366.55405405405423], [1.74594918E12, 359.11764705882354], [1.74595548E12, 366.62499999999994], [1.7459502E12, 359.5616438356165], [1.74595242E12, 363.5657894736843], [1.74595188E12, 365.05333333333334], [1.74594864E12, 360.25], [1.7459553E12, 366.2857142857142], [1.74594966E12, 359.28767123287673], [1.7459541E12, 365.42857142857144], [1.74595068E12, 357.98666666666674], [1.74594846E12, 359.0909090909091], [1.7459529E12, 365.7866666666667], [1.74594882E12, 358.47297297297297], [1.74595512E12, 365.7605633802816], [1.74595206E12, 364.41095890410975], [1.74595428E12, 361.41095890410946], [1.74595104E12, 359.7894736842106], [1.74595614E12, 363.80882352941165], [1.74595632E12, 369.28000000000003], [1.74594984E12, 360.01351351351354], [1.74595086E12, 360.52054794520546], [1.74595308E12, 365.1388888888889], [1.74595092E12, 359.9859154929578], [1.7459487E12, 360.6575342465753], [1.74595314E12, 366.7714285714286], [1.74595554E12, 367.63768115942025], [1.74594972E12, 359.22368421052636], [1.74595194E12, 362.51315789473665], [1.74595416E12, 365.2987012987015], [1.74595008E12, 360.7200000000001], [1.7459511E12, 360.47887323943655], [1.74595332E12, 366.6621621621622], [1.74595518E12, 366.82666666666654], [1.74595212E12, 362.4736842105264], [1.74595536E12, 367.1159420289855], [1.74594888E12, 350.07792207792204], [1.7459499E12, 361.7894736842106], [1.74595434E12, 361.83116883116884], [1.74595638E12, 369.6444444444444], [1.74594834E12, 359.0909090909091], [1.74595158E12, 363.1216216216217], [1.7459538E12, 363.47945205479454], [1.74595056E12, 362.10958904109583], [1.745955E12, 368.7428571428572], [1.74594936E12, 359.5342465753424], [1.74595038E12, 362.5466666666667], [1.7459526E12, 364.67123287671234], [1.7459562E12, 370.6760563380283], [1.74595398E12, 366.6164383561644], [1.74595482E12, 368.6233766233766], [1.74594852E12, 359.0972222222223], [1.74595074E12, 358.2368421052632], [1.74595296E12, 366.27142857142866], [1.74594954E12, 362.50649350649354], [1.74595278E12, 362.72727272727275], [1.74595602E12, 369.4722222222222], [1.74595176E12, 364.47142857142865], [1.7459496E12, 363.11111111111103], [1.74595626E12, 371.2666666666667], [1.74595062E12, 363.376811594203], [1.74595284E12, 364.91780821917814], [1.74595164E12, 360.9857142857141], [1.7459484E12, 359.62162162162156], [1.74594942E12, 361.99999999999983], [1.74595386E12, 366.12], [1.74595524E12, 369.1486486486486], [1.74594978E12, 361.2054794520548], [1.74595608E12, 363.8266666666665], [1.74595302E12, 365.39999999999986], [1.745952E12, 363.4714285714286], [1.74594858E12, 360.3783783783783], [1.74595182E12, 364.25352112676075], [1.74595404E12, 367.2714285714285], [1.74595506E12, 366.58571428571435], [1.7459508E12, 360.0], [1.74595026E12, 362.20547945205476], [1.7459535E12, 365.95999999999987], [1.74595248E12, 357.7733333333335], [1.7459547E12, 369.41176470588226], [1.74594906E12, 357.4657534246574], [1.74595488E12, 367.2467532467533], [1.7459523E12, 362.9605263157896], [1.74595452E12, 366.82432432432427], [1.74595128E12, 361.7746478873237], [1.7459559E12, 367.35135135135147], [1.74595044E12, 363.3661971830986], [1.74595266E12, 363.06849315068484], [1.74594822E12, 364.8064516129032], [1.74595572E12, 367.98611111111114], [1.74595146E12, 362.8533333333333], [1.74595368E12, 367.5945945945946], [1.74594924E12, 357.49367088607585]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74595638E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74594822E12, "maxY": 371.25333333333333, "series": [{"data": [[1.7459493E12, 0.0], [1.74595254E12, 0.0], [1.74595152E12, 0.0], [1.74595596E12, 0.0], [1.74595032E12, 0.0], [1.74595356E12, 0.0], [1.74595134E12, 0.0], [1.74595494E12, 0.0], [1.74595578E12, 0.0], [1.74594948E12, 0.0], [1.7459517E12, 0.0], [1.74595392E12, 0.0], [1.74595374E12, 0.0], [1.74595476E12, 0.0], [1.74594828E12, 0.0], [1.7459505E12, 0.0], [1.74595272E12, 0.0], [1.7459556E12, 0.0], [1.74594996E12, 0.0], [1.74595218E12, 0.0], [1.7459544E12, 0.0], [1.74595422E12, 0.0], [1.74595458E12, 0.0], [1.74594876E12, 0.0], [1.74595098E12, 0.0], [1.7459532E12, 0.0], [1.74595236E12, 0.0], [1.74594912E12, 0.0], [1.74595014E12, 0.0], [1.74595116E12, 0.0], [1.74594894E12, 0.0], [1.74595338E12, 0.0], [1.74595542E12, 0.0], [1.74595446E12, 0.0], [1.74595464E12, 0.0], [1.74595566E12, 0.0], [1.745949E12, 0.0], [1.74595122E12, 0.0], [1.74595344E12, 0.0], [1.74595002E12, 0.0], [1.74595584E12, 0.0], [1.74595326E12, 0.0], [1.74595224E12, 0.0], [1.7459514E12, 0.0], [1.74595362E12, 0.0], [1.74594918E12, 0.0], [1.74595548E12, 0.0], [1.7459502E12, 0.0], [1.74595242E12, 0.0], [1.74595188E12, 0.0], [1.74594864E12, 0.0], [1.7459553E12, 0.0], [1.74594966E12, 0.0], [1.7459541E12, 0.0], [1.74595068E12, 0.0], [1.74594846E12, 0.0], [1.7459529E12, 0.0], [1.74594882E12, 0.0], [1.74595512E12, 0.0], [1.74595206E12, 0.0], [1.74595428E12, 0.0], [1.74595104E12, 0.0], [1.74595614E12, 0.0], [1.74595632E12, 0.0], [1.74594984E12, 0.0], [1.74595086E12, 0.0], [1.74595308E12, 0.0], [1.74595092E12, 0.0], [1.7459487E12, 0.0], [1.74595314E12, 0.0], [1.74595554E12, 0.0], [1.74594972E12, 0.0], [1.74595194E12, 0.0], [1.74595416E12, 0.0], [1.74595008E12, 0.0], [1.7459511E12, 0.0], [1.74595332E12, 0.0], [1.74595518E12, 0.0], [1.74595212E12, 0.0], [1.74595536E12, 0.0], [1.74594888E12, 0.0], [1.7459499E12, 0.0], [1.74595434E12, 0.0], [1.74595638E12, 0.0], [1.74594834E12, 0.0], [1.74595158E12, 0.0], [1.7459538E12, 0.0], [1.74595056E12, 0.0], [1.745955E12, 0.0], [1.74594936E12, 0.0], [1.74595038E12, 0.0], [1.7459526E12, 0.0], [1.7459562E12, 0.0], [1.74595398E12, 0.0], [1.74595482E12, 0.0], [1.74594852E12, 0.0], [1.74595074E12, 0.0], [1.74595296E12, 0.0], [1.74594954E12, 0.0], [1.74595278E12, 0.0], [1.74595602E12, 0.0], [1.74595176E12, 0.0], [1.7459496E12, 0.0], [1.74595626E12, 0.0], [1.74595062E12, 0.0], [1.74595284E12, 0.0], [1.74595164E12, 0.0], [1.7459484E12, 0.0], [1.74594942E12, 0.0], [1.74595386E12, 0.0], [1.74595524E12, 0.0], [1.74594978E12, 0.0], [1.74595608E12, 0.0], [1.74595302E12, 0.0], [1.745952E12, 0.0], [1.74594858E12, 0.0], [1.74595182E12, 0.0], [1.74595404E12, 0.0], [1.74595506E12, 0.0], [1.7459508E12, 0.0], [1.74595026E12, 0.0], [1.7459535E12, 0.0], [1.74595248E12, 0.0], [1.7459547E12, 0.0], [1.74594906E12, 0.0], [1.74595488E12, 0.0], [1.7459523E12, 0.0], [1.74595452E12, 0.0], [1.74595128E12, 0.0], [1.7459559E12, 0.0], [1.74595044E12, 0.0], [1.74595266E12, 0.0], [1.74594822E12, 0.0], [1.74595572E12, 0.0], [1.74595146E12, 0.0], [1.74595368E12, 0.0], [1.74594924E12, 0.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.7459493E12, 358.74683544303804], [1.74595254E12, 356.8783783783784], [1.74595152E12, 363.9444444444444], [1.74595596E12, 368.7012987012987], [1.74595032E12, 362.9436619718309], [1.74595356E12, 366.37837837837833], [1.74595134E12, 361.39130434782606], [1.74595494E12, 368.23287671232873], [1.74595578E12, 367.5972222222222], [1.74594948E12, 360.69444444444446], [1.7459517E12, 363.7567567567568], [1.74595392E12, 367.40540540540536], [1.74595374E12, 366.8205128205126], [1.74595476E12, 366.8311688311688], [1.74594828E12, 359.08450704225373], [1.7459505E12, 360.24637681159425], [1.74595272E12, 362.85135135135124], [1.7459556E12, 368.54794520547944], [1.74594996E12, 359.3561643835615], [1.74595218E12, 362.6933333333334], [1.7459544E12, 366.55405405405384], [1.74595422E12, 365.7972972972972], [1.74595458E12, 366.58904109589025], [1.74594876E12, 360.4999999999999], [1.74595098E12, 360.70833333333337], [1.7459532E12, 364.4428571428571], [1.74595236E12, 362.619718309859], [1.74594912E12, 357.1333333333332], [1.74595014E12, 359.8157894736843], [1.74595116E12, 359.58974358974336], [1.74594894E12, 353.6575342465754], [1.74595338E12, 366.4444444444445], [1.74595542E12, 367.09210526315786], [1.74595446E12, 366.48648648648646], [1.74595464E12, 366.33802816901414], [1.74595566E12, 366.51388888888886], [1.745949E12, 357.6081081081081], [1.74595122E12, 360.16], [1.74595344E12, 365.36486486486484], [1.74595002E12, 358.8493150684932], [1.74595584E12, 366.8157894736842], [1.74595326E12, 364.97402597402595], [1.74595224E12, 363.0972222222222], [1.7459514E12, 362.7605633802816], [1.74595362E12, 366.52702702702703], [1.74594918E12, 359.05882352941177], [1.74595548E12, 366.6111111111112], [1.7459502E12, 359.5616438356165], [1.74595242E12, 363.5657894736843], [1.74595188E12, 365.05333333333334], [1.74594864E12, 360.23611111111114], [1.7459553E12, 366.2857142857142], [1.74594966E12, 359.26027397260265], [1.7459541E12, 365.42857142857144], [1.74595068E12, 357.98666666666674], [1.74594846E12, 359.02597402597394], [1.7459529E12, 365.7866666666667], [1.74594882E12, 358.4459459459461], [1.74595512E12, 365.7605633802816], [1.74595206E12, 364.41095890410975], [1.74595428E12, 361.41095890410946], [1.74595104E12, 359.7894736842106], [1.74595614E12, 363.80882352941165], [1.74595632E12, 369.28000000000003], [1.74594984E12, 360.01351351351354], [1.74595086E12, 360.52054794520546], [1.74595308E12, 365.12500000000006], [1.74595092E12, 359.9859154929578], [1.7459487E12, 360.64383561643854], [1.74595314E12, 366.7714285714286], [1.74595554E12, 367.623188405797], [1.74594972E12, 359.22368421052636], [1.74595194E12, 362.4736842105261], [1.74595416E12, 365.2987012987015], [1.74595008E12, 360.7066666666667], [1.7459511E12, 360.4507042253521], [1.74595332E12, 366.6621621621622], [1.74595518E12, 366.8133333333332], [1.74595212E12, 362.4736842105264], [1.74595536E12, 367.0724637681161], [1.74594888E12, 350.0649350649351], [1.7459499E12, 361.7763157894737], [1.74595434E12, 361.83116883116884], [1.74595638E12, 369.62222222222226], [1.74594834E12, 359.03896103896113], [1.74595158E12, 363.1216216216217], [1.7459538E12, 363.4657534246575], [1.74595056E12, 362.10958904109583], [1.745955E12, 368.7285714285715], [1.74594936E12, 359.52054794520546], [1.74595038E12, 362.52], [1.7459526E12, 364.6575342465755], [1.7459562E12, 370.6760563380283], [1.74595398E12, 366.58904109589037], [1.74595482E12, 368.6233766233766], [1.74594852E12, 359.05555555555554], [1.74595074E12, 358.2236842105262], [1.74595296E12, 366.27142857142866], [1.74594954E12, 362.4805194805196], [1.74595278E12, 362.72727272727275], [1.74595602E12, 369.4583333333334], [1.74595176E12, 364.45714285714286], [1.7459496E12, 363.0972222222223], [1.74595626E12, 371.25333333333333], [1.74595062E12, 363.376811594203], [1.74595284E12, 364.91780821917814], [1.74595164E12, 360.9857142857141], [1.7459484E12, 359.5810810810811], [1.74594942E12, 361.9870129870129], [1.74595386E12, 366.1066666666667], [1.74595524E12, 369.1081081081081], [1.74594978E12, 361.2054794520548], [1.74595608E12, 363.8266666666665], [1.74595302E12, 365.3857142857142], [1.745952E12, 363.44285714285724], [1.74594858E12, 360.3378378378378], [1.74595182E12, 364.25352112676075], [1.74595404E12, 367.257142857143], [1.74595506E12, 366.57142857142856], [1.7459508E12, 360.0], [1.74595026E12, 362.1780821917809], [1.7459535E12, 365.9333333333333], [1.74595248E12, 357.7733333333335], [1.7459547E12, 369.39705882352945], [1.74594906E12, 357.43835616438355], [1.74595488E12, 367.2467532467533], [1.7459523E12, 362.9473684210528], [1.74595452E12, 366.81081081081084], [1.74595128E12, 361.7464788732392], [1.7459559E12, 367.3378378378378], [1.74595044E12, 363.35211267605627], [1.74595266E12, 363.06849315068484], [1.74594822E12, 364.7096774193549], [1.74595572E12, 367.98611111111114], [1.74595146E12, 362.84000000000003], [1.74595368E12, 367.56756756756744], [1.74594924E12, 357.48101265822794]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74595638E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74594822E12, "maxY": 5.96774193548387, "series": [{"data": [[1.7459493E12, 0.0], [1.74595254E12, 0.0], [1.74595152E12, 0.0], [1.74595596E12, 0.0], [1.74595032E12, 0.0], [1.74595356E12, 0.0], [1.74595134E12, 0.0], [1.74595494E12, 0.0], [1.74595578E12, 0.0], [1.74594948E12, 0.0], [1.7459517E12, 0.0], [1.74595392E12, 0.0], [1.74595374E12, 0.0], [1.74595476E12, 0.0], [1.74594828E12, 0.0], [1.7459505E12, 0.0], [1.74595272E12, 0.0], [1.7459556E12, 0.0], [1.74594996E12, 0.0], [1.74595218E12, 0.0], [1.7459544E12, 0.0], [1.74595422E12, 0.0], [1.74595458E12, 0.0], [1.74594876E12, 0.0], [1.74595098E12, 0.0], [1.7459532E12, 0.0], [1.74595236E12, 0.0], [1.74594912E12, 0.0], [1.74595014E12, 0.0], [1.74595116E12, 0.0], [1.74594894E12, 0.0], [1.74595338E12, 0.0], [1.74595542E12, 0.0], [1.74595446E12, 0.0], [1.74595464E12, 0.0], [1.74595566E12, 0.0], [1.745949E12, 0.0], [1.74595122E12, 0.0], [1.74595344E12, 0.0], [1.74595002E12, 0.0], [1.74595584E12, 0.0], [1.74595326E12, 0.0], [1.74595224E12, 0.0], [1.7459514E12, 0.0], [1.74595362E12, 0.0], [1.74594918E12, 0.0], [1.74595548E12, 0.0], [1.7459502E12, 0.0], [1.74595242E12, 0.0], [1.74595188E12, 0.0], [1.74594864E12, 0.0], [1.7459553E12, 0.0], [1.74594966E12, 0.0], [1.7459541E12, 0.0], [1.74595068E12, 0.0], [1.74594846E12, 0.0], [1.7459529E12, 0.0], [1.74594882E12, 0.0], [1.74595512E12, 0.0], [1.74595206E12, 0.0], [1.74595428E12, 0.0], [1.74595104E12, 0.0], [1.74595614E12, 0.0], [1.74595632E12, 0.0], [1.74594984E12, 0.0], [1.74595086E12, 0.0], [1.74595308E12, 0.0], [1.74595092E12, 0.0], [1.7459487E12, 0.0], [1.74595314E12, 0.0], [1.74595554E12, 0.0], [1.74594972E12, 0.0], [1.74595194E12, 0.0], [1.74595416E12, 0.0], [1.74595008E12, 0.0], [1.7459511E12, 0.0], [1.74595332E12, 0.0], [1.74595518E12, 0.0], [1.74595212E12, 0.0], [1.74595536E12, 0.0], [1.74594888E12, 0.0], [1.7459499E12, 0.0], [1.74595434E12, 0.0], [1.74595638E12, 0.0], [1.74594834E12, 0.0], [1.74595158E12, 0.0], [1.7459538E12, 0.0], [1.74595056E12, 0.0], [1.745955E12, 0.0], [1.74594936E12, 0.0], [1.74595038E12, 0.0], [1.7459526E12, 0.0], [1.7459562E12, 0.0], [1.74595398E12, 0.0], [1.74595482E12, 0.0], [1.74594852E12, 0.0], [1.74595074E12, 0.0], [1.74595296E12, 0.0], [1.74594954E12, 0.0], [1.74595278E12, 0.0], [1.74595602E12, 0.0], [1.74595176E12, 0.0], [1.7459496E12, 0.0], [1.74595626E12, 0.0], [1.74595062E12, 0.0], [1.74595284E12, 0.0], [1.74595164E12, 0.0], [1.7459484E12, 0.0], [1.74594942E12, 0.0], [1.74595386E12, 0.0], [1.74595524E12, 0.0], [1.74594978E12, 0.0], [1.74595608E12, 0.0], [1.74595302E12, 0.0], [1.745952E12, 0.0], [1.74594858E12, 0.0], [1.74595182E12, 0.0], [1.74595404E12, 0.0], [1.74595506E12, 0.0], [1.7459508E12, 0.0], [1.74595026E12, 0.0], [1.7459535E12, 0.0], [1.74595248E12, 0.0], [1.7459547E12, 0.0], [1.74594906E12, 0.0], [1.74595488E12, 0.0], [1.7459523E12, 0.0], [1.74595452E12, 0.0], [1.74595128E12, 0.0], [1.7459559E12, 0.0], [1.74595044E12, 0.0], [1.74595266E12, 0.0], [1.74594822E12, 0.0], [1.74595572E12, 0.0], [1.74595146E12, 0.0], [1.74595368E12, 0.0], [1.74594924E12, 0.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.7459493E12, 0.0379746835443038], [1.74595254E12, 0.04054054054054056], [1.74595152E12, 0.0], [1.74595596E12, 0.03896103896103895], [1.74595032E12, 0.04225352112676057], [1.74595356E12, 0.04054054054054056], [1.74595134E12, 0.043478260869565216], [1.74595494E12, 0.0410958904109589], [1.74595578E12, 0.041666666666666664], [1.74594948E12, 0.04166666666666667], [1.7459517E12, 0.04054054054054056], [1.74595392E12, 0.04054054054054056], [1.74595374E12, 0.03846153846153848], [1.74595476E12, 0.03896103896103895], [1.74594828E12, 0.08450704225352113], [1.7459505E12, 0.04347826086956522], [1.74595272E12, 0.02702702702702703], [1.7459556E12, 0.027397260273972605], [1.74594996E12, 0.05479452054794521], [1.74595218E12, 0.040000000000000015], [1.7459544E12, 0.04054054054054056], [1.74595422E12, 0.04054054054054056], [1.74595458E12, 0.0410958904109589], [1.74594876E12, 0.054054054054054064], [1.74595098E12, 0.04166666666666667], [1.7459532E12, 0.04285714285714288], [1.74595236E12, 0.028169014084507043], [1.74594912E12, 0.05333333333333334], [1.74595014E12, 0.052631578947368425], [1.74595116E12, 0.05128205128205129], [1.74594894E12, 0.054794520547945216], [1.74595338E12, 0.041666666666666685], [1.74595542E12, 0.026315789473684213], [1.74595446E12, 0.05405405405405406], [1.74595464E12, 0.04225352112676058], [1.74595566E12, 0.041666666666666664], [1.745949E12, 0.04054054054054054], [1.74595122E12, 0.039999999999999994], [1.74595344E12, 0.04054054054054056], [1.74595002E12, 0.041095890410958916], [1.74595584E12, 0.026315789473684216], [1.74595326E12, 0.038961038961038974], [1.74595224E12, 0.041666666666666685], [1.7459514E12, 0.056338028169014086], [1.74595362E12, 0.05405405405405406], [1.74594918E12, 0.058823529411764705], [1.74595548E12, 0.02777777777777778], [1.7459502E12, 0.05479452054794521], [1.74595242E12, 0.052631578947368425], [1.74595188E12, 0.040000000000000015], [1.74594864E12, 0.04166666666666667], [1.7459553E12, 0.03896103896103895], [1.74594966E12, 0.05479452054794521], [1.7459541E12, 0.038961038961038974], [1.74595068E12, 0.04], [1.74594846E12, 0.05194805194805195], [1.7459529E12, 0.040000000000000015], [1.74594882E12, 0.04054054054054054], [1.74595512E12, 0.04225352112676058], [1.74595206E12, 0.04109589041095892], [1.74595428E12, 0.04109589041095892], [1.74595104E12, 0.03947368421052631], [1.74595614E12, 0.044117647058823525], [1.74595632E12, 0.02666666666666667], [1.74594984E12, 0.04054054054054054], [1.74595086E12, 0.0410958904109589], [1.74595308E12, 0.041666666666666685], [1.74595092E12, 0.04225352112676057], [1.7459487E12, 0.0410958904109589], [1.74595314E12, 0.02857142857142857], [1.74595554E12, 0.043478260869565216], [1.74594972E12, 0.039473684210526314], [1.74595194E12, 0.05263157894736846], [1.74595416E12, 0.02597402597402598], [1.74595008E12, 0.04], [1.7459511E12, 0.04225352112676057], [1.74595332E12, 0.04054054054054056], [1.74595518E12, 0.039999999999999994], [1.74595212E12, 0.03947368421052633], [1.74595536E12, 0.043478260869565216], [1.74594888E12, 0.05194805194805196], [1.7459499E12, 0.052631578947368425], [1.74595434E12, 0.038961038961038974], [1.74595638E12, 0.044444444444444446], [1.74594834E12, 0.05194805194805195], [1.74595158E12, 0.04054054054054056], [1.7459538E12, 0.04109589041095892], [1.74595056E12, 0.04109589041095891], [1.745955E12, 0.04285714285714288], [1.74594936E12, 0.04109589041095891], [1.74595038E12, 0.04], [1.7459526E12, 0.04109589041095892], [1.7459562E12, 0.04225352112676056], [1.74595398E12, 0.05479452054794521], [1.74595482E12, 0.038961038961038974], [1.74594852E12, 0.05555555555555556], [1.74595074E12, 0.03947368421052631], [1.74595296E12, 0.04285714285714288], [1.74594954E12, 0.05194805194805195], [1.74595278E12, 0.038961038961038974], [1.74595602E12, 0.05555555555555556], [1.74595176E12, 0.057142857142857176], [1.7459496E12, 0.05555555555555556], [1.74595626E12, 0.039999999999999994], [1.74595062E12, 0.04347826086956523], [1.74595284E12, 0.04109589041095892], [1.74595164E12, 0.04285714285714288], [1.7459484E12, 0.05405405405405406], [1.74594942E12, 0.05194805194805195], [1.74595386E12, 0.040000000000000015], [1.74595524E12, 0.040540540540540536], [1.74594978E12, 0.05479452054794521], [1.74595608E12, 0.026666666666666672], [1.74595302E12, 0.04285714285714288], [1.745952E12, 0.028571428571428588], [1.74594858E12, 0.05405405405405406], [1.74595182E12, 0.02816901408450706], [1.74595404E12, 0.04285714285714288], [1.74595506E12, 0.04285714285714286], [1.7459508E12, 0.052631578947368425], [1.74595026E12, 0.05479452054794521], [1.7459535E12, 0.040000000000000015], [1.74595248E12, 0.040000000000000015], [1.7459547E12, 0.044117647058823546], [1.74594906E12, 0.04109589041095891], [1.74595488E12, 0.03896103896103895], [1.7459523E12, 0.03947368421052633], [1.74595452E12, 0.04054054054054056], [1.74595128E12, 0.056338028169014086], [1.7459559E12, 0.040540540540540536], [1.74595044E12, 0.056338028169014086], [1.74595266E12, 0.04109589041095892], [1.74594822E12, 5.96774193548387], [1.74595572E12, 0.02777777777777778], [1.74595146E12, 0.05333333333333334], [1.74595368E12, 0.04054054054054056], [1.74594924E12, 0.037974683544303806]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74595638E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 114.0, "minX": 1.74594822E12, "maxY": 2189.0, "series": [{"data": [[1.7459493E12, 1261.0], [1.74595254E12, 1544.0], [1.74595152E12, 2189.0], [1.74595596E12, 1112.0], [1.74595032E12, 1056.0], [1.74595356E12, 1172.0], [1.74595134E12, 1266.0], [1.74595494E12, 1380.0], [1.74595578E12, 1228.0], [1.74594948E12, 1045.0], [1.7459517E12, 1367.0], [1.74595392E12, 1286.0], [1.74595374E12, 1314.0], [1.74595476E12, 1355.0], [1.74594828E12, 1487.0], [1.7459505E12, 1467.0], [1.74595272E12, 1442.0], [1.7459556E12, 1291.0], [1.74594996E12, 1644.0], [1.74595218E12, 1146.0], [1.7459544E12, 1153.0], [1.74595422E12, 1441.0], [1.74595458E12, 1165.0], [1.74594876E12, 1143.0], [1.74595098E12, 1138.0], [1.7459532E12, 1483.0], [1.74595236E12, 1421.0], [1.74594912E12, 1106.0], [1.74595014E12, 1024.0], [1.74595116E12, 1104.0], [1.74594894E12, 1170.0], [1.74595338E12, 1339.0], [1.74595542E12, 1507.0], [1.74595446E12, 1081.0], [1.74595464E12, 1834.0], [1.74595566E12, 1419.0], [1.745949E12, 1579.0], [1.74595122E12, 933.0], [1.74595344E12, 1439.0], [1.74595002E12, 1196.0], [1.74595584E12, 1202.0], [1.74595326E12, 1205.0], [1.74595224E12, 1418.0], [1.7459514E12, 1529.0], [1.74595362E12, 1119.0], [1.74594918E12, 1110.0], [1.74595548E12, 1124.0], [1.7459502E12, 1443.0], [1.74595242E12, 1108.0], [1.74595188E12, 1188.0], [1.74594864E12, 1295.0], [1.7459553E12, 912.0], [1.74594966E12, 1024.0], [1.7459541E12, 1085.0], [1.74595068E12, 1095.0], [1.74594846E12, 1082.0], [1.7459529E12, 1295.0], [1.74594882E12, 1602.0], [1.74595512E12, 1551.0], [1.74595206E12, 1602.0], [1.74595428E12, 1545.0], [1.74595104E12, 1403.0], [1.74595614E12, 1653.0], [1.74595632E12, 1409.0], [1.74594984E12, 1231.0], [1.74595086E12, 1542.0], [1.74595308E12, 1350.0], [1.74595092E12, 1507.0], [1.7459487E12, 1105.0], [1.74595314E12, 1138.0], [1.74595554E12, 1455.0], [1.74594972E12, 1217.0], [1.74595194E12, 1516.0], [1.74595416E12, 1207.0], [1.74595008E12, 1276.0], [1.7459511E12, 1168.0], [1.74595332E12, 1303.0], [1.74595518E12, 1140.0], [1.74595212E12, 1130.0], [1.74595536E12, 1131.0], [1.74594888E12, 1131.0], [1.7459499E12, 1171.0], [1.74595434E12, 1583.0], [1.74595638E12, 1247.0], [1.74594834E12, 1213.0], [1.74595158E12, 1503.0], [1.7459538E12, 1515.0], [1.74595056E12, 1284.0], [1.745955E12, 1756.0], [1.74594936E12, 1367.0], [1.74595038E12, 1195.0], [1.7459526E12, 1247.0], [1.7459562E12, 1224.0], [1.74595398E12, 1305.0], [1.74595482E12, 845.0], [1.74594852E12, 1132.0], [1.74595074E12, 1225.0], [1.74595296E12, 1399.0], [1.74594954E12, 1292.0], [1.74595278E12, 1203.0], [1.74595602E12, 1478.0], [1.74595176E12, 1527.0], [1.7459496E12, 1195.0], [1.74595626E12, 1004.0], [1.74595062E12, 1610.0], [1.74595284E12, 915.0], [1.74595164E12, 1677.0], [1.7459484E12, 1045.0], [1.74594942E12, 1007.0], [1.74595386E12, 1168.0], [1.74595524E12, 1248.0], [1.74594978E12, 1465.0], [1.74595608E12, 1142.0], [1.74595302E12, 1584.0], [1.745952E12, 1513.0], [1.74594858E12, 1308.0], [1.74595182E12, 1481.0], [1.74595404E12, 1221.0], [1.74595506E12, 1429.0], [1.7459508E12, 1506.0], [1.74595026E12, 1569.0], [1.7459535E12, 1254.0], [1.74595248E12, 951.0], [1.7459547E12, 1318.0], [1.74594906E12, 1342.0], [1.74595488E12, 1150.0], [1.7459523E12, 917.0], [1.74595452E12, 1401.0], [1.74595128E12, 1427.0], [1.7459559E12, 925.0], [1.74595044E12, 1307.0], [1.74595266E12, 1391.0], [1.74594822E12, 1160.0], [1.74595572E12, 1267.0], [1.74595146E12, 1312.0], [1.74595368E12, 1141.0], [1.74594924E12, 1260.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7459493E12, 596.8000000000001], [1.74595254E12, 647.6000000000001], [1.74595152E12, 641.8], [1.74595596E12, 569.8], [1.74595032E12, 637.1000000000003], [1.74595356E12, 616.5], [1.74595134E12, 758.0], [1.74595494E12, 643.2], [1.74595578E12, 591.8], [1.74594948E12, 659.5999999999999], [1.7459517E12, 613.4999999999997], [1.74595392E12, 584.3999999999997], [1.74595374E12, 563.6], [1.74595476E12, 647.1999999999999], [1.74594828E12, 607.7], [1.7459505E12, 682.0], [1.74595272E12, 649.5999999999997], [1.7459556E12, 618.2], [1.74594996E12, 646.6000000000001], [1.74595218E12, 614.1000000000001], [1.7459544E12, 643.1999999999999], [1.74595422E12, 615.8000000000001], [1.74595458E12, 652.3], [1.74594876E12, 653.8000000000001], [1.74595098E12, 606.4], [1.7459532E12, 721.4000000000001], [1.74595236E12, 641.3000000000012], [1.74594912E12, 635.4000000000001], [1.74595014E12, 617.8000000000002], [1.74595116E12, 554.0000000000002], [1.74594894E12, 610.3], [1.74595338E12, 662.0], [1.74595542E12, 565.0], [1.74595446E12, 658.8999999999999], [1.74595464E12, 656.5999999999999], [1.74595566E12, 673.6], [1.745949E12, 551.0], [1.74595122E12, 655.3000000000003], [1.74595344E12, 634.4], [1.74595002E12, 669.9000000000001], [1.74595584E12, 562.9000000000001], [1.74595326E12, 544.1999999999999], [1.74595224E12, 657.8], [1.7459514E12, 701.8000000000008], [1.74595362E12, 638.8999999999997], [1.74594918E12, 787.6], [1.74595548E12, 601.0], [1.7459502E12, 608.6000000000004], [1.74595242E12, 551.8], [1.74595188E12, 575.6000000000001], [1.74594864E12, 669.1999999999998], [1.7459553E12, 577.0], [1.74594966E12, 674.0000000000005], [1.7459541E12, 517.6], [1.74595068E12, 581.6], [1.74594846E12, 600.5], [1.7459529E12, 567.5], [1.74594882E12, 604.0], [1.74595512E12, 650.8], [1.74595206E12, 652.4], [1.74595428E12, 618.7000000000003], [1.74595104E12, 554.5999999999999], [1.74595614E12, 770.2], [1.74595632E12, 623.0], [1.74594984E12, 698.0], [1.74595086E12, 641.6000000000004], [1.74595308E12, 590.4000000000001], [1.74595092E12, 673.2], [1.7459487E12, 618.8000000000004], [1.74595314E12, 691.7000000000002], [1.74595554E12, 721.1000000000001], [1.74594972E12, 564.1], [1.74595194E12, 621.6], [1.74595416E12, 529.6], [1.74595008E12, 629.4000000000001], [1.7459511E12, 773.4], [1.74595332E12, 630.0], [1.74595518E12, 605.7], [1.74595212E12, 614.1999999999998], [1.74595536E12, 701.3000000000001], [1.74594888E12, 571.5999999999999], [1.7459499E12, 586.2000000000003], [1.74595434E12, 562.5], [1.74595638E12, 591.5], [1.74594834E12, 562.0], [1.74595158E12, 575.8000000000001], [1.7459538E12, 670.0000000000001], [1.74595056E12, 607.2], [1.745955E12, 680.1], [1.74594936E12, 674.6], [1.74595038E12, 565.0], [1.7459526E12, 666.2000000000008], [1.7459562E12, 666.4], [1.74595398E12, 609.0000000000002], [1.74595482E12, 639.8], [1.74594852E12, 711.5], [1.74595074E12, 598.9000000000001], [1.74595296E12, 637.0], [1.74594954E12, 556.0], [1.74595278E12, 569.5999999999999], [1.74595602E12, 683.4000000000002], [1.74595176E12, 713.4000000000001], [1.7459496E12, 636.2], [1.74595626E12, 585.8000000000002], [1.74595062E12, 689.4000000000001], [1.74595284E12, 612.6000000000005], [1.74595164E12, 675.8000000000001], [1.7459484E12, 638.9], [1.74594942E12, 582.5], [1.74595386E12, 584.0], [1.74595524E12, 602.8], [1.74594978E12, 705.0000000000002], [1.74595608E12, 601.0], [1.74595302E12, 723.0], [1.745952E12, 743.9999999999999], [1.74594858E12, 631.0], [1.74595182E12, 638.1], [1.74595404E12, 682.4], [1.74595506E12, 668.3000000000001], [1.7459508E12, 591.9000000000001], [1.74595026E12, 651.8000000000001], [1.7459535E12, 657.0], [1.74595248E12, 601.2], [1.7459547E12, 670.8], [1.74594906E12, 682.4], [1.74595488E12, 561.0], [1.7459523E12, 612.3000000000003], [1.74595452E12, 591.3], [1.74595128E12, 678.8000000000001], [1.7459559E12, 583.0], [1.74595044E12, 690.9999999999999], [1.74595266E12, 634.4000000000004], [1.74594822E12, 670.2000000000005], [1.74595572E12, 674.5], [1.74595146E12, 676.0], [1.74595368E12, 622.4999999999998], [1.74594924E12, 530.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7459493E12, 1064.3799999999958], [1.74595254E12, 1316.4800000000048], [1.74595152E12, 1853.1999999999941], [1.74595596E12, 931.6400000000026], [1.74595032E12, 1044.8199999999997], [1.74595356E12, 1120.549999999999], [1.74595134E12, 1227.9999999999995], [1.74595494E12, 1302.4500000000003], [1.74595578E12, 1187.0800000000002], [1.74594948E12, 1029.6000000000001], [1.7459517E12, 1358.6699999999998], [1.74595392E12, 1263.9499999999996], [1.74595374E12, 1080.300000000003], [1.74595476E12, 1140.620000000003], [1.74594828E12, 1473.2399999999998], [1.7459505E12, 1454.46], [1.74595272E12, 1440.53], [1.7459556E12, 1254.6599999999994], [1.74594996E12, 1411.8200000000006], [1.74595218E12, 1031.760000000002], [1.7459544E12, 1048.629999999998], [1.74595422E12, 1290.2800000000032], [1.74595458E12, 1130.69], [1.74594876E12, 1127.6400000000003], [1.74595098E12, 1051.3200000000004], [1.7459532E12, 1325.5600000000013], [1.74595236E12, 1404.6599999999999], [1.74594912E12, 1047.350000000001], [1.74595014E12, 1015.6799999999998], [1.74595116E12, 954.0900000000017], [1.74594894E12, 1098.0900000000001], [1.74595338E12, 1250.3500000000022], [1.74595542E12, 1210.5400000000043], [1.74595446E12, 1038.8599999999992], [1.74595464E12, 1530.8400000000015], [1.74595566E12, 1263.5199999999973], [1.745949E12, 1567.5], [1.74595122E12, 915.1500000000003], [1.74595344E12, 1240.0599999999963], [1.74595002E12, 1141.0100000000002], [1.74595584E12, 1177.62], [1.74595326E12, 1021.4000000000027], [1.74595224E12, 1295.2400000000007], [1.7459514E12, 1415.9099999999983], [1.74595362E12, 1096.9499999999996], [1.74594918E12, 1102.23], [1.74595548E12, 1092.9500000000007], [1.7459502E12, 1326.3600000000024], [1.74595242E12, 1066.4200000000005], [1.74595188E12, 1151.5999999999992], [1.74594864E12, 1183.2400000000007], [1.7459553E12, 905.9499999999998], [1.74594966E12, 972.7700000000001], [1.7459541E12, 1074.2000000000003], [1.74595068E12, 1046.0400000000009], [1.74594846E12, 989.0499999999981], [1.7459529E12, 1064.480000000004], [1.74594882E12, 1459.0], [1.74595512E12, 1484.220000000002], [1.74595206E12, 1266.6599999999942], [1.74595428E12, 1433.1400000000003], [1.74595104E12, 1264.760000000002], [1.74595614E12, 1527.9800000000014], [1.74595632E12, 1215.5], [1.74594984E12, 1224.5], [1.74595086E12, 1397.7100000000003], [1.74595308E12, 1297.099999999999], [1.74595092E12, 1362.6800000000007], [1.7459487E12, 1081.9600000000005], [1.74595314E12, 1128.98], [1.74595554E12, 1358.6699999999964], [1.74594972E12, 1210.6399999999999], [1.74595194E12, 1387.5599999999974], [1.74595416E12, 1024.9999999999993], [1.74595008E12, 1121.9800000000027], [1.7459511E12, 1134.820000000001], [1.74595332E12, 1240.5], [1.74595518E12, 1092.0600000000009], [1.74595212E12, 1099.2200000000005], [1.74595536E12, 1128.27], [1.74594888E12, 1038.1200000000013], [1.7459499E12, 1030.0199999999998], [1.74595434E12, 1389.399999999996], [1.74595638E12, 1247.0], [1.74594834E12, 1026.549999999996], [1.74595158E12, 1385.4000000000026], [1.7459538E12, 1311.0200000000004], [1.74595056E12, 1208.3300000000002], [1.745955E12, 1498.930000000002], [1.74594936E12, 1141.8800000000049], [1.74595038E12, 1168.0], [1.7459526E12, 1109.240000000003], [1.7459562E12, 1187.4600000000012], [1.74595398E12, 1304.08], [1.74595482E12, 838.28], [1.74594852E12, 1124.3500000000001], [1.74595074E12, 1191.61], [1.74595296E12, 1382.5999999999997], [1.74594954E12, 1273.8499999999997], [1.74595278E12, 1097.7000000000016], [1.74595602E12, 1291.2399999999968], [1.74595176E12, 1335.9400000000016], [1.7459496E12, 1188.56], [1.74595626E12, 990.4799999999998], [1.74595062E12, 1475.059999999995], [1.74595284E12, 907.3200000000002], [1.74595164E12, 1596.6400000000008], [1.7459484E12, 1023.4399999999996], [1.74594942E12, 967.9499999999991], [1.74595386E12, 1156.5599999999997], [1.74595524E12, 1132.8499999999979], [1.74594978E12, 1384.9599999999987], [1.74595608E12, 1103.5], [1.74595302E12, 1481.0900000000008], [1.745952E12, 1390.3600000000038], [1.74594858E12, 1280.0], [1.74595182E12, 1390.6999999999985], [1.74595404E12, 1198.7400000000007], [1.74595506E12, 1362.1700000000005], [1.7459508E12, 1307.7799999999995], [1.74595026E12, 1442.1000000000004], [1.7459535E12, 1165.0], [1.74595248E12, 951.0], [1.7459547E12, 1305.79], [1.74594906E12, 1191.1199999999974], [1.74595488E12, 1140.6499999999999], [1.7459523E12, 911.17], [1.74595452E12, 1292.219999999998], [1.74595128E12, 1391.3099999999995], [1.7459559E12, 905.0], [1.74595044E12, 1234.8400000000004], [1.74595266E12, 1350.1100000000001], [1.74594822E12, 1160.0], [1.74595572E12, 1233.250000000001], [1.74595146E12, 1173.5], [1.74595368E12, 1083.179999999999], [1.74594924E12, 1060.800000000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7459493E12, 747.3], [1.74595254E12, 828.9999999999999], [1.74595152E12, 872.3999999999997], [1.74595596E12, 644.0999999999997], [1.74595032E12, 929.4499999999998], [1.74595356E12, 735.6999999999994], [1.74595134E12, 922.0], [1.74595494E12, 763.6500000000001], [1.74595578E12, 865.8], [1.74594948E12, 843.5999999999992], [1.7459517E12, 777.9499999999998], [1.74595392E12, 794.1999999999989], [1.74595374E12, 676.6500000000002], [1.74595476E12, 729.4999999999995], [1.74594828E12, 887.9999999999998], [1.7459505E12, 880.1999999999998], [1.74595272E12, 774.4499999999997], [1.7459556E12, 695.3999999999997], [1.74594996E12, 859.6], [1.74595218E12, 729.6499999999999], [1.7459544E12, 713.8499999999999], [1.74595422E12, 749.7999999999997], [1.74595458E12, 753.1000000000004], [1.74594876E12, 806.3999999999997], [1.74595098E12, 755.9999999999997], [1.7459532E12, 890.8499999999999], [1.74595236E12, 964.9999999999995], [1.74594912E12, 739.8999999999997], [1.74595014E12, 767.6], [1.74595116E12, 659.6], [1.74594894E12, 835.1500000000005], [1.74595338E12, 840.0], [1.74595542E12, 699.9999999999998], [1.74595446E12, 852.8999999999996], [1.74595464E12, 753.5999999999999], [1.74595566E12, 715.5999999999999], [1.745949E12, 766.5], [1.74595122E12, 762.9], [1.74595344E12, 761.3], [1.74595002E12, 752.6], [1.74595584E12, 669.0999999999997], [1.74595326E12, 708.5999999999998], [1.74595224E12, 853.1999999999999], [1.7459514E12, 887.9499999999998], [1.74595362E12, 816.0999999999999], [1.74594918E12, 905.15], [1.74595548E12, 766.5], [1.7459502E12, 799.9999999999997], [1.74595242E12, 690.0999999999997], [1.74595188E12, 721.4000000000002], [1.74594864E12, 825.7999999999994], [1.7459553E12, 767.75], [1.74594966E12, 815.9000000000001], [1.7459541E12, 659.1999999999989], [1.74595068E12, 782.9999999999995], [1.74594846E12, 722.25], [1.7459529E12, 781.2499999999991], [1.74594882E12, 790.5], [1.74595512E12, 807.6000000000004], [1.74595206E12, 752.6999999999998], [1.74595428E12, 790.6500000000003], [1.74595104E12, 641.4999999999999], [1.74595614E12, 990.2], [1.74595632E12, 816.0], [1.74594984E12, 762.0], [1.74595086E12, 844.25], [1.74595308E12, 857.1999999999999], [1.74595092E12, 808.7999999999989], [1.7459487E12, 823.6], [1.74595314E12, 912.9499999999996], [1.74595554E12, 895.05], [1.74594972E12, 653.6499999999992], [1.74595194E12, 857.8000000000001], [1.74595416E12, 705.5999999999998], [1.74595008E12, 756.7999999999997], [1.7459511E12, 920.3000000000002], [1.74595332E12, 829.5], [1.74595518E12, 775.9499999999996], [1.74595212E12, 755.699999999999], [1.74595536E12, 888.0999999999992], [1.74594888E12, 711.8999999999997], [1.7459499E12, 767.5999999999999], [1.74595434E12, 681.0], [1.74595638E12, 666.0500000000002], [1.74594834E12, 686.0], [1.74595158E12, 692.8], [1.7459538E12, 788.9500000000002], [1.74595056E12, 854.0500000000001], [1.745955E12, 823.0999999999998], [1.74594936E12, 752.2], [1.74595038E12, 756.5], [1.7459526E12, 834.5999999999995], [1.7459562E12, 865.0000000000002], [1.74595398E12, 796.3999999999997], [1.74595482E12, 738.9999999999998], [1.74594852E12, 871.5], [1.74595074E12, 689.0999999999999], [1.74595296E12, 986.0], [1.74594954E12, 720.75], [1.74595278E12, 783.4999999999992], [1.74595602E12, 841.9999999999998], [1.74595176E12, 989.9999999999993], [1.7459496E12, 741.7999999999995], [1.74595626E12, 833.2000000000002], [1.74595062E12, 786.1499999999993], [1.74595284E12, 807.1999999999998], [1.74595164E12, 841.8999999999993], [1.7459484E12, 813.0999999999992], [1.74594942E12, 763.5], [1.74595386E12, 781.2], [1.74595524E12, 755.6999999999994], [1.74594978E12, 913.7999999999993], [1.74595608E12, 769.5], [1.74595302E12, 895.4999999999999], [1.745952E12, 946.0000000000001], [1.74594858E12, 729.5], [1.74595182E12, 772.0999999999999], [1.74595404E12, 793.5000000000001], [1.74595506E12, 939.4499999999998], [1.7459508E12, 824.1499999999999], [1.74595026E12, 780.3], [1.7459535E12, 835.0], [1.74595248E12, 779.5999999999997], [1.7459547E12, 902.5500000000008], [1.74594906E12, 790.4], [1.74595488E12, 706.0], [1.7459523E12, 703.35], [1.74595452E12, 826.7999999999977], [1.74595128E12, 842.0499999999998], [1.7459559E12, 718.0], [1.74595044E12, 780.9999999999998], [1.74595266E12, 743.0000000000001], [1.74594822E12, 797.25], [1.74595572E12, 866.25], [1.74595146E12, 752.5], [1.74595368E12, 838.8999999999987], [1.74594924E12, 652.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7459493E12, 135.0], [1.74595254E12, 125.0], [1.74595152E12, 127.0], [1.74595596E12, 165.0], [1.74595032E12, 125.0], [1.74595356E12, 148.0], [1.74595134E12, 163.0], [1.74595494E12, 118.0], [1.74595578E12, 120.0], [1.74594948E12, 131.0], [1.7459517E12, 120.0], [1.74595392E12, 132.0], [1.74595374E12, 128.0], [1.74595476E12, 131.0], [1.74594828E12, 153.0], [1.7459505E12, 121.0], [1.74595272E12, 155.0], [1.7459556E12, 136.0], [1.74594996E12, 168.0], [1.74595218E12, 130.0], [1.7459544E12, 115.0], [1.74595422E12, 126.0], [1.74595458E12, 118.0], [1.74594876E12, 125.0], [1.74595098E12, 161.0], [1.7459532E12, 127.0], [1.74595236E12, 141.0], [1.74594912E12, 131.0], [1.74595014E12, 131.0], [1.74595116E12, 155.0], [1.74594894E12, 151.0], [1.74595338E12, 122.0], [1.74595542E12, 133.0], [1.74595446E12, 142.0], [1.74595464E12, 123.0], [1.74595566E12, 132.0], [1.745949E12, 155.0], [1.74595122E12, 151.0], [1.74595344E12, 127.0], [1.74595002E12, 140.0], [1.74595584E12, 144.0], [1.74595326E12, 152.0], [1.74595224E12, 138.0], [1.7459514E12, 134.0], [1.74595362E12, 114.0], [1.74594918E12, 164.0], [1.74595548E12, 140.0], [1.7459502E12, 123.0], [1.74595242E12, 169.0], [1.74595188E12, 133.0], [1.74594864E12, 121.0], [1.7459553E12, 114.0], [1.74594966E12, 124.0], [1.7459541E12, 141.0], [1.74595068E12, 158.0], [1.74594846E12, 121.0], [1.7459529E12, 140.0], [1.74594882E12, 136.0], [1.74595512E12, 138.0], [1.74595206E12, 127.0], [1.74595428E12, 127.0], [1.74595104E12, 153.0], [1.74595614E12, 129.0], [1.74595632E12, 123.0], [1.74594984E12, 185.0], [1.74595086E12, 132.0], [1.74595308E12, 132.0], [1.74595092E12, 147.0], [1.7459487E12, 148.0], [1.74595314E12, 173.0], [1.74595554E12, 122.0], [1.74594972E12, 142.0], [1.74595194E12, 117.0], [1.74595416E12, 148.0], [1.74595008E12, 159.0], [1.7459511E12, 158.0], [1.74595332E12, 124.0], [1.74595518E12, 139.0], [1.74595212E12, 137.0], [1.74595536E12, 146.0], [1.74594888E12, 135.0], [1.7459499E12, 130.0], [1.74595434E12, 124.0], [1.74595638E12, 130.0], [1.74594834E12, 161.0], [1.74595158E12, 145.0], [1.7459538E12, 153.0], [1.74595056E12, 132.0], [1.745955E12, 129.0], [1.74594936E12, 132.0], [1.74595038E12, 164.0], [1.7459526E12, 160.0], [1.7459562E12, 123.0], [1.74595398E12, 118.0], [1.74595482E12, 126.0], [1.74594852E12, 140.0], [1.74595074E12, 134.0], [1.74595296E12, 181.0], [1.74594954E12, 123.0], [1.74595278E12, 129.0], [1.74595602E12, 143.0], [1.74595176E12, 136.0], [1.7459496E12, 159.0], [1.74595626E12, 140.0], [1.74595062E12, 170.0], [1.74595284E12, 119.0], [1.74595164E12, 124.0], [1.7459484E12, 153.0], [1.74594942E12, 156.0], [1.74595386E12, 143.0], [1.74595524E12, 141.0], [1.74594978E12, 129.0], [1.74595608E12, 150.0], [1.74595302E12, 137.0], [1.745952E12, 125.0], [1.74594858E12, 134.0], [1.74595182E12, 147.0], [1.74595404E12, 168.0], [1.74595506E12, 140.0], [1.7459508E12, 117.0], [1.74595026E12, 121.0], [1.7459535E12, 121.0], [1.74595248E12, 145.0], [1.7459547E12, 134.0], [1.74594906E12, 139.0], [1.74595488E12, 134.0], [1.7459523E12, 152.0], [1.74595452E12, 127.0], [1.74595128E12, 141.0], [1.7459559E12, 123.0], [1.74595044E12, 146.0], [1.74595266E12, 138.0], [1.74594822E12, 150.0], [1.74595572E12, 124.0], [1.74595146E12, 135.0], [1.74595368E12, 134.0], [1.74594924E12, 150.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7459493E12, 358.0], [1.74595254E12, 356.0], [1.74595152E12, 365.0], [1.74595596E12, 369.0], [1.74595032E12, 364.0], [1.74595356E12, 366.5], [1.74595134E12, 363.0], [1.74595494E12, 369.0], [1.74595578E12, 369.0], [1.74594948E12, 362.0], [1.7459517E12, 364.0], [1.74595392E12, 367.5], [1.74595374E12, 366.0], [1.74595476E12, 366.0], [1.74594828E12, 359.0], [1.7459505E12, 361.0], [1.74595272E12, 362.0], [1.7459556E12, 369.0], [1.74594996E12, 360.0], [1.74595218E12, 363.0], [1.7459544E12, 367.0], [1.74595422E12, 365.0], [1.74595458E12, 367.0], [1.74594876E12, 362.0], [1.74595098E12, 361.0], [1.7459532E12, 365.0], [1.74595236E12, 363.0], [1.74594912E12, 358.0], [1.74595014E12, 360.0], [1.74595116E12, 359.0], [1.74594894E12, 354.0], [1.74595338E12, 367.0], [1.74595542E12, 367.0], [1.74595446E12, 367.0], [1.74595464E12, 367.0], [1.74595566E12, 367.0], [1.745949E12, 358.0], [1.74595122E12, 361.0], [1.74595344E12, 366.0], [1.74595002E12, 359.5], [1.74595584E12, 367.0], [1.74595326E12, 365.0], [1.74595224E12, 364.0], [1.7459514E12, 363.0], [1.74595362E12, 367.0], [1.74594918E12, 361.0], [1.74595548E12, 367.0], [1.7459502E12, 360.0], [1.74595242E12, 364.0], [1.74595188E12, 367.0], [1.74594864E12, 361.0], [1.7459553E12, 366.0], [1.74594966E12, 360.0], [1.7459541E12, 365.0], [1.74595068E12, 359.0], [1.74594846E12, 358.5], [1.7459529E12, 366.0], [1.74594882E12, 359.0], [1.74595512E12, 366.0], [1.74595206E12, 365.0], [1.74595428E12, 361.0], [1.74595104E12, 360.0], [1.74595614E12, 362.0], [1.74595632E12, 368.0], [1.74594984E12, 360.0], [1.74595086E12, 361.0], [1.74595308E12, 366.0], [1.74595092E12, 361.0], [1.7459487E12, 361.0], [1.74595314E12, 368.0], [1.74595554E12, 368.0], [1.74594972E12, 360.0], [1.74595194E12, 362.0], [1.74595416E12, 365.0], [1.74595008E12, 362.0], [1.7459511E12, 361.0], [1.74595332E12, 367.0], [1.74595518E12, 367.0], [1.74595212E12, 362.0], [1.74595536E12, 368.0], [1.74594888E12, 351.0], [1.7459499E12, 362.0], [1.74595434E12, 361.0], [1.74595638E12, 369.0], [1.74594834E12, 360.0], [1.74595158E12, 364.0], [1.7459538E12, 364.0], [1.74595056E12, 364.0], [1.745955E12, 370.0], [1.74594936E12, 360.0], [1.74595038E12, 363.0], [1.7459526E12, 365.0], [1.7459562E12, 372.0], [1.74595398E12, 367.0], [1.74595482E12, 368.0], [1.74594852E12, 359.0], [1.74595074E12, 356.5], [1.74595296E12, 367.0], [1.74594954E12, 363.0], [1.74595278E12, 362.0], [1.74595602E12, 369.0], [1.74595176E12, 365.0], [1.7459496E12, 364.0], [1.74595626E12, 371.0], [1.74595062E12, 364.0], [1.74595284E12, 365.0], [1.74595164E12, 362.0], [1.7459484E12, 360.0], [1.74594942E12, 362.0], [1.74595386E12, 366.0], [1.74595524E12, 370.0], [1.74594978E12, 361.0], [1.74595608E12, 362.0], [1.74595302E12, 366.0], [1.745952E12, 365.0], [1.74594858E12, 360.0], [1.74595182E12, 365.0], [1.74595404E12, 369.0], [1.74595506E12, 366.0], [1.7459508E12, 360.0], [1.74595026E12, 363.0], [1.7459535E12, 366.0], [1.74595248E12, 357.5], [1.7459547E12, 371.0], [1.74594906E12, 358.0], [1.74595488E12, 367.0], [1.7459523E12, 363.5], [1.74595452E12, 367.0], [1.74595128E12, 362.0], [1.7459559E12, 367.0], [1.74595044E12, 364.0], [1.74595266E12, 363.0], [1.74594822E12, 360.0], [1.74595572E12, 369.0], [1.74595146E12, 362.0], [1.74595368E12, 367.0], [1.74594924E12, 357.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74595638E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 358.0, "minX": 1.0, "maxY": 373.0, "series": [{"data": [[2.0, 369.0], [4.0, 358.0], [1.0, 373.0], [3.0, 362.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 355.0, "series": [{"data": [[2.0, 170.5], [4.0, 171.5], [1.0, 355.0], [3.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.05, "minX": 1.74594822E12, "maxY": 2.65, "series": [{"data": [[1.7459493E12, 2.6166666666666667], [1.74595254E12, 2.45], [1.74595152E12, 2.4166666666666665], [1.74595596E12, 2.55], [1.74595032E12, 2.3666666666666667], [1.74595356E12, 2.466666666666667], [1.74595134E12, 2.316666666666667], [1.74595494E12, 2.433333333333333], [1.74595578E12, 2.3833333333333333], [1.74594948E12, 2.3833333333333333], [1.7459517E12, 2.466666666666667], [1.74595392E12, 2.466666666666667], [1.74595374E12, 2.6], [1.74595476E12, 2.55], [1.74594828E12, 2.3666666666666667], [1.7459505E12, 2.283333333333333], [1.74595272E12, 2.466666666666667], [1.7459556E12, 2.4166666666666665], [1.74594996E12, 2.433333333333333], [1.74595218E12, 2.5], [1.7459544E12, 2.466666666666667], [1.74595422E12, 2.45], [1.74595458E12, 2.433333333333333], [1.74594876E12, 2.45], [1.74595098E12, 2.3833333333333333], [1.7459532E12, 2.3333333333333335], [1.74595236E12, 2.3666666666666667], [1.74594912E12, 2.5], [1.74595014E12, 2.5166666666666666], [1.74595116E12, 2.6], [1.74594894E12, 2.433333333333333], [1.74595338E12, 2.4], [1.74595542E12, 2.55], [1.74595446E12, 2.466666666666667], [1.74595464E12, 2.3833333333333333], [1.74595566E12, 2.4166666666666665], [1.745949E12, 2.4833333333333334], [1.74595122E12, 2.5], [1.74595344E12, 2.466666666666667], [1.74595002E12, 2.433333333333333], [1.74595584E12, 2.533333333333333], [1.74595326E12, 2.55], [1.74595224E12, 2.3833333333333333], [1.7459514E12, 2.3666666666666667], [1.74595362E12, 2.466666666666667], [1.74594918E12, 2.2666666666666666], [1.74595548E12, 2.4], [1.7459502E12, 2.45], [1.74595242E12, 2.55], [1.74595188E12, 2.5], [1.74594864E12, 2.4], [1.7459553E12, 2.566666666666667], [1.74594966E12, 2.433333333333333], [1.7459541E12, 2.55], [1.74595068E12, 2.5], [1.74594846E12, 2.566666666666667], [1.7459529E12, 2.5], [1.74594882E12, 2.4833333333333334], [1.74595512E12, 2.35], [1.74595206E12, 2.4166666666666665], [1.74595428E12, 2.433333333333333], [1.74595104E12, 2.55], [1.74595614E12, 2.283333333333333], [1.74595632E12, 2.4833333333333334], [1.74594984E12, 2.4833333333333334], [1.74595086E12, 2.433333333333333], [1.74595308E12, 2.4166666666666665], [1.74595092E12, 2.3833333333333333], [1.7459487E12, 2.45], [1.74595314E12, 2.3333333333333335], [1.74595554E12, 2.3], [1.74594972E12, 2.533333333333333], [1.74595194E12, 2.533333333333333], [1.74595416E12, 2.5833333333333335], [1.74595008E12, 2.5], [1.7459511E12, 2.35], [1.74595332E12, 2.4833333333333334], [1.74595518E12, 2.5], [1.74595212E12, 2.55], [1.74595536E12, 2.3], [1.74594888E12, 2.55], [1.7459499E12, 2.533333333333333], [1.74595434E12, 2.566666666666667], [1.74595638E12, 1.4833333333333334], [1.74594834E12, 2.566666666666667], [1.74595158E12, 2.45], [1.7459538E12, 2.433333333333333], [1.74595056E12, 2.433333333333333], [1.745955E12, 2.3333333333333335], [1.74594936E12, 2.45], [1.74595038E12, 2.4833333333333334], [1.7459526E12, 2.45], [1.7459562E12, 2.35], [1.74595398E12, 2.4166666666666665], [1.74595482E12, 2.5833333333333335], [1.74594852E12, 2.4], [1.74595074E12, 2.533333333333333], [1.74595296E12, 2.316666666666667], [1.74594954E12, 2.566666666666667], [1.74595278E12, 2.55], [1.74595602E12, 2.4166666666666665], [1.74595176E12, 2.3333333333333335], [1.7459496E12, 2.4166666666666665], [1.74595626E12, 2.5166666666666666], [1.74595062E12, 2.3], [1.74595284E12, 2.45], [1.74595164E12, 2.3333333333333335], [1.7459484E12, 2.466666666666667], [1.74594942E12, 2.566666666666667], [1.74595386E12, 2.5166666666666666], [1.74595524E12, 2.466666666666667], [1.74594978E12, 2.4166666666666665], [1.74595608E12, 2.4833333333333334], [1.74595302E12, 2.3333333333333335], [1.745952E12, 2.35], [1.74594858E12, 2.466666666666667], [1.74595182E12, 2.3666666666666667], [1.74595404E12, 2.35], [1.74595506E12, 2.3333333333333335], [1.7459508E12, 2.533333333333333], [1.74595026E12, 2.433333333333333], [1.7459535E12, 2.4833333333333334], [1.74595248E12, 2.5], [1.7459547E12, 2.2666666666666666], [1.74594906E12, 2.4166666666666665], [1.74595488E12, 2.566666666666667], [1.7459523E12, 2.533333333333333], [1.74595452E12, 2.466666666666667], [1.74595128E12, 2.3666666666666667], [1.7459559E12, 2.4833333333333334], [1.74595044E12, 2.3833333333333333], [1.74595266E12, 2.433333333333333], [1.74594822E12, 1.05], [1.74595572E12, 2.4], [1.74595146E12, 2.4833333333333334], [1.74595368E12, 2.466666666666667], [1.74594924E12, 2.65]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74595638E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.5166666666666667, "minX": 1.74594822E12, "maxY": 1.3333333333333333, "series": [{"data": [[1.7459493E12, 1.3], [1.74595254E12, 1.2166666666666666], [1.74595152E12, 1.2166666666666666], [1.74595596E12, 1.2666666666666666], [1.74595032E12, 1.1833333333333333], [1.74595356E12, 1.2333333333333334], [1.74595134E12, 1.1666666666666667], [1.74595494E12, 1.2166666666666666], [1.74595578E12, 1.1833333333333333], [1.74594948E12, 1.1833333333333333], [1.7459517E12, 1.2333333333333334], [1.74595392E12, 1.2333333333333334], [1.74595374E12, 1.3], [1.74595476E12, 1.2666666666666666], [1.74594828E12, 1.1833333333333333], [1.7459505E12, 1.1333333333333333], [1.74595272E12, 1.2333333333333334], [1.7459556E12, 1.2], [1.74594996E12, 1.2166666666666666], [1.74595218E12, 1.25], [1.7459544E12, 1.2333333333333334], [1.74595422E12, 1.2166666666666666], [1.74595458E12, 1.2166666666666666], [1.74594876E12, 1.2166666666666666], [1.74595098E12, 1.1833333333333333], [1.7459532E12, 1.1666666666666667], [1.74595236E12, 1.1833333333333333], [1.74594912E12, 1.25], [1.74595014E12, 1.25], [1.74595116E12, 1.3], [1.74594894E12, 1.2166666666666666], [1.74595338E12, 1.2], [1.74595542E12, 1.2833333333333334], [1.74595446E12, 1.2333333333333334], [1.74595464E12, 1.2], [1.74595566E12, 1.2166666666666666], [1.745949E12, 1.25], [1.74595122E12, 1.25], [1.74595344E12, 1.2333333333333334], [1.74595002E12, 1.2166666666666666], [1.74595584E12, 1.2666666666666666], [1.74595326E12, 1.2666666666666666], [1.74595224E12, 1.1833333333333333], [1.7459514E12, 1.1833333333333333], [1.74595362E12, 1.2333333333333334], [1.74594918E12, 1.1333333333333333], [1.74595548E12, 1.2], [1.7459502E12, 1.2333333333333334], [1.74595242E12, 1.2833333333333334], [1.74595188E12, 1.2666666666666666], [1.74594864E12, 1.1833333333333333], [1.7459553E12, 1.2833333333333334], [1.74594966E12, 1.2166666666666666], [1.7459541E12, 1.2666666666666666], [1.74595068E12, 1.25], [1.74594846E12, 1.2833333333333334], [1.7459529E12, 1.25], [1.74594882E12, 1.25], [1.74595512E12, 1.1666666666666667], [1.74595206E12, 1.2], [1.74595428E12, 1.2166666666666666], [1.74595104E12, 1.2833333333333334], [1.74595614E12, 1.15], [1.74595632E12, 1.2333333333333334], [1.74594984E12, 1.25], [1.74595086E12, 1.2166666666666666], [1.74595308E12, 1.2166666666666666], [1.74595092E12, 1.2], [1.7459487E12, 1.2333333333333334], [1.74595314E12, 1.1666666666666667], [1.74595554E12, 1.15], [1.74594972E12, 1.2666666666666666], [1.74595194E12, 1.25], [1.74595416E12, 1.3], [1.74595008E12, 1.25], [1.7459511E12, 1.1666666666666667], [1.74595332E12, 1.25], [1.74595518E12, 1.25], [1.74595212E12, 1.2833333333333334], [1.74595536E12, 1.15], [1.74594888E12, 1.2666666666666666], [1.7459499E12, 1.2666666666666666], [1.74595434E12, 1.2833333333333334], [1.74595638E12, 0.75], [1.74594834E12, 1.2833333333333334], [1.74595158E12, 1.2166666666666666], [1.7459538E12, 1.2166666666666666], [1.74595056E12, 1.2166666666666666], [1.745955E12, 1.1666666666666667], [1.74594936E12, 1.2333333333333334], [1.74595038E12, 1.2333333333333334], [1.7459526E12, 1.2333333333333334], [1.7459562E12, 1.1666666666666667], [1.74595398E12, 1.2], [1.74595482E12, 1.3], [1.74594852E12, 1.2], [1.74595074E12, 1.2666666666666666], [1.74595296E12, 1.15], [1.74594954E12, 1.2833333333333334], [1.74595278E12, 1.2666666666666666], [1.74595602E12, 1.2166666666666666], [1.74595176E12, 1.1666666666666667], [1.7459496E12, 1.2166666666666666], [1.74595626E12, 1.2666666666666666], [1.74595062E12, 1.15], [1.74595284E12, 1.2333333333333334], [1.74595164E12, 1.1666666666666667], [1.7459484E12, 1.2333333333333334], [1.74594942E12, 1.2833333333333334], [1.74595386E12, 1.2666666666666666], [1.74595524E12, 1.2333333333333334], [1.74594978E12, 1.2], [1.74595608E12, 1.2333333333333334], [1.74595302E12, 1.1666666666666667], [1.745952E12, 1.1833333333333333], [1.74594858E12, 1.25], [1.74595182E12, 1.1833333333333333], [1.74595404E12, 1.1833333333333333], [1.74595506E12, 1.1666666666666667], [1.7459508E12, 1.2666666666666666], [1.74595026E12, 1.2166666666666666], [1.7459535E12, 1.2333333333333334], [1.74595248E12, 1.25], [1.7459547E12, 1.1333333333333333], [1.74594906E12, 1.2], [1.74595488E12, 1.2833333333333334], [1.7459523E12, 1.2666666666666666], [1.74595452E12, 1.2333333333333334], [1.74595128E12, 1.1833333333333333], [1.7459559E12, 1.25], [1.74595044E12, 1.2], [1.74595266E12, 1.2166666666666666], [1.74594822E12, 0.5166666666666667], [1.74595572E12, 1.2], [1.74595146E12, 1.2333333333333334], [1.74595368E12, 1.2333333333333334], [1.74594924E12, 1.3333333333333333]], "isOverall": false, "label": "0", "isController": false}, {"data": [[1.7459493E12, 1.3166666666666667], [1.74595254E12, 1.2333333333333334], [1.74595152E12, 1.2], [1.74595596E12, 1.2833333333333334], [1.74595032E12, 1.1833333333333333], [1.74595356E12, 1.2333333333333334], [1.74595134E12, 1.15], [1.74595494E12, 1.2166666666666666], [1.74595578E12, 1.2], [1.74594948E12, 1.2], [1.7459517E12, 1.2333333333333334], [1.74595392E12, 1.2333333333333334], [1.74595374E12, 1.3], [1.74595476E12, 1.2833333333333334], [1.74594828E12, 1.1833333333333333], [1.7459505E12, 1.15], [1.74595272E12, 1.2333333333333334], [1.7459556E12, 1.2166666666666666], [1.74594996E12, 1.2166666666666666], [1.74595218E12, 1.25], [1.7459544E12, 1.2333333333333334], [1.74595422E12, 1.2333333333333334], [1.74595458E12, 1.2166666666666666], [1.74594876E12, 1.2333333333333334], [1.74595098E12, 1.2], [1.7459532E12, 1.1666666666666667], [1.74595236E12, 1.1833333333333333], [1.74594912E12, 1.25], [1.74595014E12, 1.2666666666666666], [1.74595116E12, 1.3], [1.74594894E12, 1.2166666666666666], [1.74595338E12, 1.2], [1.74595542E12, 1.2666666666666666], [1.74595446E12, 1.2333333333333334], [1.74595464E12, 1.1833333333333333], [1.74595566E12, 1.2], [1.745949E12, 1.2333333333333334], [1.74595122E12, 1.25], [1.74595344E12, 1.2333333333333334], [1.74595002E12, 1.2166666666666666], [1.74595584E12, 1.2666666666666666], [1.74595326E12, 1.2833333333333334], [1.74595224E12, 1.2], [1.7459514E12, 1.1833333333333333], [1.74595362E12, 1.2333333333333334], [1.74594918E12, 1.1333333333333333], [1.74595548E12, 1.2], [1.7459502E12, 1.2166666666666666], [1.74595242E12, 1.2666666666666666], [1.74595188E12, 1.25], [1.74594864E12, 1.2], [1.7459553E12, 1.2833333333333334], [1.74594966E12, 1.2166666666666666], [1.7459541E12, 1.2833333333333334], [1.74595068E12, 1.25], [1.74594846E12, 1.2833333333333334], [1.7459529E12, 1.25], [1.74594882E12, 1.2333333333333334], [1.74595512E12, 1.1833333333333333], [1.74595206E12, 1.2166666666666666], [1.74595428E12, 1.2166666666666666], [1.74595104E12, 1.2666666666666666], [1.74595614E12, 1.1333333333333333], [1.74595632E12, 1.25], [1.74594984E12, 1.2333333333333334], [1.74595086E12, 1.2166666666666666], [1.74595308E12, 1.2], [1.74595092E12, 1.1833333333333333], [1.7459487E12, 1.2166666666666666], [1.74595314E12, 1.1666666666666667], [1.74595554E12, 1.15], [1.74594972E12, 1.2666666666666666], [1.74595194E12, 1.2666666666666666], [1.74595416E12, 1.2833333333333334], [1.74595008E12, 1.25], [1.7459511E12, 1.1833333333333333], [1.74595332E12, 1.2333333333333334], [1.74595518E12, 1.25], [1.74595212E12, 1.2666666666666666], [1.74595536E12, 1.15], [1.74594888E12, 1.2833333333333334], [1.7459499E12, 1.2666666666666666], [1.74595434E12, 1.2833333333333334], [1.74595638E12, 0.75], [1.74594834E12, 1.2833333333333334], [1.74595158E12, 1.2333333333333334], [1.7459538E12, 1.2166666666666666], [1.74595056E12, 1.2166666666666666], [1.745955E12, 1.1666666666666667], [1.74594936E12, 1.2166666666666666], [1.74595038E12, 1.25], [1.7459526E12, 1.2166666666666666], [1.7459562E12, 1.1833333333333333], [1.74595398E12, 1.2166666666666666], [1.74595482E12, 1.2833333333333334], [1.74594852E12, 1.2], [1.74595074E12, 1.2666666666666666], [1.74595296E12, 1.1666666666666667], [1.74594954E12, 1.2833333333333334], [1.74595278E12, 1.2833333333333334], [1.74595602E12, 1.2], [1.74595176E12, 1.1666666666666667], [1.7459496E12, 1.2], [1.74595626E12, 1.25], [1.74595062E12, 1.15], [1.74595284E12, 1.2166666666666666], [1.74595164E12, 1.1666666666666667], [1.7459484E12, 1.2333333333333334], [1.74594942E12, 1.2833333333333334], [1.74595386E12, 1.25], [1.74595524E12, 1.2333333333333334], [1.74594978E12, 1.2166666666666666], [1.74595608E12, 1.25], [1.74595302E12, 1.1666666666666667], [1.745952E12, 1.1666666666666667], [1.74594858E12, 1.2333333333333334], [1.74595182E12, 1.1833333333333333], [1.74595404E12, 1.1666666666666667], [1.74595506E12, 1.1666666666666667], [1.7459508E12, 1.2666666666666666], [1.74595026E12, 1.2166666666666666], [1.7459535E12, 1.25], [1.74595248E12, 1.25], [1.7459547E12, 1.1333333333333333], [1.74594906E12, 1.2166666666666666], [1.74595488E12, 1.2833333333333334], [1.7459523E12, 1.2666666666666666], [1.74595452E12, 1.2333333333333334], [1.74595128E12, 1.1833333333333333], [1.7459559E12, 1.2333333333333334], [1.74595044E12, 1.1833333333333333], [1.74595266E12, 1.2166666666666666], [1.74594822E12, 0.5166666666666667], [1.74595572E12, 1.2], [1.74595146E12, 1.25], [1.74595368E12, 1.2333333333333334], [1.74594924E12, 1.3166666666666667]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74595638E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5166666666666667, "minX": 1.74594822E12, "maxY": 1.3333333333333333, "series": [{"data": [[1.7459493E12, 1.3166666666666667], [1.74595254E12, 1.2333333333333334], [1.74595152E12, 1.2], [1.74595596E12, 1.2833333333333334], [1.74595032E12, 1.1833333333333333], [1.74595356E12, 1.2333333333333334], [1.74595134E12, 1.15], [1.74595494E12, 1.2166666666666666], [1.74595578E12, 1.2], [1.74594948E12, 1.2], [1.7459517E12, 1.2333333333333334], [1.74595392E12, 1.2333333333333334], [1.74595374E12, 1.3], [1.74595476E12, 1.2833333333333334], [1.74594828E12, 1.1833333333333333], [1.7459505E12, 1.15], [1.74595272E12, 1.2333333333333334], [1.7459556E12, 1.2166666666666666], [1.74594996E12, 1.2166666666666666], [1.74595218E12, 1.25], [1.7459544E12, 1.2333333333333334], [1.74595422E12, 1.2333333333333334], [1.74595458E12, 1.2166666666666666], [1.74594876E12, 1.2333333333333334], [1.74595098E12, 1.2], [1.7459532E12, 1.1666666666666667], [1.74595236E12, 1.1833333333333333], [1.74594912E12, 1.25], [1.74595014E12, 1.2666666666666666], [1.74595116E12, 1.3], [1.74594894E12, 1.2166666666666666], [1.74595338E12, 1.2], [1.74595542E12, 1.2666666666666666], [1.74595446E12, 1.2333333333333334], [1.74595464E12, 1.1833333333333333], [1.74595566E12, 1.2], [1.745949E12, 1.2333333333333334], [1.74595122E12, 1.25], [1.74595344E12, 1.2333333333333334], [1.74595002E12, 1.2166666666666666], [1.74595584E12, 1.2666666666666666], [1.74595326E12, 1.2833333333333334], [1.74595224E12, 1.2], [1.7459514E12, 1.1833333333333333], [1.74595362E12, 1.2333333333333334], [1.74594918E12, 1.1333333333333333], [1.74595548E12, 1.2], [1.7459502E12, 1.2166666666666666], [1.74595242E12, 1.2666666666666666], [1.74595188E12, 1.25], [1.74594864E12, 1.2], [1.7459553E12, 1.2833333333333334], [1.74594966E12, 1.2166666666666666], [1.7459541E12, 1.2833333333333334], [1.74595068E12, 1.25], [1.74594846E12, 1.2833333333333334], [1.7459529E12, 1.25], [1.74594882E12, 1.2333333333333334], [1.74595512E12, 1.1833333333333333], [1.74595206E12, 1.2166666666666666], [1.74595428E12, 1.2166666666666666], [1.74595104E12, 1.2666666666666666], [1.74595614E12, 1.1333333333333333], [1.74595632E12, 1.25], [1.74594984E12, 1.2333333333333334], [1.74595086E12, 1.2166666666666666], [1.74595308E12, 1.2], [1.74595092E12, 1.1833333333333333], [1.7459487E12, 1.2166666666666666], [1.74595314E12, 1.1666666666666667], [1.74595554E12, 1.15], [1.74594972E12, 1.2666666666666666], [1.74595194E12, 1.2666666666666666], [1.74595416E12, 1.2833333333333334], [1.74595008E12, 1.25], [1.7459511E12, 1.1833333333333333], [1.74595332E12, 1.2333333333333334], [1.74595518E12, 1.25], [1.74595212E12, 1.2666666666666666], [1.74595536E12, 1.15], [1.74594888E12, 1.2833333333333334], [1.7459499E12, 1.2666666666666666], [1.74595434E12, 1.2833333333333334], [1.74595638E12, 0.75], [1.74594834E12, 1.2833333333333334], [1.74595158E12, 1.2333333333333334], [1.7459538E12, 1.2166666666666666], [1.74595056E12, 1.2166666666666666], [1.745955E12, 1.1666666666666667], [1.74594936E12, 1.2166666666666666], [1.74595038E12, 1.25], [1.7459526E12, 1.2166666666666666], [1.7459562E12, 1.1833333333333333], [1.74595398E12, 1.2166666666666666], [1.74595482E12, 1.2833333333333334], [1.74594852E12, 1.2], [1.74595074E12, 1.2666666666666666], [1.74595296E12, 1.1666666666666667], [1.74594954E12, 1.2833333333333334], [1.74595278E12, 1.2833333333333334], [1.74595602E12, 1.2], [1.74595176E12, 1.1666666666666667], [1.7459496E12, 1.2], [1.74595626E12, 1.25], [1.74595062E12, 1.15], [1.74595284E12, 1.2166666666666666], [1.74595164E12, 1.1666666666666667], [1.7459484E12, 1.2333333333333334], [1.74594942E12, 1.2833333333333334], [1.74595386E12, 1.25], [1.74595524E12, 1.2333333333333334], [1.74594978E12, 1.2166666666666666], [1.74595608E12, 1.25], [1.74595302E12, 1.1666666666666667], [1.745952E12, 1.1666666666666667], [1.74594858E12, 1.2333333333333334], [1.74595182E12, 1.1833333333333333], [1.74595404E12, 1.1666666666666667], [1.74595506E12, 1.1666666666666667], [1.7459508E12, 1.2666666666666666], [1.74595026E12, 1.2166666666666666], [1.7459535E12, 1.25], [1.74595248E12, 1.25], [1.7459547E12, 1.1333333333333333], [1.74594906E12, 1.2166666666666666], [1.74595488E12, 1.2833333333333334], [1.7459523E12, 1.2666666666666666], [1.74595452E12, 1.2333333333333334], [1.74595128E12, 1.1833333333333333], [1.7459559E12, 1.2333333333333334], [1.74595044E12, 1.1833333333333333], [1.74595266E12, 1.2166666666666666], [1.74594822E12, 0.5166666666666667], [1.74595572E12, 1.2], [1.74595146E12, 1.25], [1.74595368E12, 1.2333333333333334], [1.74594924E12, 1.3166666666666667]], "isOverall": false, "label": "HTTP Request - enroll-success", "isController": false}, {"data": [[1.7459493E12, 1.3], [1.74595254E12, 1.2166666666666666], [1.74595152E12, 1.2166666666666666], [1.74595596E12, 1.2666666666666666], [1.74595032E12, 1.1833333333333333], [1.74595356E12, 1.2333333333333334], [1.74595134E12, 1.1666666666666667], [1.74595494E12, 1.2166666666666666], [1.74595578E12, 1.1833333333333333], [1.74594948E12, 1.1833333333333333], [1.7459517E12, 1.2333333333333334], [1.74595392E12, 1.2333333333333334], [1.74595374E12, 1.3], [1.74595476E12, 1.2666666666666666], [1.74594828E12, 1.1833333333333333], [1.7459505E12, 1.1333333333333333], [1.74595272E12, 1.2333333333333334], [1.7459556E12, 1.2], [1.74594996E12, 1.2166666666666666], [1.74595218E12, 1.25], [1.7459544E12, 1.2333333333333334], [1.74595422E12, 1.2166666666666666], [1.74595458E12, 1.2166666666666666], [1.74594876E12, 1.2166666666666666], [1.74595098E12, 1.1833333333333333], [1.7459532E12, 1.1666666666666667], [1.74595236E12, 1.1833333333333333], [1.74594912E12, 1.25], [1.74595014E12, 1.25], [1.74595116E12, 1.3], [1.74594894E12, 1.2166666666666666], [1.74595338E12, 1.2], [1.74595542E12, 1.2833333333333334], [1.74595446E12, 1.2333333333333334], [1.74595464E12, 1.2], [1.74595566E12, 1.2166666666666666], [1.745949E12, 1.25], [1.74595122E12, 1.25], [1.74595344E12, 1.2333333333333334], [1.74595002E12, 1.2166666666666666], [1.74595584E12, 1.2666666666666666], [1.74595326E12, 1.2666666666666666], [1.74595224E12, 1.1833333333333333], [1.7459514E12, 1.1833333333333333], [1.74595362E12, 1.2333333333333334], [1.74594918E12, 1.1333333333333333], [1.74595548E12, 1.2], [1.7459502E12, 1.2333333333333334], [1.74595242E12, 1.2833333333333334], [1.74595188E12, 1.2666666666666666], [1.74594864E12, 1.1833333333333333], [1.7459553E12, 1.2833333333333334], [1.74594966E12, 1.2166666666666666], [1.7459541E12, 1.2666666666666666], [1.74595068E12, 1.25], [1.74594846E12, 1.2833333333333334], [1.7459529E12, 1.25], [1.74594882E12, 1.25], [1.74595512E12, 1.1666666666666667], [1.74595206E12, 1.2], [1.74595428E12, 1.2166666666666666], [1.74595104E12, 1.2833333333333334], [1.74595614E12, 1.15], [1.74595632E12, 1.2333333333333334], [1.74594984E12, 1.25], [1.74595086E12, 1.2166666666666666], [1.74595308E12, 1.2166666666666666], [1.74595092E12, 1.2], [1.7459487E12, 1.2333333333333334], [1.74595314E12, 1.1666666666666667], [1.74595554E12, 1.15], [1.74594972E12, 1.2666666666666666], [1.74595194E12, 1.25], [1.74595416E12, 1.3], [1.74595008E12, 1.25], [1.7459511E12, 1.1666666666666667], [1.74595332E12, 1.25], [1.74595518E12, 1.25], [1.74595212E12, 1.2833333333333334], [1.74595536E12, 1.15], [1.74594888E12, 1.2666666666666666], [1.7459499E12, 1.2666666666666666], [1.74595434E12, 1.2833333333333334], [1.74595638E12, 0.75], [1.74594834E12, 1.2833333333333334], [1.74595158E12, 1.2166666666666666], [1.7459538E12, 1.2166666666666666], [1.74595056E12, 1.2166666666666666], [1.745955E12, 1.1666666666666667], [1.74594936E12, 1.2333333333333334], [1.74595038E12, 1.2333333333333334], [1.7459526E12, 1.2333333333333334], [1.7459562E12, 1.1666666666666667], [1.74595398E12, 1.2], [1.74595482E12, 1.3], [1.74594852E12, 1.2], [1.74595074E12, 1.2666666666666666], [1.74595296E12, 1.15], [1.74594954E12, 1.2833333333333334], [1.74595278E12, 1.2666666666666666], [1.74595602E12, 1.2166666666666666], [1.74595176E12, 1.1666666666666667], [1.7459496E12, 1.2166666666666666], [1.74595626E12, 1.2666666666666666], [1.74595062E12, 1.15], [1.74595284E12, 1.2333333333333334], [1.74595164E12, 1.1666666666666667], [1.7459484E12, 1.2333333333333334], [1.74594942E12, 1.2833333333333334], [1.74595386E12, 1.2666666666666666], [1.74595524E12, 1.2333333333333334], [1.74594978E12, 1.2], [1.74595608E12, 1.2333333333333334], [1.74595302E12, 1.1666666666666667], [1.745952E12, 1.1833333333333333], [1.74594858E12, 1.25], [1.74595182E12, 1.1833333333333333], [1.74595404E12, 1.1833333333333333], [1.74595506E12, 1.1666666666666667], [1.7459508E12, 1.2666666666666666], [1.74595026E12, 1.2166666666666666], [1.7459535E12, 1.2333333333333334], [1.74595248E12, 1.25], [1.7459547E12, 1.1333333333333333], [1.74594906E12, 1.2], [1.74595488E12, 1.2833333333333334], [1.7459523E12, 1.2666666666666666], [1.74595452E12, 1.2333333333333334], [1.74595128E12, 1.1833333333333333], [1.7459559E12, 1.25], [1.74595044E12, 1.2], [1.74595266E12, 1.2166666666666666], [1.74594822E12, 0.5166666666666667], [1.74595572E12, 1.2], [1.74595146E12, 1.2333333333333334], [1.74595368E12, 1.2333333333333334], [1.74594924E12, 1.3333333333333333]], "isOverall": false, "label": "Create CSR-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74595638E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0333333333333334, "minX": 1.74594822E12, "maxY": 2.65, "series": [{"data": [[1.7459493E12, 2.6166666666666667], [1.74595254E12, 2.45], [1.74595152E12, 2.4166666666666665], [1.74595596E12, 2.55], [1.74595032E12, 2.3666666666666667], [1.74595356E12, 2.466666666666667], [1.74595134E12, 2.316666666666667], [1.74595494E12, 2.433333333333333], [1.74595578E12, 2.3833333333333333], [1.74594948E12, 2.3833333333333333], [1.7459517E12, 2.466666666666667], [1.74595392E12, 2.466666666666667], [1.74595374E12, 2.6], [1.74595476E12, 2.55], [1.74594828E12, 2.3666666666666667], [1.7459505E12, 2.283333333333333], [1.74595272E12, 2.466666666666667], [1.7459556E12, 2.4166666666666665], [1.74594996E12, 2.433333333333333], [1.74595218E12, 2.5], [1.7459544E12, 2.466666666666667], [1.74595422E12, 2.45], [1.74595458E12, 2.433333333333333], [1.74594876E12, 2.45], [1.74595098E12, 2.3833333333333333], [1.7459532E12, 2.3333333333333335], [1.74595236E12, 2.3666666666666667], [1.74594912E12, 2.5], [1.74595014E12, 2.5166666666666666], [1.74595116E12, 2.6], [1.74594894E12, 2.433333333333333], [1.74595338E12, 2.4], [1.74595542E12, 2.55], [1.74595446E12, 2.466666666666667], [1.74595464E12, 2.3833333333333333], [1.74595566E12, 2.4166666666666665], [1.745949E12, 2.4833333333333334], [1.74595122E12, 2.5], [1.74595344E12, 2.466666666666667], [1.74595002E12, 2.433333333333333], [1.74595584E12, 2.533333333333333], [1.74595326E12, 2.55], [1.74595224E12, 2.3833333333333333], [1.7459514E12, 2.3666666666666667], [1.74595362E12, 2.466666666666667], [1.74594918E12, 2.2666666666666666], [1.74595548E12, 2.4], [1.7459502E12, 2.45], [1.74595242E12, 2.55], [1.74595188E12, 2.5166666666666666], [1.74594864E12, 2.3833333333333333], [1.7459553E12, 2.566666666666667], [1.74594966E12, 2.433333333333333], [1.7459541E12, 2.55], [1.74595068E12, 2.5], [1.74594846E12, 2.566666666666667], [1.7459529E12, 2.5], [1.74594882E12, 2.4833333333333334], [1.74595512E12, 2.35], [1.74595206E12, 2.4166666666666665], [1.74595428E12, 2.433333333333333], [1.74595104E12, 2.55], [1.74595614E12, 2.283333333333333], [1.74595632E12, 2.4833333333333334], [1.74594984E12, 2.4833333333333334], [1.74595086E12, 2.433333333333333], [1.74595308E12, 2.4166666666666665], [1.74595092E12, 2.3833333333333333], [1.7459487E12, 2.45], [1.74595314E12, 2.3333333333333335], [1.74595554E12, 2.3], [1.74594972E12, 2.533333333333333], [1.74595194E12, 2.5166666666666666], [1.74595416E12, 2.5833333333333335], [1.74595008E12, 2.5], [1.7459511E12, 2.35], [1.74595332E12, 2.4833333333333334], [1.74595518E12, 2.5], [1.74595212E12, 2.55], [1.74595536E12, 2.3], [1.74594888E12, 2.55], [1.7459499E12, 2.533333333333333], [1.74595434E12, 2.566666666666667], [1.74595638E12, 1.5], [1.74594834E12, 2.566666666666667], [1.74595158E12, 2.45], [1.7459538E12, 2.433333333333333], [1.74595056E12, 2.433333333333333], [1.745955E12, 2.3333333333333335], [1.74594936E12, 2.45], [1.74595038E12, 2.4833333333333334], [1.7459526E12, 2.45], [1.7459562E12, 2.35], [1.74595398E12, 2.4166666666666665], [1.74595482E12, 2.5833333333333335], [1.74594852E12, 2.4], [1.74595074E12, 2.533333333333333], [1.74595296E12, 2.316666666666667], [1.74594954E12, 2.566666666666667], [1.74595278E12, 2.55], [1.74595602E12, 2.4166666666666665], [1.74595176E12, 2.3333333333333335], [1.7459496E12, 2.4166666666666665], [1.74595626E12, 2.5166666666666666], [1.74595062E12, 2.3], [1.74595284E12, 2.45], [1.74595164E12, 2.3333333333333335], [1.7459484E12, 2.466666666666667], [1.74594942E12, 2.566666666666667], [1.74595386E12, 2.5166666666666666], [1.74595524E12, 2.466666666666667], [1.74594978E12, 2.4166666666666665], [1.74595608E12, 2.4833333333333334], [1.74595302E12, 2.3333333333333335], [1.745952E12, 2.35], [1.74594858E12, 2.4833333333333334], [1.74595182E12, 2.3666666666666667], [1.74595404E12, 2.35], [1.74595506E12, 2.3333333333333335], [1.7459508E12, 2.533333333333333], [1.74595026E12, 2.433333333333333], [1.7459535E12, 2.4833333333333334], [1.74595248E12, 2.5], [1.7459547E12, 2.2666666666666666], [1.74594906E12, 2.4166666666666665], [1.74595488E12, 2.566666666666667], [1.7459523E12, 2.533333333333333], [1.74595452E12, 2.466666666666667], [1.74595128E12, 2.3666666666666667], [1.7459559E12, 2.4833333333333334], [1.74595044E12, 2.3833333333333333], [1.74595266E12, 2.433333333333333], [1.74594822E12, 1.0333333333333334], [1.74595572E12, 2.4], [1.74595146E12, 2.4833333333333334], [1.74595368E12, 2.466666666666667], [1.74594924E12, 2.65]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74595638E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

