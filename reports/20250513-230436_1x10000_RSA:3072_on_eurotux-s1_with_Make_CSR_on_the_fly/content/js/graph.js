/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 25.0, "minX": 0.0, "maxY": 2132.0, "series": [{"data": [[0.0, 115.0], [0.1, 122.0], [0.2, 126.0], [0.3, 128.0], [0.4, 129.0], [0.5, 130.0], [0.6, 131.0], [0.7, 133.0], [0.8, 135.0], [0.9, 136.0], [1.0, 137.0], [1.1, 138.0], [1.2, 139.0], [1.3, 141.0], [1.4, 141.0], [1.5, 143.0], [1.6, 144.0], [1.7, 145.0], [1.8, 146.0], [1.9, 147.0], [2.0, 149.0], [2.1, 150.0], [2.2, 152.0], [2.3, 153.0], [2.4, 154.0], [2.5, 155.0], [2.6, 156.0], [2.7, 157.0], [2.8, 158.0], [2.9, 158.0], [3.0, 159.0], [3.1, 160.0], [3.2, 161.0], [3.3, 161.0], [3.4, 162.0], [3.5, 163.0], [3.6, 163.0], [3.7, 165.0], [3.8, 165.0], [3.9, 166.0], [4.0, 167.0], [4.1, 168.0], [4.2, 168.0], [4.3, 169.0], [4.4, 170.0], [4.5, 171.0], [4.6, 172.0], [4.7, 172.0], [4.8, 173.0], [4.9, 174.0], [5.0, 175.0], [5.1, 175.0], [5.2, 176.0], [5.3, 177.0], [5.4, 179.0], [5.5, 179.0], [5.6, 180.0], [5.7, 181.0], [5.8, 181.0], [5.9, 182.0], [6.0, 183.0], [6.1, 183.0], [6.2, 184.0], [6.3, 184.0], [6.4, 185.0], [6.5, 185.0], [6.6, 186.0], [6.7, 186.0], [6.8, 187.0], [6.9, 188.0], [7.0, 188.0], [7.1, 189.0], [7.2, 189.0], [7.3, 190.0], [7.4, 191.0], [7.5, 191.0], [7.6, 192.0], [7.7, 193.0], [7.8, 193.0], [7.9, 194.0], [8.0, 195.0], [8.1, 195.0], [8.2, 196.0], [8.3, 197.0], [8.4, 197.0], [8.5, 198.0], [8.6, 199.0], [8.7, 199.0], [8.8, 199.0], [8.9, 200.0], [9.0, 200.0], [9.1, 201.0], [9.2, 201.0], [9.3, 202.0], [9.4, 202.0], [9.5, 203.0], [9.6, 203.0], [9.7, 204.0], [9.8, 204.0], [9.9, 205.0], [10.0, 206.0], [10.1, 206.0], [10.2, 206.0], [10.3, 207.0], [10.4, 208.0], [10.5, 208.0], [10.6, 209.0], [10.7, 209.0], [10.8, 209.0], [10.9, 210.0], [11.0, 210.0], [11.1, 211.0], [11.2, 211.0], [11.3, 212.0], [11.4, 212.0], [11.5, 213.0], [11.6, 213.0], [11.7, 214.0], [11.8, 214.0], [11.9, 215.0], [12.0, 215.0], [12.1, 216.0], [12.2, 216.0], [12.3, 216.0], [12.4, 217.0], [12.5, 217.0], [12.6, 218.0], [12.7, 218.0], [12.8, 219.0], [12.9, 220.0], [13.0, 220.0], [13.1, 220.0], [13.2, 221.0], [13.3, 222.0], [13.4, 222.0], [13.5, 223.0], [13.6, 223.0], [13.7, 224.0], [13.8, 224.0], [13.9, 225.0], [14.0, 225.0], [14.1, 226.0], [14.2, 227.0], [14.3, 227.0], [14.4, 228.0], [14.5, 228.0], [14.6, 229.0], [14.7, 229.0], [14.8, 230.0], [14.9, 230.0], [15.0, 231.0], [15.1, 231.0], [15.2, 232.0], [15.3, 233.0], [15.4, 233.0], [15.5, 234.0], [15.6, 234.0], [15.7, 235.0], [15.8, 235.0], [15.9, 236.0], [16.0, 236.0], [16.1, 237.0], [16.2, 237.0], [16.3, 238.0], [16.4, 239.0], [16.5, 239.0], [16.6, 239.0], [16.7, 240.0], [16.8, 240.0], [16.9, 241.0], [17.0, 241.0], [17.1, 242.0], [17.2, 242.0], [17.3, 243.0], [17.4, 244.0], [17.5, 244.0], [17.6, 245.0], [17.7, 245.0], [17.8, 246.0], [17.9, 246.0], [18.0, 247.0], [18.1, 248.0], [18.2, 248.0], [18.3, 249.0], [18.4, 250.0], [18.5, 250.0], [18.6, 251.0], [18.7, 251.0], [18.8, 251.0], [18.9, 252.0], [19.0, 252.0], [19.1, 253.0], [19.2, 253.0], [19.3, 254.0], [19.4, 254.0], [19.5, 255.0], [19.6, 256.0], [19.7, 256.0], [19.8, 256.0], [19.9, 257.0], [20.0, 257.0], [20.1, 258.0], [20.2, 258.0], [20.3, 258.0], [20.4, 259.0], [20.5, 260.0], [20.6, 260.0], [20.7, 261.0], [20.8, 261.0], [20.9, 262.0], [21.0, 262.0], [21.1, 263.0], [21.2, 263.0], [21.3, 264.0], [21.4, 264.0], [21.5, 265.0], [21.6, 265.0], [21.7, 266.0], [21.8, 266.0], [21.9, 266.0], [22.0, 267.0], [22.1, 267.0], [22.2, 268.0], [22.3, 268.0], [22.4, 269.0], [22.5, 269.0], [22.6, 270.0], [22.7, 270.0], [22.8, 271.0], [22.9, 271.0], [23.0, 272.0], [23.1, 273.0], [23.2, 274.0], [23.3, 274.0], [23.4, 274.0], [23.5, 275.0], [23.6, 275.0], [23.7, 275.0], [23.8, 276.0], [23.9, 277.0], [24.0, 277.0], [24.1, 278.0], [24.2, 278.0], [24.3, 279.0], [24.4, 279.0], [24.5, 280.0], [24.6, 280.0], [24.7, 281.0], [24.8, 282.0], [24.9, 282.0], [25.0, 283.0], [25.1, 283.0], [25.2, 284.0], [25.3, 285.0], [25.4, 285.0], [25.5, 285.0], [25.6, 286.0], [25.7, 286.0], [25.8, 287.0], [25.9, 287.0], [26.0, 288.0], [26.1, 288.0], [26.2, 289.0], [26.3, 289.0], [26.4, 290.0], [26.5, 290.0], [26.6, 291.0], [26.7, 291.0], [26.8, 292.0], [26.9, 293.0], [27.0, 293.0], [27.1, 293.0], [27.2, 294.0], [27.3, 294.0], [27.4, 295.0], [27.5, 295.0], [27.6, 296.0], [27.7, 296.0], [27.8, 296.0], [27.9, 297.0], [28.0, 298.0], [28.1, 298.0], [28.2, 299.0], [28.3, 299.0], [28.4, 299.0], [28.5, 300.0], [28.6, 301.0], [28.7, 301.0], [28.8, 301.0], [28.9, 302.0], [29.0, 302.0], [29.1, 303.0], [29.2, 303.0], [29.3, 304.0], [29.4, 304.0], [29.5, 305.0], [29.6, 306.0], [29.7, 306.0], [29.8, 306.0], [29.9, 307.0], [30.0, 307.0], [30.1, 308.0], [30.2, 308.0], [30.3, 309.0], [30.4, 309.0], [30.5, 310.0], [30.6, 310.0], [30.7, 311.0], [30.8, 311.0], [30.9, 312.0], [31.0, 312.0], [31.1, 313.0], [31.2, 313.0], [31.3, 314.0], [31.4, 314.0], [31.5, 314.0], [31.6, 315.0], [31.7, 315.0], [31.8, 316.0], [31.9, 316.0], [32.0, 317.0], [32.1, 317.0], [32.2, 318.0], [32.3, 318.0], [32.4, 319.0], [32.5, 319.0], [32.6, 320.0], [32.7, 320.0], [32.8, 321.0], [32.9, 321.0], [33.0, 322.0], [33.1, 322.0], [33.2, 323.0], [33.3, 324.0], [33.4, 324.0], [33.5, 324.0], [33.6, 325.0], [33.7, 326.0], [33.8, 326.0], [33.9, 327.0], [34.0, 327.0], [34.1, 327.0], [34.2, 328.0], [34.3, 328.0], [34.4, 329.0], [34.5, 329.0], [34.6, 330.0], [34.7, 330.0], [34.8, 330.0], [34.9, 331.0], [35.0, 332.0], [35.1, 332.0], [35.2, 333.0], [35.3, 333.0], [35.4, 334.0], [35.5, 335.0], [35.6, 335.0], [35.7, 336.0], [35.8, 336.0], [35.9, 336.0], [36.0, 337.0], [36.1, 337.0], [36.2, 338.0], [36.3, 338.0], [36.4, 338.0], [36.5, 339.0], [36.6, 339.0], [36.7, 339.0], [36.8, 340.0], [36.9, 340.0], [37.0, 341.0], [37.1, 342.0], [37.2, 342.0], [37.3, 342.0], [37.4, 343.0], [37.5, 343.0], [37.6, 344.0], [37.7, 344.0], [37.8, 345.0], [37.9, 345.0], [38.0, 345.0], [38.1, 346.0], [38.2, 346.0], [38.3, 346.0], [38.4, 347.0], [38.5, 347.0], [38.6, 348.0], [38.7, 348.0], [38.8, 349.0], [38.9, 349.0], [39.0, 350.0], [39.1, 351.0], [39.2, 351.0], [39.3, 351.0], [39.4, 352.0], [39.5, 353.0], [39.6, 353.0], [39.7, 353.0], [39.8, 354.0], [39.9, 354.0], [40.0, 355.0], [40.1, 356.0], [40.2, 356.0], [40.3, 357.0], [40.4, 357.0], [40.5, 357.0], [40.6, 358.0], [40.7, 358.0], [40.8, 359.0], [40.9, 359.0], [41.0, 360.0], [41.1, 360.0], [41.2, 361.0], [41.3, 362.0], [41.4, 362.0], [41.5, 363.0], [41.6, 363.0], [41.7, 364.0], [41.8, 364.0], [41.9, 365.0], [42.0, 365.0], [42.1, 365.0], [42.2, 366.0], [42.3, 367.0], [42.4, 367.0], [42.5, 368.0], [42.6, 368.0], [42.7, 368.0], [42.8, 369.0], [42.9, 369.0], [43.0, 370.0], [43.1, 370.0], [43.2, 371.0], [43.3, 371.0], [43.4, 371.0], [43.5, 372.0], [43.6, 373.0], [43.7, 374.0], [43.8, 374.0], [43.9, 375.0], [44.0, 375.0], [44.1, 376.0], [44.2, 376.0], [44.3, 377.0], [44.4, 377.0], [44.5, 377.0], [44.6, 378.0], [44.7, 378.0], [44.8, 379.0], [44.9, 380.0], [45.0, 380.0], [45.1, 380.0], [45.2, 381.0], [45.3, 382.0], [45.4, 382.0], [45.5, 383.0], [45.6, 384.0], [45.7, 385.0], [45.8, 386.0], [45.9, 386.0], [46.0, 387.0], [46.1, 388.0], [46.2, 388.0], [46.3, 388.0], [46.4, 389.0], [46.5, 390.0], [46.6, 390.0], [46.7, 391.0], [46.8, 392.0], [46.9, 392.0], [47.0, 393.0], [47.1, 394.0], [47.2, 394.0], [47.3, 395.0], [47.4, 395.0], [47.5, 396.0], [47.6, 396.0], [47.7, 397.0], [47.8, 397.0], [47.9, 397.0], [48.0, 398.0], [48.1, 399.0], [48.2, 399.0], [48.3, 400.0], [48.4, 400.0], [48.5, 401.0], [48.6, 401.0], [48.7, 402.0], [48.8, 402.0], [48.9, 403.0], [49.0, 403.0], [49.1, 404.0], [49.2, 405.0], [49.3, 405.0], [49.4, 406.0], [49.5, 407.0], [49.6, 407.0], [49.7, 407.0], [49.8, 408.0], [49.9, 408.0], [50.0, 409.0], [50.1, 409.0], [50.2, 409.0], [50.3, 410.0], [50.4, 410.0], [50.5, 411.0], [50.6, 411.0], [50.7, 412.0], [50.8, 412.0], [50.9, 413.0], [51.0, 413.0], [51.1, 413.0], [51.2, 414.0], [51.3, 414.0], [51.4, 415.0], [51.5, 416.0], [51.6, 417.0], [51.7, 417.0], [51.8, 418.0], [51.9, 418.0], [52.0, 419.0], [52.1, 420.0], [52.2, 420.0], [52.3, 421.0], [52.4, 421.0], [52.5, 422.0], [52.6, 423.0], [52.7, 423.0], [52.8, 424.0], [52.9, 425.0], [53.0, 425.0], [53.1, 426.0], [53.2, 427.0], [53.3, 427.0], [53.4, 428.0], [53.5, 428.0], [53.6, 428.0], [53.7, 429.0], [53.8, 430.0], [53.9, 430.0], [54.0, 431.0], [54.1, 431.0], [54.2, 432.0], [54.3, 433.0], [54.4, 433.0], [54.5, 434.0], [54.6, 434.0], [54.7, 435.0], [54.8, 436.0], [54.9, 436.0], [55.0, 437.0], [55.1, 437.0], [55.2, 438.0], [55.3, 438.0], [55.4, 439.0], [55.5, 440.0], [55.6, 440.0], [55.7, 441.0], [55.8, 441.0], [55.9, 442.0], [56.0, 443.0], [56.1, 443.0], [56.2, 444.0], [56.3, 444.0], [56.4, 445.0], [56.5, 445.0], [56.6, 446.0], [56.7, 446.0], [56.8, 447.0], [56.9, 448.0], [57.0, 448.0], [57.1, 449.0], [57.2, 449.0], [57.3, 450.0], [57.4, 451.0], [57.5, 451.0], [57.6, 452.0], [57.7, 453.0], [57.8, 453.0], [57.9, 454.0], [58.0, 454.0], [58.1, 455.0], [58.2, 456.0], [58.3, 456.0], [58.4, 457.0], [58.5, 457.0], [58.6, 458.0], [58.7, 458.0], [58.8, 459.0], [58.9, 459.0], [59.0, 460.0], [59.1, 460.0], [59.2, 461.0], [59.3, 461.0], [59.4, 462.0], [59.5, 462.0], [59.6, 463.0], [59.7, 464.0], [59.8, 464.0], [59.9, 465.0], [60.0, 466.0], [60.1, 467.0], [60.2, 468.0], [60.3, 468.0], [60.4, 469.0], [60.5, 469.0], [60.6, 470.0], [60.7, 470.0], [60.8, 471.0], [60.9, 471.0], [61.0, 472.0], [61.1, 473.0], [61.2, 473.0], [61.3, 474.0], [61.4, 475.0], [61.5, 476.0], [61.6, 477.0], [61.7, 477.0], [61.8, 478.0], [61.9, 479.0], [62.0, 480.0], [62.1, 481.0], [62.2, 482.0], [62.3, 483.0], [62.4, 483.0], [62.5, 484.0], [62.6, 485.0], [62.7, 486.0], [62.8, 486.0], [62.9, 487.0], [63.0, 487.0], [63.1, 488.0], [63.2, 489.0], [63.3, 489.0], [63.4, 490.0], [63.5, 491.0], [63.6, 491.0], [63.7, 492.0], [63.8, 493.0], [63.9, 493.0], [64.0, 494.0], [64.1, 495.0], [64.2, 496.0], [64.3, 496.0], [64.4, 497.0], [64.5, 497.0], [64.6, 499.0], [64.7, 499.0], [64.8, 500.0], [64.9, 501.0], [65.0, 501.0], [65.1, 502.0], [65.2, 503.0], [65.3, 503.0], [65.4, 504.0], [65.5, 505.0], [65.6, 505.0], [65.7, 506.0], [65.8, 507.0], [65.9, 507.0], [66.0, 508.0], [66.1, 509.0], [66.2, 509.0], [66.3, 510.0], [66.4, 511.0], [66.5, 511.0], [66.6, 512.0], [66.7, 513.0], [66.8, 514.0], [66.9, 515.0], [67.0, 516.0], [67.1, 517.0], [67.2, 518.0], [67.3, 519.0], [67.4, 519.0], [67.5, 520.0], [67.6, 521.0], [67.7, 522.0], [67.8, 523.0], [67.9, 523.0], [68.0, 524.0], [68.1, 525.0], [68.2, 526.0], [68.3, 526.0], [68.4, 527.0], [68.5, 528.0], [68.6, 528.0], [68.7, 529.0], [68.8, 530.0], [68.9, 531.0], [69.0, 531.0], [69.1, 532.0], [69.2, 533.0], [69.3, 534.0], [69.4, 534.0], [69.5, 535.0], [69.6, 536.0], [69.7, 536.0], [69.8, 537.0], [69.9, 538.0], [70.0, 539.0], [70.1, 539.0], [70.2, 541.0], [70.3, 542.0], [70.4, 543.0], [70.5, 544.0], [70.6, 544.0], [70.7, 545.0], [70.8, 546.0], [70.9, 547.0], [71.0, 548.0], [71.1, 549.0], [71.2, 550.0], [71.3, 550.0], [71.4, 551.0], [71.5, 552.0], [71.6, 553.0], [71.7, 554.0], [71.8, 555.0], [71.9, 555.0], [72.0, 556.0], [72.1, 557.0], [72.2, 558.0], [72.3, 558.0], [72.4, 559.0], [72.5, 560.0], [72.6, 561.0], [72.7, 562.0], [72.8, 563.0], [72.9, 564.0], [73.0, 564.0], [73.1, 565.0], [73.2, 566.0], [73.3, 566.0], [73.4, 567.0], [73.5, 569.0], [73.6, 569.0], [73.7, 570.0], [73.8, 571.0], [73.9, 572.0], [74.0, 573.0], [74.1, 574.0], [74.2, 575.0], [74.3, 576.0], [74.4, 576.0], [74.5, 577.0], [74.6, 578.0], [74.7, 579.0], [74.8, 579.0], [74.9, 581.0], [75.0, 582.0], [75.1, 583.0], [75.2, 584.0], [75.3, 584.0], [75.4, 585.0], [75.5, 586.0], [75.6, 587.0], [75.7, 588.0], [75.8, 590.0], [75.9, 590.0], [76.0, 591.0], [76.1, 593.0], [76.2, 594.0], [76.3, 594.0], [76.4, 596.0], [76.5, 597.0], [76.6, 598.0], [76.7, 598.0], [76.8, 599.0], [76.9, 600.0], [77.0, 601.0], [77.1, 602.0], [77.2, 603.0], [77.3, 603.0], [77.4, 604.0], [77.5, 605.0], [77.6, 606.0], [77.7, 607.0], [77.8, 608.0], [77.9, 609.0], [78.0, 610.0], [78.1, 610.0], [78.2, 611.0], [78.3, 612.0], [78.4, 613.0], [78.5, 614.0], [78.6, 614.0], [78.7, 616.0], [78.8, 617.0], [78.9, 618.0], [79.0, 619.0], [79.1, 620.0], [79.2, 621.0], [79.3, 623.0], [79.4, 624.0], [79.5, 625.0], [79.6, 626.0], [79.7, 627.0], [79.8, 628.0], [79.9, 629.0], [80.0, 630.0], [80.1, 631.0], [80.2, 632.0], [80.3, 633.0], [80.4, 634.0], [80.5, 636.0], [80.6, 637.0], [80.7, 638.0], [80.8, 640.0], [80.9, 641.0], [81.0, 642.0], [81.1, 643.0], [81.2, 644.0], [81.3, 645.0], [81.4, 646.0], [81.5, 648.0], [81.6, 649.0], [81.7, 650.0], [81.8, 652.0], [81.9, 653.0], [82.0, 654.0], [82.1, 656.0], [82.2, 657.0], [82.3, 659.0], [82.4, 660.0], [82.5, 661.0], [82.6, 662.0], [82.7, 663.0], [82.8, 664.0], [82.9, 666.0], [83.0, 666.0], [83.1, 668.0], [83.2, 669.0], [83.3, 670.0], [83.4, 672.0], [83.5, 673.0], [83.6, 675.0], [83.7, 676.0], [83.8, 678.0], [83.9, 679.0], [84.0, 679.0], [84.1, 681.0], [84.2, 682.0], [84.3, 684.0], [84.4, 686.0], [84.5, 688.0], [84.6, 689.0], [84.7, 690.0], [84.8, 692.0], [84.9, 693.0], [85.0, 695.0], [85.1, 696.0], [85.2, 698.0], [85.3, 700.0], [85.4, 702.0], [85.5, 704.0], [85.6, 705.0], [85.7, 706.0], [85.8, 708.0], [85.9, 710.0], [86.0, 712.0], [86.1, 713.0], [86.2, 715.0], [86.3, 717.0], [86.4, 719.0], [86.5, 720.0], [86.6, 721.0], [86.7, 723.0], [86.8, 725.0], [86.9, 727.0], [87.0, 729.0], [87.1, 730.0], [87.2, 732.0], [87.3, 734.0], [87.4, 736.0], [87.5, 738.0], [87.6, 739.0], [87.7, 741.0], [87.8, 742.0], [87.9, 743.0], [88.0, 745.0], [88.1, 746.0], [88.2, 748.0], [88.3, 749.0], [88.4, 750.0], [88.5, 752.0], [88.6, 753.0], [88.7, 755.0], [88.8, 759.0], [88.9, 761.0], [89.0, 762.0], [89.1, 764.0], [89.2, 765.0], [89.3, 769.0], [89.4, 770.0], [89.5, 772.0], [89.6, 774.0], [89.7, 776.0], [89.8, 778.0], [89.9, 780.0], [90.0, 783.0], [90.1, 785.0], [90.2, 787.0], [90.3, 788.0], [90.4, 790.0], [90.5, 792.0], [90.6, 794.0], [90.7, 796.0], [90.8, 797.0], [90.9, 800.0], [91.0, 804.0], [91.1, 806.0], [91.2, 809.0], [91.3, 814.0], [91.4, 817.0], [91.5, 818.0], [91.6, 821.0], [91.7, 825.0], [91.8, 827.0], [91.9, 829.0], [92.0, 831.0], [92.1, 834.0], [92.2, 835.0], [92.3, 839.0], [92.4, 842.0], [92.5, 844.0], [92.6, 847.0], [92.7, 850.0], [92.8, 852.0], [92.9, 856.0], [93.0, 859.0], [93.1, 863.0], [93.2, 866.0], [93.3, 869.0], [93.4, 872.0], [93.5, 875.0], [93.6, 880.0], [93.7, 888.0], [93.8, 891.0], [93.9, 896.0], [94.0, 899.0], [94.1, 901.0], [94.2, 904.0], [94.3, 906.0], [94.4, 910.0], [94.5, 913.0], [94.6, 919.0], [94.7, 924.0], [94.8, 927.0], [94.9, 929.0], [95.0, 933.0], [95.1, 935.0], [95.2, 940.0], [95.3, 945.0], [95.4, 948.0], [95.5, 952.0], [95.6, 960.0], [95.7, 965.0], [95.8, 969.0], [95.9, 976.0], [96.0, 983.0], [96.1, 988.0], [96.2, 994.0], [96.3, 998.0], [96.4, 1003.0], [96.5, 1008.0], [96.6, 1013.0], [96.7, 1022.0], [96.8, 1027.0], [96.9, 1036.0], [97.0, 1040.0], [97.1, 1047.0], [97.2, 1053.0], [97.3, 1062.0], [97.4, 1068.0], [97.5, 1080.0], [97.6, 1085.0], [97.7, 1098.0], [97.8, 1106.0], [97.9, 1120.0], [98.0, 1134.0], [98.1, 1145.0], [98.2, 1153.0], [98.3, 1165.0], [98.4, 1176.0], [98.5, 1191.0], [98.6, 1206.0], [98.7, 1216.0], [98.8, 1232.0], [98.9, 1241.0], [99.0, 1258.0], [99.1, 1296.0], [99.2, 1315.0], [99.3, 1344.0], [99.4, 1375.0], [99.5, 1416.0], [99.6, 1465.0], [99.7, 1514.0], [99.8, 1565.0], [99.9, 1697.0], [100.0, 2132.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[0.0, 25.0], [0.1, 26.0], [0.2, 26.0], [0.3, 26.0], [0.4, 26.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 27.0], [1.6, 27.0], [1.7, 27.0], [1.8, 27.0], [1.9, 27.0], [2.0, 27.0], [2.1, 28.0], [2.2, 28.0], [2.3, 28.0], [2.4, 28.0], [2.5, 28.0], [2.6, 28.0], [2.7, 28.0], [2.8, 28.0], [2.9, 28.0], [3.0, 28.0], [3.1, 28.0], [3.2, 28.0], [3.3, 28.0], [3.4, 28.0], [3.5, 28.0], [3.6, 28.0], [3.7, 28.0], [3.8, 28.0], [3.9, 28.0], [4.0, 28.0], [4.1, 28.0], [4.2, 28.0], [4.3, 28.0], [4.4, 28.0], [4.5, 28.0], [4.6, 28.0], [4.7, 28.0], [4.8, 28.0], [4.9, 28.0], [5.0, 28.0], [5.1, 28.0], [5.2, 28.0], [5.3, 28.0], [5.4, 28.0], [5.5, 28.0], [5.6, 28.0], [5.7, 28.0], [5.8, 28.0], [5.9, 28.0], [6.0, 28.0], [6.1, 28.0], [6.2, 28.0], [6.3, 28.0], [6.4, 28.0], [6.5, 28.0], [6.6, 28.0], [6.7, 29.0], [6.8, 29.0], [6.9, 29.0], [7.0, 29.0], [7.1, 29.0], [7.2, 29.0], [7.3, 29.0], [7.4, 29.0], [7.5, 29.0], [7.6, 29.0], [7.7, 29.0], [7.8, 29.0], [7.9, 29.0], [8.0, 29.0], [8.1, 29.0], [8.2, 29.0], [8.3, 29.0], [8.4, 29.0], [8.5, 29.0], [8.6, 29.0], [8.7, 29.0], [8.8, 29.0], [8.9, 29.0], [9.0, 29.0], [9.1, 29.0], [9.2, 29.0], [9.3, 29.0], [9.4, 29.0], [9.5, 29.0], [9.6, 29.0], [9.7, 29.0], [9.8, 29.0], [9.9, 29.0], [10.0, 29.0], [10.1, 29.0], [10.2, 29.0], [10.3, 29.0], [10.4, 29.0], [10.5, 29.0], [10.6, 29.0], [10.7, 29.0], [10.8, 29.0], [10.9, 29.0], [11.0, 29.0], [11.1, 29.0], [11.2, 29.0], [11.3, 29.0], [11.4, 29.0], [11.5, 29.0], [11.6, 29.0], [11.7, 29.0], [11.8, 29.0], [11.9, 29.0], [12.0, 29.0], [12.1, 29.0], [12.2, 29.0], [12.3, 29.0], [12.4, 29.0], [12.5, 29.0], [12.6, 29.0], [12.7, 29.0], [12.8, 29.0], [12.9, 29.0], [13.0, 29.0], [13.1, 29.0], [13.2, 29.0], [13.3, 29.0], [13.4, 29.0], [13.5, 29.0], [13.6, 29.0], [13.7, 29.0], [13.8, 29.0], [13.9, 29.0], [14.0, 29.0], [14.1, 29.0], [14.2, 29.0], [14.3, 29.0], [14.4, 29.0], [14.5, 29.0], [14.6, 29.0], [14.7, 29.0], [14.8, 29.0], [14.9, 29.0], [15.0, 29.0], [15.1, 29.0], [15.2, 29.0], [15.3, 29.0], [15.4, 29.0], [15.5, 29.0], [15.6, 29.0], [15.7, 29.0], [15.8, 29.0], [15.9, 29.0], [16.0, 29.0], [16.1, 29.0], [16.2, 29.0], [16.3, 29.0], [16.4, 29.0], [16.5, 29.0], [16.6, 29.0], [16.7, 29.0], [16.8, 29.0], [16.9, 29.0], [17.0, 29.0], [17.1, 29.0], [17.2, 29.0], [17.3, 29.0], [17.4, 29.0], [17.5, 29.0], [17.6, 29.0], [17.7, 29.0], [17.8, 29.0], [17.9, 29.0], [18.0, 29.0], [18.1, 29.0], [18.2, 29.0], [18.3, 29.0], [18.4, 30.0], [18.5, 30.0], [18.6, 30.0], [18.7, 30.0], [18.8, 30.0], [18.9, 30.0], [19.0, 30.0], [19.1, 30.0], [19.2, 30.0], [19.3, 30.0], [19.4, 30.0], [19.5, 30.0], [19.6, 30.0], [19.7, 30.0], [19.8, 30.0], [19.9, 30.0], [20.0, 30.0], [20.1, 30.0], [20.2, 30.0], [20.3, 30.0], [20.4, 30.0], [20.5, 30.0], [20.6, 30.0], [20.7, 30.0], [20.8, 30.0], [20.9, 30.0], [21.0, 30.0], [21.1, 30.0], [21.2, 30.0], [21.3, 30.0], [21.4, 30.0], [21.5, 30.0], [21.6, 30.0], [21.7, 30.0], [21.8, 30.0], [21.9, 30.0], [22.0, 30.0], [22.1, 30.0], [22.2, 30.0], [22.3, 30.0], [22.4, 30.0], [22.5, 30.0], [22.6, 30.0], [22.7, 30.0], [22.8, 30.0], [22.9, 30.0], [23.0, 30.0], [23.1, 30.0], [23.2, 30.0], [23.3, 30.0], [23.4, 30.0], [23.5, 30.0], [23.6, 30.0], [23.7, 30.0], [23.8, 30.0], [23.9, 30.0], [24.0, 30.0], [24.1, 30.0], [24.2, 30.0], [24.3, 30.0], [24.4, 30.0], [24.5, 30.0], [24.6, 30.0], [24.7, 30.0], [24.8, 30.0], [24.9, 30.0], [25.0, 30.0], [25.1, 30.0], [25.2, 30.0], [25.3, 30.0], [25.4, 30.0], [25.5, 30.0], [25.6, 30.0], [25.7, 30.0], [25.8, 30.0], [25.9, 30.0], [26.0, 30.0], [26.1, 30.0], [26.2, 30.0], [26.3, 30.0], [26.4, 30.0], [26.5, 30.0], [26.6, 30.0], [26.7, 30.0], [26.8, 30.0], [26.9, 30.0], [27.0, 30.0], [27.1, 30.0], [27.2, 30.0], [27.3, 30.0], [27.4, 30.0], [27.5, 30.0], [27.6, 30.0], [27.7, 30.0], [27.8, 30.0], [27.9, 30.0], [28.0, 30.0], [28.1, 30.0], [28.2, 30.0], [28.3, 30.0], [28.4, 30.0], [28.5, 30.0], [28.6, 30.0], [28.7, 30.0], [28.8, 30.0], [28.9, 30.0], [29.0, 30.0], [29.1, 30.0], [29.2, 30.0], [29.3, 30.0], [29.4, 30.0], [29.5, 30.0], [29.6, 30.0], [29.7, 30.0], [29.8, 30.0], [29.9, 30.0], [30.0, 30.0], [30.1, 30.0], [30.2, 30.0], [30.3, 30.0], [30.4, 30.0], [30.5, 30.0], [30.6, 30.0], [30.7, 30.0], [30.8, 30.0], [30.9, 30.0], [31.0, 30.0], [31.1, 30.0], [31.2, 30.0], [31.3, 30.0], [31.4, 30.0], [31.5, 30.0], [31.6, 30.0], [31.7, 30.0], [31.8, 30.0], [31.9, 30.0], [32.0, 30.0], [32.1, 30.0], [32.2, 30.0], [32.3, 30.0], [32.4, 30.0], [32.5, 30.0], [32.6, 30.0], [32.7, 30.0], [32.8, 30.0], [32.9, 30.0], [33.0, 30.0], [33.1, 30.0], [33.2, 30.0], [33.3, 30.0], [33.4, 30.0], [33.5, 30.0], [33.6, 30.0], [33.7, 30.0], [33.8, 30.0], [33.9, 30.0], [34.0, 30.0], [34.1, 30.0], [34.2, 30.0], [34.3, 30.0], [34.4, 30.0], [34.5, 30.0], [34.6, 30.0], [34.7, 30.0], [34.8, 30.0], [34.9, 30.0], [35.0, 30.0], [35.1, 30.0], [35.2, 30.0], [35.3, 30.0], [35.4, 30.0], [35.5, 30.0], [35.6, 30.0], [35.7, 30.0], [35.8, 30.0], [35.9, 30.0], [36.0, 30.0], [36.1, 30.0], [36.2, 30.0], [36.3, 30.0], [36.4, 30.0], [36.5, 30.0], [36.6, 30.0], [36.7, 30.0], [36.8, 30.0], [36.9, 30.0], [37.0, 30.0], [37.1, 30.0], [37.2, 30.0], [37.3, 30.0], [37.4, 30.0], [37.5, 30.0], [37.6, 30.0], [37.7, 30.0], [37.8, 30.0], [37.9, 30.0], [38.0, 30.0], [38.1, 30.0], [38.2, 30.0], [38.3, 30.0], [38.4, 30.0], [38.5, 30.0], [38.6, 30.0], [38.7, 30.0], [38.8, 30.0], [38.9, 30.0], [39.0, 30.0], [39.1, 30.0], [39.2, 31.0], [39.3, 31.0], [39.4, 31.0], [39.5, 31.0], [39.6, 31.0], [39.7, 31.0], [39.8, 31.0], [39.9, 31.0], [40.0, 31.0], [40.1, 31.0], [40.2, 31.0], [40.3, 31.0], [40.4, 31.0], [40.5, 31.0], [40.6, 31.0], [40.7, 31.0], [40.8, 31.0], [40.9, 31.0], [41.0, 31.0], [41.1, 31.0], [41.2, 31.0], [41.3, 31.0], [41.4, 31.0], [41.5, 31.0], [41.6, 31.0], [41.7, 31.0], [41.8, 31.0], [41.9, 31.0], [42.0, 31.0], [42.1, 31.0], [42.2, 31.0], [42.3, 31.0], [42.4, 31.0], [42.5, 31.0], [42.6, 31.0], [42.7, 31.0], [42.8, 31.0], [42.9, 31.0], [43.0, 31.0], [43.1, 31.0], [43.2, 31.0], [43.3, 31.0], [43.4, 31.0], [43.5, 31.0], [43.6, 31.0], [43.7, 31.0], [43.8, 31.0], [43.9, 31.0], [44.0, 31.0], [44.1, 31.0], [44.2, 31.0], [44.3, 31.0], [44.4, 31.0], [44.5, 31.0], [44.6, 31.0], [44.7, 31.0], [44.8, 31.0], [44.9, 31.0], [45.0, 31.0], [45.1, 31.0], [45.2, 31.0], [45.3, 31.0], [45.4, 31.0], [45.5, 31.0], [45.6, 31.0], [45.7, 31.0], [45.8, 31.0], [45.9, 31.0], [46.0, 31.0], [46.1, 31.0], [46.2, 31.0], [46.3, 31.0], [46.4, 31.0], [46.5, 31.0], [46.6, 31.0], [46.7, 31.0], [46.8, 31.0], [46.9, 31.0], [47.0, 31.0], [47.1, 31.0], [47.2, 31.0], [47.3, 31.0], [47.4, 31.0], [47.5, 31.0], [47.6, 31.0], [47.7, 31.0], [47.8, 31.0], [47.9, 31.0], [48.0, 31.0], [48.1, 31.0], [48.2, 31.0], [48.3, 31.0], [48.4, 31.0], [48.5, 31.0], [48.6, 31.0], [48.7, 31.0], [48.8, 31.0], [48.9, 31.0], [49.0, 31.0], [49.1, 31.0], [49.2, 31.0], [49.3, 31.0], [49.4, 31.0], [49.5, 31.0], [49.6, 31.0], [49.7, 31.0], [49.8, 31.0], [49.9, 31.0], [50.0, 31.0], [50.1, 31.0], [50.2, 31.0], [50.3, 31.0], [50.4, 31.0], [50.5, 31.0], [50.6, 31.0], [50.7, 31.0], [50.8, 31.0], [50.9, 31.0], [51.0, 31.0], [51.1, 31.0], [51.2, 31.0], [51.3, 31.0], [51.4, 31.0], [51.5, 31.0], [51.6, 31.0], [51.7, 31.0], [51.8, 31.0], [51.9, 31.0], [52.0, 31.0], [52.1, 31.0], [52.2, 31.0], [52.3, 31.0], [52.4, 31.0], [52.5, 31.0], [52.6, 31.0], [52.7, 31.0], [52.8, 31.0], [52.9, 31.0], [53.0, 31.0], [53.1, 31.0], [53.2, 31.0], [53.3, 31.0], [53.4, 31.0], [53.5, 31.0], [53.6, 31.0], [53.7, 31.0], [53.8, 31.0], [53.9, 31.0], [54.0, 31.0], [54.1, 31.0], [54.2, 31.0], [54.3, 31.0], [54.4, 31.0], [54.5, 31.0], [54.6, 31.0], [54.7, 31.0], [54.8, 31.0], [54.9, 31.0], [55.0, 31.0], [55.1, 31.0], [55.2, 31.0], [55.3, 31.0], [55.4, 31.0], [55.5, 31.0], [55.6, 31.0], [55.7, 31.0], [55.8, 31.0], [55.9, 31.0], [56.0, 31.0], [56.1, 31.0], [56.2, 31.0], [56.3, 31.0], [56.4, 31.0], [56.5, 31.0], [56.6, 31.0], [56.7, 31.0], [56.8, 31.0], [56.9, 31.0], [57.0, 31.0], [57.1, 31.0], [57.2, 31.0], [57.3, 31.0], [57.4, 31.0], [57.5, 31.0], [57.6, 31.0], [57.7, 31.0], [57.8, 31.0], [57.9, 31.0], [58.0, 31.0], [58.1, 31.0], [58.2, 31.0], [58.3, 31.0], [58.4, 31.0], [58.5, 31.0], [58.6, 31.0], [58.7, 31.0], [58.8, 31.0], [58.9, 31.0], [59.0, 31.0], [59.1, 31.0], [59.2, 31.0], [59.3, 31.0], [59.4, 31.0], [59.5, 31.0], [59.6, 31.0], [59.7, 31.0], [59.8, 31.0], [59.9, 31.0], [60.0, 31.0], [60.1, 31.0], [60.2, 31.0], [60.3, 31.0], [60.4, 31.0], [60.5, 31.0], [60.6, 31.0], [60.7, 31.0], [60.8, 31.0], [60.9, 31.0], [61.0, 31.0], [61.1, 31.0], [61.2, 31.0], [61.3, 31.0], [61.4, 31.0], [61.5, 31.0], [61.6, 31.0], [61.7, 31.0], [61.8, 31.0], [61.9, 31.0], [62.0, 31.0], [62.1, 31.0], [62.2, 31.0], [62.3, 31.0], [62.4, 31.0], [62.5, 31.0], [62.6, 31.0], [62.7, 31.0], [62.8, 31.0], [62.9, 31.0], [63.0, 32.0], [63.1, 32.0], [63.2, 32.0], [63.3, 32.0], [63.4, 32.0], [63.5, 32.0], [63.6, 32.0], [63.7, 32.0], [63.8, 32.0], [63.9, 32.0], [64.0, 32.0], [64.1, 32.0], [64.2, 32.0], [64.3, 32.0], [64.4, 32.0], [64.5, 32.0], [64.6, 32.0], [64.7, 32.0], [64.8, 32.0], [64.9, 32.0], [65.0, 32.0], [65.1, 32.0], [65.2, 32.0], [65.3, 32.0], [65.4, 32.0], [65.5, 32.0], [65.6, 32.0], [65.7, 32.0], [65.8, 32.0], [65.9, 32.0], [66.0, 32.0], [66.1, 32.0], [66.2, 32.0], [66.3, 32.0], [66.4, 32.0], [66.5, 32.0], [66.6, 32.0], [66.7, 32.0], [66.8, 32.0], [66.9, 32.0], [67.0, 32.0], [67.1, 32.0], [67.2, 32.0], [67.3, 32.0], [67.4, 32.0], [67.5, 32.0], [67.6, 32.0], [67.7, 32.0], [67.8, 32.0], [67.9, 32.0], [68.0, 32.0], [68.1, 32.0], [68.2, 32.0], [68.3, 32.0], [68.4, 32.0], [68.5, 32.0], [68.6, 32.0], [68.7, 32.0], [68.8, 32.0], [68.9, 32.0], [69.0, 32.0], [69.1, 32.0], [69.2, 32.0], [69.3, 32.0], [69.4, 32.0], [69.5, 32.0], [69.6, 32.0], [69.7, 32.0], [69.8, 32.0], [69.9, 32.0], [70.0, 32.0], [70.1, 32.0], [70.2, 32.0], [70.3, 32.0], [70.4, 32.0], [70.5, 32.0], [70.6, 32.0], [70.7, 32.0], [70.8, 32.0], [70.9, 32.0], [71.0, 32.0], [71.1, 32.0], [71.2, 32.0], [71.3, 32.0], [71.4, 32.0], [71.5, 32.0], [71.6, 32.0], [71.7, 32.0], [71.8, 32.0], [71.9, 32.0], [72.0, 32.0], [72.1, 32.0], [72.2, 32.0], [72.3, 32.0], [72.4, 32.0], [72.5, 32.0], [72.6, 32.0], [72.7, 32.0], [72.8, 32.0], [72.9, 32.0], [73.0, 32.0], [73.1, 32.0], [73.2, 32.0], [73.3, 32.0], [73.4, 32.0], [73.5, 32.0], [73.6, 32.0], [73.7, 32.0], [73.8, 32.0], [73.9, 32.0], [74.0, 32.0], [74.1, 32.0], [74.2, 32.0], [74.3, 32.0], [74.4, 32.0], [74.5, 32.0], [74.6, 32.0], [74.7, 32.0], [74.8, 32.0], [74.9, 32.0], [75.0, 32.0], [75.1, 32.0], [75.2, 32.0], [75.3, 32.0], [75.4, 32.0], [75.5, 32.0], [75.6, 32.0], [75.7, 32.0], [75.8, 32.0], [75.9, 32.0], [76.0, 32.0], [76.1, 32.0], [76.2, 32.0], [76.3, 32.0], [76.4, 32.0], [76.5, 32.0], [76.6, 32.0], [76.7, 32.0], [76.8, 32.0], [76.9, 32.0], [77.0, 32.0], [77.1, 32.0], [77.2, 32.0], [77.3, 32.0], [77.4, 32.0], [77.5, 32.0], [77.6, 32.0], [77.7, 32.0], [77.8, 32.0], [77.9, 32.0], [78.0, 32.0], [78.1, 32.0], [78.2, 32.0], [78.3, 32.0], [78.4, 32.0], [78.5, 32.0], [78.6, 32.0], [78.7, 32.0], [78.8, 32.0], [78.9, 32.0], [79.0, 32.0], [79.1, 32.0], [79.2, 32.0], [79.3, 32.0], [79.4, 32.0], [79.5, 32.0], [79.6, 32.0], [79.7, 32.0], [79.8, 32.0], [79.9, 32.0], [80.0, 32.0], [80.1, 32.0], [80.2, 32.0], [80.3, 32.0], [80.4, 32.0], [80.5, 32.0], [80.6, 32.0], [80.7, 32.0], [80.8, 32.0], [80.9, 32.0], [81.0, 32.0], [81.1, 32.0], [81.2, 32.0], [81.3, 32.0], [81.4, 32.0], [81.5, 32.0], [81.6, 32.0], [81.7, 32.0], [81.8, 32.0], [81.9, 33.0], [82.0, 33.0], [82.1, 33.0], [82.2, 33.0], [82.3, 33.0], [82.4, 33.0], [82.5, 33.0], [82.6, 33.0], [82.7, 33.0], [82.8, 33.0], [82.9, 33.0], [83.0, 33.0], [83.1, 33.0], [83.2, 33.0], [83.3, 33.0], [83.4, 33.0], [83.5, 33.0], [83.6, 33.0], [83.7, 33.0], [83.8, 33.0], [83.9, 33.0], [84.0, 33.0], [84.1, 33.0], [84.2, 33.0], [84.3, 33.0], [84.4, 33.0], [84.5, 33.0], [84.6, 33.0], [84.7, 33.0], [84.8, 33.0], [84.9, 33.0], [85.0, 33.0], [85.1, 33.0], [85.2, 33.0], [85.3, 33.0], [85.4, 33.0], [85.5, 33.0], [85.6, 33.0], [85.7, 33.0], [85.8, 33.0], [85.9, 33.0], [86.0, 33.0], [86.1, 33.0], [86.2, 33.0], [86.3, 33.0], [86.4, 33.0], [86.5, 33.0], [86.6, 33.0], [86.7, 33.0], [86.8, 33.0], [86.9, 33.0], [87.0, 33.0], [87.1, 33.0], [87.2, 33.0], [87.3, 33.0], [87.4, 33.0], [87.5, 33.0], [87.6, 33.0], [87.7, 33.0], [87.8, 33.0], [87.9, 33.0], [88.0, 33.0], [88.1, 33.0], [88.2, 33.0], [88.3, 33.0], [88.4, 33.0], [88.5, 33.0], [88.6, 33.0], [88.7, 33.0], [88.8, 33.0], [88.9, 33.0], [89.0, 33.0], [89.1, 33.0], [89.2, 33.0], [89.3, 33.0], [89.4, 33.0], [89.5, 33.0], [89.6, 33.0], [89.7, 33.0], [89.8, 33.0], [89.9, 33.0], [90.0, 33.0], [90.1, 33.0], [90.2, 33.0], [90.3, 33.0], [90.4, 33.0], [90.5, 33.0], [90.6, 33.0], [90.7, 33.0], [90.8, 33.0], [90.9, 33.0], [91.0, 33.0], [91.1, 33.0], [91.2, 33.0], [91.3, 33.0], [91.4, 33.0], [91.5, 33.0], [91.6, 33.0], [91.7, 33.0], [91.8, 33.0], [91.9, 33.0], [92.0, 33.0], [92.1, 33.0], [92.2, 33.0], [92.3, 33.0], [92.4, 33.0], [92.5, 33.0], [92.6, 34.0], [92.7, 34.0], [92.8, 34.0], [92.9, 34.0], [93.0, 34.0], [93.1, 34.0], [93.2, 34.0], [93.3, 34.0], [93.4, 34.0], [93.5, 34.0], [93.6, 34.0], [93.7, 34.0], [93.8, 34.0], [93.9, 34.0], [94.0, 34.0], [94.1, 34.0], [94.2, 34.0], [94.3, 34.0], [94.4, 34.0], [94.5, 34.0], [94.6, 34.0], [94.7, 34.0], [94.8, 34.0], [94.9, 34.0], [95.0, 34.0], [95.1, 34.0], [95.2, 34.0], [95.3, 34.0], [95.4, 34.0], [95.5, 34.0], [95.6, 34.0], [95.7, 34.0], [95.8, 34.0], [95.9, 34.0], [96.0, 34.0], [96.1, 34.0], [96.2, 34.0], [96.3, 34.0], [96.4, 34.0], [96.5, 34.0], [96.6, 34.0], [96.7, 34.0], [96.8, 34.0], [96.9, 34.0], [97.0, 34.0], [97.1, 35.0], [97.2, 35.0], [97.3, 35.0], [97.4, 35.0], [97.5, 35.0], [97.6, 35.0], [97.7, 35.0], [97.8, 35.0], [97.9, 35.0], [98.0, 35.0], [98.1, 35.0], [98.2, 35.0], [98.3, 35.0], [98.4, 35.0], [98.5, 35.0], [98.6, 35.0], [98.7, 35.0], [98.8, 35.0], [98.9, 35.0], [99.0, 36.0], [99.1, 36.0], [99.2, 36.0], [99.3, 36.0], [99.4, 36.0], [99.5, 36.0], [99.6, 37.0], [99.7, 37.0], [99.8, 39.0], [99.9, 42.0], [100.0, 235.0]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 9998.0, "series": [{"data": [[2100.0, 2.0], [600.0, 842.0], [700.0, 562.0], [200.0, 1959.0], [800.0, 316.0], [900.0, 230.0], [1000.0, 139.0], [1100.0, 81.0], [300.0, 1989.0], [1200.0, 56.0], [1300.0, 38.0], [1400.0, 20.0], [1500.0, 14.0], [400.0, 1645.0], [100.0, 881.0], [1600.0, 8.0], [1700.0, 2.0], [1800.0, 2.0], [1900.0, 1.0], [500.0, 1210.0], [2000.0, 3.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[0.0, 9998.0], [200.0, 1.0], [100.0, 1.0]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 32.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 16489.0, "series": [{"data": [[0.0, 16489.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3479.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 32.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.74717384E12, "maxY": 1.0, "series": [{"data": [[1.74717504E12, 1.0], [1.74717828E12, 1.0], [1.74717606E12, 1.0], [1.74717444E12, 1.0], [1.74717666E12, 1.0], [1.74717708E12, 1.0], [1.7471787E12, 1.0], [1.74717384E12, 1.0], [1.74717486E12, 1.0], [1.74717546E12, 1.0], [1.74717768E12, 1.0], [1.74717426E12, 1.0], [1.74717588E12, 1.0], [1.7471775E12, 1.0], [1.74717648E12, 1.0], [1.7471781E12, 1.0], [1.7471763E12, 1.0], [1.74717852E12, 1.0], [1.74717528E12, 1.0], [1.74717468E12, 1.0], [1.7471769E12, 1.0], [1.74717408E12, 1.0], [1.7471751E12, 1.0], [1.74717732E12, 1.0], [1.7471757E12, 1.0], [1.74717792E12, 1.0], [1.7471745E12, 1.0], [1.74717612E12, 1.0], [1.74717774E12, 1.0], [1.74717672E12, 1.0], [1.74717834E12, 1.0], [1.7471739E12, 1.0], [1.74717654E12, 1.0], [1.74717876E12, 1.0], [1.74717552E12, 1.0], [1.74717492E12, 1.0], [1.74717714E12, 1.0], [1.74717432E12, 1.0], [1.74717534E12, 1.0], [1.74717756E12, 1.0], [1.74717594E12, 1.0], [1.74717816E12, 1.0], [1.74717474E12, 1.0], [1.74717636E12, 1.0], [1.74717798E12, 1.0], [1.74717414E12, 1.0], [1.74717696E12, 1.0], [1.74717858E12, 1.0], [1.74717516E12, 1.0], [1.74717678E12, 1.0], [1.74717576E12, 1.0], [1.74717738E12, 1.0], [1.74717456E12, 1.0], [1.74717558E12, 1.0], [1.7471778E12, 1.0], [1.74717618E12, 1.0], [1.7471784E12, 1.0], [1.74717396E12, 1.0], [1.74717498E12, 1.0], [1.7471766E12, 1.0], [1.74717822E12, 1.0], [1.74717438E12, 1.0], [1.7471772E12, 1.0], [1.7471754E12, 1.0], [1.74717702E12, 1.0], [1.747176E12, 1.0], [1.74717762E12, 1.0], [1.7471748E12, 1.0], [1.74717582E12, 1.0], [1.74717804E12, 1.0], [1.7471742E12, 1.0], [1.74717642E12, 1.0], [1.74717864E12, 1.0], [1.74717684E12, 1.0], [1.74717846E12, 1.0], [1.74717462E12, 1.0], [1.74717522E12, 1.0], [1.74717744E12, 1.0], [1.74717402E12, 1.0], [1.74717564E12, 1.0], [1.74717726E12, 1.0], [1.74717624E12, 1.0], [1.74717786E12, 1.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74717876E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 31.04969999999996, "minX": 1.0, "maxY": 461.3856000000019, "series": [{"data": [[1.0, 461.3856000000019]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.0, 461.3856000000019]], "isOverall": false, "label": "Create CSR-Aggregated", "isController": false}, {"data": [[1.0, 31.04969999999996]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}, {"data": [[1.0, 31.04969999999996]], "isOverall": false, "label": "HTTP Request - enroll-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1362.3666666666666, "minX": 1.74717384E12, "maxY": 20458.133333333335, "series": [{"data": [[1.74717504E12, 19133.566666666666], [1.74717828E12, 17956.116666666665], [1.74717606E12, 16631.466666666667], [1.74717444E12, 16778.633333333335], [1.74717666E12, 16925.833333333332], [1.74717708E12, 18103.216666666667], [1.7471787E12, 19280.733333333334], [1.74717384E12, 6770.35], [1.74717486E12, 18544.783333333333], [1.74717546E12, 19133.566666666666], [1.74717768E12, 18839.266666666666], [1.74717426E12, 17956.066666666666], [1.74717588E12, 18397.666666666668], [1.7471775E12, 18692.033333333333], [1.74717648E12, 17808.866666666665], [1.7471781E12, 19280.683333333334], [1.7471763E12, 15748.383333333333], [1.74717852E12, 17809.033333333333], [1.74717528E12, 17073.016666666666], [1.74717468E12, 19133.65], [1.7471769E12, 16484.25], [1.74717408E12, 17956.133333333335], [1.7471751E12, 16484.283333333333], [1.74717732E12, 17808.95], [1.7471757E12, 16631.616666666665], [1.74717792E12, 17808.966666666667], [1.7471745E12, 17808.933333333334], [1.74717612E12, 17514.533333333333], [1.74717774E12, 18986.383333333335], [1.74717672E12, 18103.216666666667], [1.74717834E12, 18250.5], [1.7471739E12, 18544.866666666665], [1.74717654E12, 18103.316666666666], [1.74717876E12, 15306.85], [1.74717552E12, 20458.133333333335], [1.74717492E12, 17661.833333333332], [1.74717714E12, 18103.366666666665], [1.74717432E12, 18397.666666666668], [1.74717534E12, 17514.566666666666], [1.74717756E12, 18691.983333333334], [1.74717594E12, 17956.033333333333], [1.74717816E12, 16799.716666666667], [1.74717474E12, 17808.9], [1.74717636E12, 17956.066666666666], [1.74717798E12, 18544.833333333332], [1.74717414E12, 17367.433333333334], [1.74717696E12, 17220.233333333334], [1.74717858E12, 18397.566666666666], [1.74717516E12, 18397.583333333332], [1.74717678E12, 17367.433333333334], [1.74717576E12, 16946.95], [1.74717738E12, 18565.933333333334], [1.74717456E12, 17809.0], [1.74717558E12, 17808.816666666666], [1.7471778E12, 17535.65], [1.74717618E12, 16925.866666666665], [1.7471784E12, 16337.1], [1.74717396E12, 16925.9], [1.74717498E12, 17956.2], [1.7471766E12, 17367.333333333332], [1.74717822E12, 18229.383333333335], [1.74717438E12, 17956.1], [1.7471772E12, 18691.933333333334], [1.7471754E12, 18103.383333333335], [1.74717702E12, 17220.233333333334], [1.747176E12, 17367.366666666665], [1.74717762E12, 19280.816666666666], [1.7471748E12, 18839.15], [1.74717582E12, 17051.983333333334], [1.74717804E12, 19869.45], [1.7471742E12, 19280.65], [1.74717642E12, 16925.8], [1.74717864E12, 18691.9], [1.74717684E12, 18103.316666666666], [1.74717846E12, 16484.25], [1.74717462E12, 16484.216666666667], [1.74717522E12, 18397.616666666665], [1.74717744E12, 17787.683333333334], [1.74717402E12, 16042.783333333333], [1.74717564E12, 17661.75], [1.74717726E12, 17809.0], [1.74717624E12, 18250.35], [1.74717786E12, 18670.95]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74717504E12, 3850.1666666666665], [1.74717828E12, 3613.233333333333], [1.74717606E12, 3346.6833333333334], [1.74717444E12, 3376.3], [1.74717666E12, 3405.9166666666665], [1.74717708E12, 3642.85], [1.7471787E12, 3879.7833333333333], [1.74717384E12, 1362.3666666666666], [1.74717486E12, 3731.7], [1.74717546E12, 3850.1666666666665], [1.74717768E12, 3790.9333333333334], [1.74717426E12, 3613.233333333333], [1.74717588E12, 3702.0833333333335], [1.7471775E12, 3761.3166666666666], [1.74717648E12, 3583.616666666667], [1.7471781E12, 3879.7833333333333], [1.7471763E12, 3168.983333333333], [1.74717852E12, 3583.616666666667], [1.74717528E12, 3435.5333333333333], [1.74717468E12, 3850.1666666666665], [1.7471769E12, 3317.0666666666666], [1.74717408E12, 3613.233333333333], [1.7471751E12, 3317.0666666666666], [1.74717732E12, 3583.616666666667], [1.7471757E12, 3346.6833333333334], [1.74717792E12, 3583.616666666667], [1.7471745E12, 3583.616666666667], [1.74717612E12, 3524.383333333333], [1.74717774E12, 3820.55], [1.74717672E12, 3642.85], [1.74717834E12, 3672.4666666666667], [1.7471739E12, 3731.7], [1.74717654E12, 3642.85], [1.74717876E12, 3080.133333333333], [1.74717552E12, 4116.716666666666], [1.74717492E12, 3554.0], [1.74717714E12, 3642.85], [1.74717432E12, 3702.0833333333335], [1.74717534E12, 3524.383333333333], [1.74717756E12, 3761.3166666666666], [1.74717594E12, 3613.233333333333], [1.74717816E12, 3376.3], [1.74717474E12, 3583.616666666667], [1.74717636E12, 3613.233333333333], [1.74717798E12, 3731.7], [1.74717414E12, 3494.766666666667], [1.74717696E12, 3465.15], [1.74717858E12, 3702.0833333333335], [1.74717516E12, 3702.0833333333335], [1.74717678E12, 3494.766666666667], [1.74717576E12, 3405.9166666666665], [1.74717738E12, 3731.7], [1.74717456E12, 3583.616666666667], [1.74717558E12, 3583.616666666667], [1.7471778E12, 3524.383333333333], [1.74717618E12, 3405.9166666666665], [1.7471784E12, 3287.45], [1.74717396E12, 3405.9166666666665], [1.74717498E12, 3613.233333333333], [1.7471766E12, 3494.766666666667], [1.74717822E12, 3672.4666666666667], [1.74717438E12, 3613.233333333333], [1.7471772E12, 3761.3166666666666], [1.7471754E12, 3642.85], [1.74717702E12, 3465.15], [1.747176E12, 3494.766666666667], [1.74717762E12, 3879.7833333333333], [1.7471748E12, 3790.9333333333334], [1.74717582E12, 3435.5333333333333], [1.74717804E12, 3998.25], [1.7471742E12, 3879.7833333333333], [1.74717642E12, 3405.9166666666665], [1.74717864E12, 3761.3166666666666], [1.74717684E12, 3642.85], [1.74717846E12, 3317.0666666666666], [1.74717462E12, 3317.0666666666666], [1.74717522E12, 3702.0833333333335], [1.74717744E12, 3583.616666666667], [1.74717402E12, 3228.2166666666667], [1.74717564E12, 3554.0], [1.74717726E12, 3583.616666666667], [1.74717624E12, 3672.4666666666667], [1.74717786E12, 3761.3166666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74717876E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 29.471074380165284, "minX": 1.74717384E12, "maxY": 529.3831775700935, "series": [{"data": [[1.74717504E12, 425.8076923076923], [1.74717828E12, 462.57377049180315], [1.74717606E12, 497.60176991150456], [1.74717444E12, 497.29824561403507], [1.74717666E12, 488.591304347826], [1.74717708E12, 456.1788617886179], [1.7471787E12, 425.53435114503816], [1.74717384E12, 433.15217391304344], [1.74717486E12, 443.4365079365079], [1.74717546E12, 431.7846153846152], [1.74717768E12, 436.0234375], [1.74717426E12, 459.63934426229514], [1.74717588E12, 448.75199999999995], [1.7471775E12, 441.3228346456694], [1.74717648E12, 462.14049586776855], [1.7471781E12, 429.6183206106869], [1.7471763E12, 529.3831775700935], [1.74717852E12, 465.9090909090909], [1.74717528E12, 485.79310344827604], [1.74717468E12, 428.1692307692306], [1.7471769E12, 503.3839285714285], [1.74717408E12, 462.7295081967214], [1.7471751E12, 507.93750000000006], [1.74717732E12, 465.2644628099173], [1.7471757E12, 501.32743362831843], [1.74717792E12, 465.7438016528925], [1.7471745E12, 468.107438016529], [1.74717612E12, 479.764705882353], [1.74717774E12, 434.98449612403107], [1.74717672E12, 457.6260162601626], [1.74717834E12, 451.5645161290322], [1.7471739E12, 446.1746031746032], [1.74717654E12, 453.30081300813015], [1.74717876E12, 443.55769230769243], [1.74717552E12, 398.1151079136692], [1.74717492E12, 466.5250000000001], [1.74717714E12, 452.4065040650408], [1.74717432E12, 447.936], [1.74717534E12, 473.81512605042013], [1.74717756E12, 441.7086614173229], [1.74717594E12, 459.327868852459], [1.74717816E12, 492.70434782608686], [1.74717474E12, 466.38842975206614], [1.74717636E12, 460.3688524590163], [1.74717798E12, 441.3650793650794], [1.74717414E12, 475.94915254237276], [1.74717696E12, 480.0341880341881], [1.74717858E12, 448.11199999999985], [1.74717516E12, 446.104], [1.74717678E12, 476.55932203389824], [1.74717576E12, 487.05172413793105], [1.74717738E12, 442.6692913385828], [1.74717456E12, 464.42148760330576], [1.74717558E12, 464.7520661157025], [1.7471778E12, 468.86666666666673], [1.74717618E12, 486.33913043478265], [1.7471784E12, 503.9909909909911], [1.74717396E12, 487.9913043478261], [1.74717498E12, 463.54098360655746], [1.7471766E12, 480.22881355932196], [1.74717822E12, 452.0975609756098], [1.74717438E12, 453.9180327868853], [1.7471772E12, 440.14960629921245], [1.7471754E12, 455.45528455284546], [1.74717702E12, 480.6752136752136], [1.747176E12, 467.84745762711873], [1.74717762E12, 429.2900763358778], [1.7471748E12, 436.6484375], [1.74717582E12, 490.1565217391305], [1.74717804E12, 413.7555555555555], [1.7471742E12, 426.7404580152673], [1.74717642E12, 491.5652173913045], [1.74717864E12, 444.19685039370086], [1.74717684E12, 457.84552845528435], [1.74717846E12, 506.2500000000001], [1.74717462E12, 506.9107142857143], [1.74717522E12, 449.50399999999996], [1.74717744E12, 462.40000000000003], [1.74717402E12, 517.7798165137613], [1.74717564E12, 463.9416666666667], [1.74717726E12, 467.0661157024794], [1.74717624E12, 454.8548387096775], [1.74717786E12, 438.94444444444446]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.74717504E12, 30.13846153846154], [1.74717828E12, 31.901639344262293], [1.74717606E12, 32.54867256637169], [1.74717444E12, 31.52631578947368], [1.74717666E12, 31.591304347826085], [1.74717708E12, 32.138211382113816], [1.7471787E12, 31.961832061068698], [1.74717384E12, 38.30434782608696], [1.74717486E12, 31.20634920634919], [1.74717546E12, 30.638461538461545], [1.74717768E12, 30.3046875], [1.74717426E12, 31.20491803278689], [1.74717588E12, 30.432], [1.7471775E12, 31.393700787401574], [1.74717648E12, 31.4793388429752], [1.7471781E12, 29.732824427480914], [1.7471763E12, 30.504672897196265], [1.74717852E12, 30.479338842975206], [1.74717528E12, 31.379310344827587], [1.74717468E12, 30.807692307692307], [1.7471769E12, 32.06249999999999], [1.74717408E12, 30.459016393442617], [1.7471751E12, 30.38392857142858], [1.74717732E12, 30.933884297520656], [1.7471757E12, 31.610619469026542], [1.74717792E12, 31.96694214876033], [1.7471745E12, 29.471074380165284], [1.74717612E12, 31.806722689075617], [1.74717774E12, 30.32558139534883], [1.74717672E12, 30.95934959349593], [1.74717834E12, 31.604838709677416], [1.7471739E12, 32.007936507936506], [1.74717654E12, 31.666666666666664], [1.74717876E12, 31.836538461538463], [1.74717552E12, 31.115107913669057], [1.74717492E12, 30.708333333333332], [1.74717714E12, 31.691056910569106], [1.74717432E12, 30.336000000000006], [1.74717534E12, 30.714285714285715], [1.74717756E12, 31.64566929133859], [1.74717594E12, 30.655737704918025], [1.74717816E12, 29.95614035087719], [1.74717474E12, 29.752066115702476], [1.74717636E12, 29.89344262295081], [1.74717798E12, 31.706349206349206], [1.74717414E12, 30.067796610169495], [1.74717696E12, 30.57264957264957], [1.74717858E12, 30.43200000000001], [1.74717516E12, 31.08000000000001], [1.74717678E12, 30.228813559322035], [1.74717576E12, 31.53043478260869], [1.74717738E12, 30.80952380952381], [1.74717456E12, 29.56198347107438], [1.74717558E12, 32.06611570247934], [1.7471778E12, 31.93277310924369], [1.74717618E12, 32.30434782608696], [1.7471784E12, 32.03603603603605], [1.74717396E12, 30.63478260869565], [1.74717498E12, 30.36065573770492], [1.7471766E12, 30.644067796610166], [1.74717822E12, 30.564516129032263], [1.74717438E12, 30.795081967213118], [1.7471772E12, 30.858267716535433], [1.7471754E12, 29.71544715447155], [1.74717702E12, 31.324786324786327], [1.747176E12, 32.6779661016949], [1.74717762E12, 30.366412213740453], [1.7471748E12, 31.14843749999999], [1.74717582E12, 30.74137931034483], [1.74717804E12, 31.362962962962968], [1.7471742E12, 31.183206106870227], [1.74717642E12, 30.947826086956518], [1.74717864E12, 30.196850393700796], [1.74717684E12, 30.349593495934972], [1.74717846E12, 30.794642857142854], [1.74717462E12, 30.52678571428572], [1.74717522E12, 32.12799999999998], [1.74717744E12, 31.54545454545455], [1.74717402E12, 30.44954128440367], [1.74717564E12, 31.816666666666677], [1.74717726E12, 30.39669421487603], [1.74717624E12, 30.782258064516117], [1.74717786E12, 32.141732283464556]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74717876E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74717384E12, "maxY": 38.260869565217384, "series": [{"data": [[1.74717504E12, 0.0], [1.74717828E12, 0.0], [1.74717606E12, 0.0], [1.74717444E12, 0.0], [1.74717666E12, 0.0], [1.74717708E12, 0.0], [1.7471787E12, 0.0], [1.74717384E12, 0.0], [1.74717486E12, 0.0], [1.74717546E12, 0.0], [1.74717768E12, 0.0], [1.74717426E12, 0.0], [1.74717588E12, 0.0], [1.7471775E12, 0.0], [1.74717648E12, 0.0], [1.7471781E12, 0.0], [1.7471763E12, 0.0], [1.74717852E12, 0.0], [1.74717528E12, 0.0], [1.74717468E12, 0.0], [1.7471769E12, 0.0], [1.74717408E12, 0.0], [1.7471751E12, 0.0], [1.74717732E12, 0.0], [1.7471757E12, 0.0], [1.74717792E12, 0.0], [1.7471745E12, 0.0], [1.74717612E12, 0.0], [1.74717774E12, 0.0], [1.74717672E12, 0.0], [1.74717834E12, 0.0], [1.7471739E12, 0.0], [1.74717654E12, 0.0], [1.74717876E12, 0.0], [1.74717552E12, 0.0], [1.74717492E12, 0.0], [1.74717714E12, 0.0], [1.74717432E12, 0.0], [1.74717534E12, 0.0], [1.74717756E12, 0.0], [1.74717594E12, 0.0], [1.74717816E12, 0.0], [1.74717474E12, 0.0], [1.74717636E12, 0.0], [1.74717798E12, 0.0], [1.74717414E12, 0.0], [1.74717696E12, 0.0], [1.74717858E12, 0.0], [1.74717516E12, 0.0], [1.74717678E12, 0.0], [1.74717576E12, 0.0], [1.74717738E12, 0.0], [1.74717456E12, 0.0], [1.74717558E12, 0.0], [1.7471778E12, 0.0], [1.74717618E12, 0.0], [1.7471784E12, 0.0], [1.74717396E12, 0.0], [1.74717498E12, 0.0], [1.7471766E12, 0.0], [1.74717822E12, 0.0], [1.74717438E12, 0.0], [1.7471772E12, 0.0], [1.7471754E12, 0.0], [1.74717702E12, 0.0], [1.747176E12, 0.0], [1.74717762E12, 0.0], [1.7471748E12, 0.0], [1.74717582E12, 0.0], [1.74717804E12, 0.0], [1.7471742E12, 0.0], [1.74717642E12, 0.0], [1.74717864E12, 0.0], [1.74717684E12, 0.0], [1.74717846E12, 0.0], [1.74717462E12, 0.0], [1.74717522E12, 0.0], [1.74717744E12, 0.0], [1.74717402E12, 0.0], [1.74717564E12, 0.0], [1.74717726E12, 0.0], [1.74717624E12, 0.0], [1.74717786E12, 0.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.74717504E12, 30.123076923076916], [1.74717828E12, 31.89344262295082], [1.74717606E12, 32.54867256637169], [1.74717444E12, 31.508771929824558], [1.74717666E12, 31.591304347826085], [1.74717708E12, 32.13008130081301], [1.7471787E12, 31.946564885496173], [1.74717384E12, 38.260869565217384], [1.74717486E12, 31.19047619047619], [1.74717546E12, 30.630769230769236], [1.74717768E12, 30.289062499999993], [1.74717426E12, 31.18032786885246], [1.74717588E12, 30.423999999999992], [1.7471775E12, 31.38582677165354], [1.74717648E12, 31.4793388429752], [1.7471781E12, 29.725190839694655], [1.7471763E12, 30.495327102803742], [1.74717852E12, 30.471074380165284], [1.74717528E12, 31.362068965517242], [1.74717468E12, 30.807692307692307], [1.7471769E12, 32.04464285714285], [1.74717408E12, 30.434426229508205], [1.7471751E12, 30.375000000000007], [1.74717732E12, 30.92561983471074], [1.7471757E12, 31.601769911504423], [1.74717792E12, 31.95867768595041], [1.7471745E12, 29.462809917355365], [1.74717612E12, 31.798319327731093], [1.74717774E12, 30.32558139534883], [1.74717672E12, 30.951219512195117], [1.74717834E12, 31.5967741935484], [1.7471739E12, 31.96031746031746], [1.74717654E12, 31.650406504065042], [1.74717876E12, 31.81730769230769], [1.74717552E12, 31.100719424460443], [1.74717492E12, 30.708333333333332], [1.74717714E12, 31.691056910569106], [1.74717432E12, 30.336000000000006], [1.74717534E12, 30.6890756302521], [1.74717756E12, 31.64566929133859], [1.74717594E12, 30.655737704918025], [1.74717816E12, 29.95614035087719], [1.74717474E12, 29.727272727272727], [1.74717636E12, 29.885245901639333], [1.74717798E12, 31.69047619047618], [1.74717414E12, 30.033898305084747], [1.74717696E12, 30.57264957264957], [1.74717858E12, 30.423999999999996], [1.74717516E12, 31.071999999999996], [1.74717678E12, 30.211864406779668], [1.74717576E12, 31.521739130434774], [1.74717738E12, 30.78571428571428], [1.74717456E12, 29.54545454545455], [1.74717558E12, 32.05785123966944], [1.7471778E12, 31.93277310924369], [1.74717618E12, 32.28695652173913], [1.7471784E12, 32.01801801801802], [1.74717396E12, 30.582608695652183], [1.74717498E12, 30.352459016393443], [1.7471766E12, 30.618644067796616], [1.74717822E12, 30.564516129032263], [1.74717438E12, 30.786885245901633], [1.7471772E12, 30.858267716535433], [1.7471754E12, 29.70731707317074], [1.74717702E12, 31.316239316239315], [1.747176E12, 32.65254237288137], [1.74717762E12, 30.366412213740453], [1.7471748E12, 31.125000000000004], [1.74717582E12, 30.74137931034483], [1.74717804E12, 31.348148148148145], [1.7471742E12, 31.183206106870227], [1.74717642E12, 30.92173913043478], [1.74717864E12, 30.196850393700796], [1.74717684E12, 30.349593495934972], [1.74717846E12, 30.794642857142854], [1.74717462E12, 30.508928571428566], [1.74717522E12, 32.11999999999998], [1.74717744E12, 31.537190082644628], [1.74717402E12, 30.43119266055046], [1.74717564E12, 31.808333333333334], [1.74717726E12, 30.371900826446282], [1.74717624E12, 30.766129032258057], [1.74717786E12, 32.11811023622047]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74717876E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74717384E12, "maxY": 3.9347826086956528, "series": [{"data": [[1.74717504E12, 0.0], [1.74717828E12, 0.0], [1.74717606E12, 0.0], [1.74717444E12, 0.0], [1.74717666E12, 0.0], [1.74717708E12, 0.0], [1.7471787E12, 0.0], [1.74717384E12, 0.0], [1.74717486E12, 0.0], [1.74717546E12, 0.0], [1.74717768E12, 0.0], [1.74717426E12, 0.0], [1.74717588E12, 0.0], [1.7471775E12, 0.0], [1.74717648E12, 0.0], [1.7471781E12, 0.0], [1.7471763E12, 0.0], [1.74717852E12, 0.0], [1.74717528E12, 0.0], [1.74717468E12, 0.0], [1.7471769E12, 0.0], [1.74717408E12, 0.0], [1.7471751E12, 0.0], [1.74717732E12, 0.0], [1.7471757E12, 0.0], [1.74717792E12, 0.0], [1.7471745E12, 0.0], [1.74717612E12, 0.0], [1.74717774E12, 0.0], [1.74717672E12, 0.0], [1.74717834E12, 0.0], [1.7471739E12, 0.0], [1.74717654E12, 0.0], [1.74717876E12, 0.0], [1.74717552E12, 0.0], [1.74717492E12, 0.0], [1.74717714E12, 0.0], [1.74717432E12, 0.0], [1.74717534E12, 0.0], [1.74717756E12, 0.0], [1.74717594E12, 0.0], [1.74717816E12, 0.0], [1.74717474E12, 0.0], [1.74717636E12, 0.0], [1.74717798E12, 0.0], [1.74717414E12, 0.0], [1.74717696E12, 0.0], [1.74717858E12, 0.0], [1.74717516E12, 0.0], [1.74717678E12, 0.0], [1.74717576E12, 0.0], [1.74717738E12, 0.0], [1.74717456E12, 0.0], [1.74717558E12, 0.0], [1.7471778E12, 0.0], [1.74717618E12, 0.0], [1.7471784E12, 0.0], [1.74717396E12, 0.0], [1.74717498E12, 0.0], [1.7471766E12, 0.0], [1.74717822E12, 0.0], [1.74717438E12, 0.0], [1.7471772E12, 0.0], [1.7471754E12, 0.0], [1.74717702E12, 0.0], [1.747176E12, 0.0], [1.74717762E12, 0.0], [1.7471748E12, 0.0], [1.74717582E12, 0.0], [1.74717804E12, 0.0], [1.7471742E12, 0.0], [1.74717642E12, 0.0], [1.74717864E12, 0.0], [1.74717684E12, 0.0], [1.74717846E12, 0.0], [1.74717462E12, 0.0], [1.74717522E12, 0.0], [1.74717744E12, 0.0], [1.74717402E12, 0.0], [1.74717564E12, 0.0], [1.74717726E12, 0.0], [1.74717624E12, 0.0], [1.74717786E12, 0.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.74717504E12, 0.030769230769230774], [1.74717828E12, 0.024590163934426243], [1.74717606E12, 0.035398230088495575], [1.74717444E12, 0.026315789473684213], [1.74717666E12, 0.026086956521739132], [1.74717708E12, 0.024390243902439025], [1.7471787E12, 0.02290076335877864], [1.74717384E12, 3.9347826086956528], [1.74717486E12, 0.03174603174603175], [1.74717546E12, 0.03076923076923078], [1.74717768E12, 0.023437500000000014], [1.74717426E12, 0.04098360655737704], [1.74717588E12, 0.023999999999999997], [1.7471775E12, 0.031496062992126025], [1.74717648E12, 0.03305785123966942], [1.7471781E12, 0.02290076335877864], [1.7471763E12, 0.0280373831775701], [1.74717852E12, 0.02479338842975208], [1.74717528E12, 0.034482758620689655], [1.74717468E12, 0.030769230769230767], [1.7471769E12, 0.03571428571428571], [1.74717408E12, 0.04098360655737704], [1.7471751E12, 0.026785714285714288], [1.74717732E12, 0.02479338842975208], [1.7471757E12, 0.026548672566371685], [1.74717792E12, 0.03305785123966946], [1.7471745E12, 0.03305785123966942], [1.74717612E12, 0.03361344537815126], [1.74717774E12, 0.031007751937984537], [1.74717672E12, 0.024390243902439025], [1.74717834E12, 0.024193548387096787], [1.7471739E12, 0.05555555555555555], [1.74717654E12, 0.024390243902439022], [1.74717876E12, 0.02884615384615386], [1.74717552E12, 0.021582733812949645], [1.74717492E12, 0.03333333333333333], [1.74717714E12, 0.024390243902439025], [1.74717432E12, 0.032000000000000015], [1.74717534E12, 0.03361344537815125], [1.74717756E12, 0.023622047244094502], [1.74717594E12, 0.03278688524590164], [1.74717816E12, 0.026315789473684226], [1.74717474E12, 0.03305785123966942], [1.74717636E12, 0.03278688524590164], [1.74717798E12, 0.03174603174603176], [1.74717414E12, 0.04237288135593219], [1.74717696E12, 0.02564102564102564], [1.74717858E12, 0.024000000000000014], [1.74717516E12, 0.032], [1.74717678E12, 0.03389830508474576], [1.74717576E12, 0.026086956521739136], [1.74717738E12, 0.023809523809523822], [1.74717456E12, 0.03305785123966943], [1.74717558E12, 0.024793388429752074], [1.7471778E12, 0.02521008403361346], [1.74717618E12, 0.034782608695652174], [1.7471784E12, 0.03603603603603604], [1.74717396E12, 0.04347826086956521], [1.74717498E12, 0.04098360655737704], [1.7471766E12, 0.03389830508474576], [1.74717822E12, 0.024193548387096787], [1.74717438E12, 0.03278688524590165], [1.7471772E12, 0.0], [1.7471754E12, 0.03252032520325203], [1.74717702E12, 0.02564102564102564], [1.747176E12, 0.03389830508474576], [1.74717762E12, 0.02290076335877864], [1.7471748E12, 0.03125000000000001], [1.74717582E12, 0.025862068965517248], [1.74717804E12, 0.022222222222222237], [1.7471742E12, 0.038167938931297704], [1.74717642E12, 0.034782608695652174], [1.74717864E12, 0.023622047244094502], [1.74717684E12, 0.024390243902439025], [1.74717846E12, 0.0267857142857143], [1.74717462E12, 0.03571428571428571], [1.74717522E12, 0.03200000000000001], [1.74717744E12, 0.02479338842975208], [1.74717402E12, 0.04587155963302751], [1.74717564E12, 0.02500000000000001], [1.74717726E12, 0.02479338842975208], [1.74717624E12, 0.03225806451612904], [1.74717786E12, 0.023622047244094502]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74717876E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.74717384E12, "maxY": 2132.0, "series": [{"data": [[1.74717504E12, 967.0], [1.74717828E12, 1290.0], [1.74717606E12, 1525.0], [1.74717444E12, 1513.0], [1.74717666E12, 1162.0], [1.74717708E12, 1558.0], [1.7471787E12, 1565.0], [1.74717384E12, 1135.0], [1.74717486E12, 1213.0], [1.74717546E12, 1055.0], [1.74717768E12, 1361.0], [1.74717426E12, 1233.0], [1.74717588E12, 1199.0], [1.7471775E12, 1163.0], [1.74717648E12, 1235.0], [1.7471781E12, 977.0], [1.7471763E12, 1848.0], [1.74717852E12, 1545.0], [1.74717528E12, 1044.0], [1.74717468E12, 1213.0], [1.7471769E12, 1470.0], [1.74717408E12, 1313.0], [1.7471751E12, 1646.0], [1.74717732E12, 1258.0], [1.7471757E12, 1191.0], [1.74717792E12, 1488.0], [1.7471745E12, 1740.0], [1.74717612E12, 2017.0], [1.74717774E12, 1373.0], [1.74717672E12, 1996.0], [1.74717834E12, 1341.0], [1.7471739E12, 1585.0], [1.74717654E12, 1391.0], [1.74717876E12, 2111.0], [1.74717552E12, 1176.0], [1.74717492E12, 1565.0], [1.74717714E12, 1300.0], [1.74717432E12, 1380.0], [1.74717534E12, 1697.0], [1.74717756E12, 1470.0], [1.74717594E12, 2132.0], [1.74717816E12, 1169.0], [1.74717474E12, 1344.0], [1.74717636E12, 1300.0], [1.74717798E12, 1117.0], [1.74717414E12, 1290.0], [1.74717696E12, 1416.0], [1.74717858E12, 1219.0], [1.74717516E12, 1479.0], [1.74717678E12, 1887.0], [1.74717576E12, 1426.0], [1.74717738E12, 1539.0], [1.74717456E12, 1565.0], [1.74717558E12, 1008.0], [1.7471778E12, 1664.0], [1.74717618E12, 1460.0], [1.7471784E12, 1731.0], [1.74717396E12, 1330.0], [1.74717498E12, 1256.0], [1.7471766E12, 1360.0], [1.74717822E12, 1438.0], [1.74717438E12, 1375.0], [1.7471772E12, 1629.0], [1.7471754E12, 1662.0], [1.74717702E12, 1325.0], [1.747176E12, 1217.0], [1.74717762E12, 1322.0], [1.7471748E12, 1411.0], [1.74717582E12, 1475.0], [1.74717804E12, 1006.0], [1.7471742E12, 1383.0], [1.74717642E12, 1562.0], [1.74717864E12, 1491.0], [1.74717684E12, 1655.0], [1.74717846E12, 2007.0], [1.74717462E12, 2027.0], [1.74717522E12, 1188.0], [1.74717744E12, 1303.0], [1.74717402E12, 1627.0], [1.74717564E12, 1542.0], [1.74717726E12, 1517.0], [1.74717624E12, 1476.0], [1.74717786E12, 1514.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74717504E12, 613.8], [1.74717828E12, 644.0], [1.74717606E12, 695.9000000000003], [1.74717444E12, 724.3], [1.74717666E12, 702.9000000000001], [1.74717708E12, 631.4000000000001], [1.7471787E12, 573.0000000000002], [1.74717384E12, 599.1], [1.74717486E12, 649.9000000000001], [1.74717546E12, 605.8000000000001], [1.74717768E12, 617.3], [1.74717426E12, 624.5], [1.74717588E12, 633.2], [1.7471775E12, 653.0], [1.74717648E12, 617.7000000000004], [1.7471781E12, 604.4000000000002], [1.7471763E12, 702.0], [1.74717852E12, 664.9000000000001], [1.74717528E12, 658.6000000000001], [1.74717468E12, 597.6], [1.7471769E12, 733.0], [1.74717408E12, 646.0], [1.7471751E12, 751.0], [1.74717732E12, 667.7], [1.7471757E12, 762.3], [1.74717792E12, 623.8000000000001], [1.7471745E12, 605.3000000000002], [1.74717612E12, 669.5999999999999], [1.74717774E12, 609.1], [1.74717672E12, 602.6], [1.74717834E12, 643.5999999999999], [1.7471739E12, 604.4000000000001], [1.74717654E12, 611.3], [1.74717876E12, 606.9], [1.74717552E12, 546.9], [1.74717492E12, 635.9000000000001], [1.74717714E12, 604.8000000000001], [1.74717432E12, 598.0], [1.74717534E12, 590.0], [1.74717756E12, 566.0], [1.74717594E12, 639.5], [1.74717816E12, 713.0], [1.74717474E12, 641.1], [1.74717636E12, 636.5], [1.74717798E12, 605.4000000000001], [1.74717414E12, 640.0], [1.74717696E12, 688.0], [1.74717858E12, 618.3000000000001], [1.74717516E12, 604.7], [1.74717678E12, 645.2000000000002], [1.74717576E12, 644.8000000000001], [1.74717738E12, 592.3999999999999], [1.74717456E12, 634.4000000000001], [1.74717558E12, 626.7000000000005], [1.7471778E12, 618.0], [1.74717618E12, 656.7], [1.7471784E12, 739.4000000000002], [1.74717396E12, 686.9000000000001], [1.74717498E12, 652.5], [1.7471766E12, 669.8000000000001], [1.74717822E12, 608.0000000000001], [1.74717438E12, 636.5], [1.7471772E12, 580.5], [1.7471754E12, 605.9000000000001], [1.74717702E12, 660.5], [1.747176E12, 660.2], [1.74717762E12, 567.1], [1.7471748E12, 597.9000000000001], [1.74717582E12, 725.2], [1.74717804E12, 563.4000000000001], [1.7471742E12, 577.8000000000004], [1.74717642E12, 659.0000000000002], [1.74717864E12, 628.5], [1.74717684E12, 644.1000000000001], [1.74717846E12, 680.5], [1.74717462E12, 673.5], [1.74717522E12, 627.4000000000001], [1.74717744E12, 626.6], [1.74717402E12, 705.0], [1.74717564E12, 626.7], [1.74717726E12, 681.6000000000006], [1.74717624E12, 615.5], [1.74717786E12, 628.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74717504E12, 889.9699999999997], [1.74717828E12, 1169.750000000002], [1.74717606E12, 1375.459999999998], [1.74717444E12, 1371.6800000000026], [1.74717666E12, 1085.83], [1.74717708E12, 1358.25], [1.7471787E12, 1216.1400000000006], [1.74717384E12, 1135.0], [1.74717486E12, 1019.05], [1.74717546E12, 1023.9899999999994], [1.74717768E12, 1157.7000000000012], [1.74717426E12, 1142.0500000000002], [1.74717588E12, 1049.8000000000002], [1.7471775E12, 993.6999999999988], [1.74717648E12, 1165.9499999999998], [1.7471781E12, 939.6600000000001], [1.7471763E12, 1579.799999999997], [1.74717852E12, 1360.9399999999982], [1.74717528E12, 971.4199999999985], [1.74717468E12, 1181.7199999999993], [1.7471769E12, 1190.25], [1.74717408E12, 1177.3000000000006], [1.7471751E12, 1210.25], [1.74717732E12, 1167.2199999999998], [1.7471757E12, 1150.5799999999986], [1.74717792E12, 1360.6799999999985], [1.7471745E12, 1352.3999999999999], [1.74717612E12, 1408.9499999999987], [1.74717774E12, 1179.4300000000005], [1.74717672E12, 949.73], [1.74717834E12, 1260.3599999999988], [1.7471739E12, 1245.29], [1.74717654E12, 1002.48], [1.74717876E12, 1357.6999999999987], [1.74717552E12, 983.1999999999996], [1.74717492E12, 1180.3900000000003], [1.74717714E12, 1156.1800000000003], [1.74717432E12, 1071.9300000000014], [1.74717534E12, 1388.6299999999958], [1.74717756E12, 1177.6499999999994], [1.74717594E12, 1314.1000000000017], [1.74717816E12, 1094.4999999999995], [1.74717474E12, 1256.0599999999995], [1.74717636E12, 1221.7000000000007], [1.74717798E12, 972.8099999999997], [1.74717414E12, 1258.5699999999997], [1.74717696E12, 1308.3500000000001], [1.74717858E12, 1077.3200000000006], [1.74717516E12, 1271.0800000000027], [1.74717678E12, 1203.4799999999996], [1.74717576E12, 1336.8400000000013], [1.74717738E12, 1276.1600000000003], [1.74717456E12, 1200.6599999999999], [1.74717558E12, 998.99], [1.7471778E12, 1235.3999999999987], [1.74717618E12, 1296.1499999999999], [1.7471784E12, 1254.5900000000006], [1.74717396E12, 1178.0699999999995], [1.74717498E12, 1029.0000000000005], [1.7471766E12, 1179.2099999999991], [1.74717822E12, 1048.9600000000003], [1.74717438E12, 1148.0000000000005], [1.7471772E12, 1191.05], [1.7471754E12, 1054.3600000000001], [1.74717702E12, 1186.6500000000003], [1.747176E12, 1211.67], [1.74717762E12, 1012.5400000000002], [1.7471748E12, 1274.1400000000008], [1.74717582E12, 1257.1200000000003], [1.74717804E12, 945.6700000000005], [1.7471742E12, 1187.3400000000008], [1.74717642E12, 1271.7999999999993], [1.74717864E12, 1181.7499999999984], [1.74717684E12, 1194.54], [1.74717846E12, 1479.5], [1.74717462E12, 1409.75], [1.74717522E12, 1157.49], [1.74717744E12, 1044.0799999999995], [1.74717402E12, 1289.2800000000002], [1.74717564E12, 1299.5400000000004], [1.74717726E12, 1285.4899999999982], [1.74717624E12, 1268.3799999999978], [1.74717786E12, 1093.3800000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74717504E12, 729.9], [1.74717828E12, 816.5], [1.74717606E12, 949.4499999999992], [1.74717444E12, 808.0999999999999], [1.74717666E12, 867.4999999999999], [1.74717708E12, 815.6499999999995], [1.7471787E12, 663.7499999999999], [1.74717384E12, 765.6999999999998], [1.74717486E12, 773.2499999999999], [1.74717546E12, 699.4499999999998], [1.74717768E12, 749.15], [1.74717426E12, 756.25], [1.74717588E12, 753.6999999999999], [1.7471775E12, 734.25], [1.74717648E12, 792.6999999999998], [1.7471781E12, 768.2499999999999], [1.7471763E12, 882.75], [1.74717852E12, 860.3499999999996], [1.74717528E12, 761.8999999999999], [1.74717468E12, 784.2499999999998], [1.7471769E12, 950.25], [1.74717408E12, 800.25], [1.7471751E12, 933.75], [1.74717732E12, 782.5999999999999], [1.7471757E12, 884.5499999999989], [1.74717792E12, 722.4499999999999], [1.7471745E12, 778.55], [1.74717612E12, 869.6999999999994], [1.74717774E12, 750.9499999999994], [1.74717672E12, 747.599999999999], [1.74717834E12, 719.3], [1.7471739E12, 742.0499999999998], [1.74717654E12, 773.9499999999999], [1.74717876E12, 706.8999999999996], [1.74717552E12, 663.1500000000001], [1.74717492E12, 828.4499999999998], [1.74717714E12, 726.3], [1.74717432E12, 698.4499999999998], [1.74717534E12, 750.1999999999992], [1.74717756E12, 765.25], [1.74717594E12, 828.0], [1.74717816E12, 857.0], [1.74717474E12, 785.5499999999997], [1.74717636E12, 788.0], [1.74717798E12, 756.4], [1.74717414E12, 795.9499999999997], [1.74717696E12, 846.5], [1.74717858E12, 792.5999999999995], [1.74717516E12, 788.45], [1.74717678E12, 838.7999999999993], [1.74717576E12, 807.1999999999998], [1.74717738E12, 798.8], [1.74717456E12, 765.3499999999998], [1.74717558E12, 771.55], [1.7471778E12, 789.0], [1.74717618E12, 799.7499999999998], [1.7471784E12, 938.1499999999997], [1.74717396E12, 858.2999999999998], [1.74717498E12, 803.0], [1.7471766E12, 853.0499999999998], [1.74717822E12, 783.5999999999996], [1.74717438E12, 761.25], [1.7471772E12, 699.5], [1.7471754E12, 779.3999999999996], [1.74717702E12, 793.0], [1.747176E12, 799.1499999999995], [1.74717762E12, 744.25], [1.7471748E12, 751.5499999999992], [1.74717582E12, 928.4], [1.74717804E12, 693.8], [1.7471742E12, 712.25], [1.74717642E12, 814.6499999999994], [1.74717864E12, 782.0], [1.74717684E12, 885.8999999999994], [1.74717846E12, 809.25], [1.74717462E12, 770.0], [1.74717522E12, 763.3499999999999], [1.74717744E12, 758.1999999999998], [1.74717402E12, 918.5499999999998], [1.74717564E12, 861.4499999999998], [1.74717726E12, 858.3999999999997], [1.74717624E12, 851.4999999999998], [1.74717786E12, 733.3999999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.74717504E12, 26.0], [1.74717828E12, 28.0], [1.74717606E12, 29.0], [1.74717444E12, 28.0], [1.74717666E12, 26.0], [1.74717708E12, 29.0], [1.7471787E12, 28.0], [1.74717384E12, 29.0], [1.74717486E12, 28.0], [1.74717546E12, 27.0], [1.74717768E12, 26.0], [1.74717426E12, 29.0], [1.74717588E12, 27.0], [1.7471775E12, 28.0], [1.74717648E12, 28.0], [1.7471781E12, 26.0], [1.7471763E12, 26.0], [1.74717852E12, 26.0], [1.74717528E12, 28.0], [1.74717468E12, 26.0], [1.7471769E12, 28.0], [1.74717408E12, 26.0], [1.7471751E12, 26.0], [1.74717732E12, 28.0], [1.7471757E12, 28.0], [1.74717792E12, 29.0], [1.7471745E12, 25.0], [1.74717612E12, 29.0], [1.74717774E12, 27.0], [1.74717672E12, 26.0], [1.74717834E12, 28.0], [1.7471739E12, 29.0], [1.74717654E12, 29.0], [1.74717876E12, 29.0], [1.74717552E12, 26.0], [1.74717492E12, 25.0], [1.74717714E12, 28.0], [1.74717432E12, 27.0], [1.74717534E12, 27.0], [1.74717756E12, 29.0], [1.74717594E12, 27.0], [1.74717816E12, 26.0], [1.74717474E12, 26.0], [1.74717636E12, 25.0], [1.74717798E12, 29.0], [1.74717414E12, 26.0], [1.74717696E12, 26.0], [1.74717858E12, 28.0], [1.74717516E12, 27.0], [1.74717678E12, 27.0], [1.74717576E12, 28.0], [1.74717738E12, 27.0], [1.74717456E12, 27.0], [1.74717558E12, 28.0], [1.7471778E12, 28.0], [1.74717618E12, 28.0], [1.7471784E12, 29.0], [1.74717396E12, 28.0], [1.74717498E12, 27.0], [1.7471766E12, 28.0], [1.74717822E12, 27.0], [1.74717438E12, 26.0], [1.7471772E12, 28.0], [1.7471754E12, 26.0], [1.74717702E12, 27.0], [1.747176E12, 29.0], [1.74717762E12, 26.0], [1.7471748E12, 28.0], [1.74717582E12, 26.0], [1.74717804E12, 28.0], [1.7471742E12, 27.0], [1.74717642E12, 27.0], [1.74717864E12, 27.0], [1.74717684E12, 26.0], [1.74717846E12, 27.0], [1.74717462E12, 26.0], [1.74717522E12, 29.0], [1.74717744E12, 28.0], [1.74717402E12, 28.0], [1.74717564E12, 29.0], [1.74717726E12, 27.0], [1.74717624E12, 27.0], [1.74717786E12, 28.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74717504E12, 86.0], [1.74717828E12, 88.0], [1.74717606E12, 94.0], [1.74717444E12, 83.5], [1.74717666E12, 81.5], [1.74717708E12, 91.0], [1.7471787E12, 85.0], [1.74717384E12, 158.5], [1.74717486E12, 80.0], [1.74717546E12, 86.0], [1.74717768E12, 75.0], [1.74717426E12, 90.5], [1.74717588E12, 81.0], [1.7471775E12, 84.0], [1.74717648E12, 81.5], [1.7471781E12, 83.5], [1.7471763E12, 117.5], [1.74717852E12, 83.0], [1.74717528E12, 86.0], [1.74717468E12, 91.5], [1.7471769E12, 80.0], [1.74717408E12, 82.0], [1.7471751E12, 82.5], [1.74717732E12, 86.5], [1.7471757E12, 83.5], [1.74717792E12, 78.0], [1.7471745E12, 101.0], [1.74717612E12, 89.5], [1.74717774E12, 83.5], [1.74717672E12, 79.5], [1.74717834E12, 82.0], [1.7471739E12, 78.5], [1.74717654E12, 84.5], [1.74717876E12, 86.5], [1.74717552E12, 79.5], [1.74717492E12, 85.0], [1.74717714E12, 91.0], [1.74717432E12, 81.5], [1.74717534E12, 89.5], [1.74717756E12, 84.0], [1.74717594E12, 88.5], [1.74717816E12, 118.0], [1.74717474E12, 88.5], [1.74717636E12, 84.5], [1.74717798E12, 83.0], [1.74717414E12, 81.0], [1.74717696E12, 92.5], [1.74717858E12, 78.5], [1.74717516E12, 81.5], [1.74717678E12, 84.0], [1.74717576E12, 119.0], [1.74717738E12, 129.0], [1.74717456E12, 84.0], [1.74717558E12, 83.0], [1.7471778E12, 136.0], [1.74717618E12, 89.0], [1.7471784E12, 83.5], [1.74717396E12, 79.0], [1.74717498E12, 89.5], [1.7471766E12, 84.5], [1.74717822E12, 35.0], [1.74717438E12, 82.5], [1.7471772E12, 85.0], [1.7471754E12, 91.0], [1.74717702E12, 82.5], [1.747176E12, 84.0], [1.74717762E12, 87.0], [1.7471748E12, 78.5], [1.74717582E12, 36.0], [1.74717804E12, 86.5], [1.7471742E12, 84.5], [1.74717642E12, 86.5], [1.74717864E12, 80.5], [1.74717684E12, 87.5], [1.74717846E12, 79.5], [1.74717462E12, 78.5], [1.74717522E12, 82.5], [1.74717744E12, 40.0], [1.74717402E12, 90.0], [1.74717564E12, 87.5], [1.74717726E12, 81.5], [1.74717624E12, 89.5], [1.74717786E12, 36.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74717876E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 36.0, "minX": 1.0, "maxY": 353.0, "series": [{"data": [[1.0, 353.0], [4.0, 94.5], [2.0, 88.0], [8.0, 80.0], [9.0, 141.5], [5.0, 36.0], [10.0, 82.0], [3.0, 205.0], [6.0, 116.0], [7.0, 134.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 10.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 27.0, "series": [{"data": [[1.0, 0.0], [4.0, 12.5], [2.0, 13.0], [8.0, 12.5], [9.0, 0.0], [5.0, 27.0], [10.0, 14.5], [3.0, 0.0], [6.0, 12.5], [7.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 10.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.55, "minX": 1.74717384E12, "maxY": 4.633333333333334, "series": [{"data": [[1.74717504E12, 4.333333333333333], [1.74717828E12, 4.066666666666666], [1.74717606E12, 3.7666666666666666], [1.74717444E12, 3.8], [1.74717666E12, 3.8333333333333335], [1.74717708E12, 4.1], [1.7471787E12, 4.366666666666666], [1.74717384E12, 1.55], [1.74717486E12, 4.2], [1.74717546E12, 4.333333333333333], [1.74717768E12, 4.266666666666667], [1.74717426E12, 4.066666666666666], [1.74717588E12, 4.166666666666667], [1.7471775E12, 4.233333333333333], [1.74717648E12, 4.033333333333333], [1.7471781E12, 4.366666666666666], [1.7471763E12, 3.566666666666667], [1.74717852E12, 4.033333333333333], [1.74717528E12, 3.8666666666666667], [1.74717468E12, 4.333333333333333], [1.7471769E12, 3.7333333333333334], [1.74717408E12, 4.066666666666666], [1.7471751E12, 3.7333333333333334], [1.74717732E12, 4.033333333333333], [1.7471757E12, 3.7666666666666666], [1.74717792E12, 4.033333333333333], [1.7471745E12, 4.033333333333333], [1.74717612E12, 3.966666666666667], [1.74717774E12, 4.3], [1.74717672E12, 4.1], [1.74717834E12, 4.133333333333334], [1.7471739E12, 4.2], [1.74717654E12, 4.1], [1.74717876E12, 3.45], [1.74717552E12, 4.633333333333334], [1.74717492E12, 4.0], [1.74717714E12, 4.1], [1.74717432E12, 4.166666666666667], [1.74717534E12, 3.966666666666667], [1.74717756E12, 4.233333333333333], [1.74717594E12, 4.066666666666666], [1.74717816E12, 3.816666666666667], [1.74717474E12, 4.033333333333333], [1.74717636E12, 4.066666666666666], [1.74717798E12, 4.2], [1.74717414E12, 3.933333333333333], [1.74717696E12, 3.9], [1.74717858E12, 4.166666666666667], [1.74717516E12, 4.166666666666667], [1.74717678E12, 3.933333333333333], [1.74717576E12, 3.85], [1.74717738E12, 4.216666666666667], [1.74717456E12, 4.033333333333333], [1.74717558E12, 4.033333333333333], [1.7471778E12, 3.9833333333333334], [1.74717618E12, 3.8333333333333335], [1.7471784E12, 3.7], [1.74717396E12, 3.8333333333333335], [1.74717498E12, 4.066666666666666], [1.7471766E12, 3.933333333333333], [1.74717822E12, 4.116666666666666], [1.74717438E12, 4.066666666666666], [1.7471772E12, 4.233333333333333], [1.7471754E12, 4.1], [1.74717702E12, 3.9], [1.747176E12, 3.933333333333333], [1.74717762E12, 4.366666666666666], [1.7471748E12, 4.266666666666667], [1.74717582E12, 3.85], [1.74717804E12, 4.5], [1.7471742E12, 4.366666666666666], [1.74717642E12, 3.8333333333333335], [1.74717864E12, 4.233333333333333], [1.74717684E12, 4.1], [1.74717846E12, 3.7333333333333334], [1.74717462E12, 3.7333333333333334], [1.74717522E12, 4.166666666666667], [1.74717744E12, 4.016666666666667], [1.74717402E12, 3.6333333333333333], [1.74717564E12, 4.0], [1.74717726E12, 4.033333333333333], [1.74717624E12, 4.133333333333334], [1.74717786E12, 4.216666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74717876E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.7666666666666667, "minX": 1.74717384E12, "maxY": 2.316666666666667, "series": [{"data": [[1.74717504E12, 2.1666666666666665], [1.74717828E12, 2.033333333333333], [1.74717606E12, 1.8833333333333333], [1.74717444E12, 1.9], [1.74717666E12, 1.9166666666666667], [1.74717708E12, 2.05], [1.7471787E12, 2.183333333333333], [1.74717384E12, 0.7666666666666667], [1.74717486E12, 2.1], [1.74717546E12, 2.1666666666666665], [1.74717768E12, 2.1333333333333333], [1.74717426E12, 2.033333333333333], [1.74717588E12, 2.0833333333333335], [1.7471775E12, 2.1166666666666667], [1.74717648E12, 2.0166666666666666], [1.7471781E12, 2.183333333333333], [1.7471763E12, 1.7833333333333334], [1.74717852E12, 2.0166666666666666], [1.74717528E12, 1.9333333333333333], [1.74717468E12, 2.1666666666666665], [1.7471769E12, 1.8666666666666667], [1.74717408E12, 2.033333333333333], [1.7471751E12, 1.8666666666666667], [1.74717732E12, 2.0166666666666666], [1.7471757E12, 1.8833333333333333], [1.74717792E12, 2.0166666666666666], [1.7471745E12, 2.0166666666666666], [1.74717612E12, 1.9833333333333334], [1.74717774E12, 2.15], [1.74717672E12, 2.05], [1.74717834E12, 2.066666666666667], [1.7471739E12, 2.1], [1.74717654E12, 2.05], [1.74717876E12, 1.7333333333333334], [1.74717552E12, 2.316666666666667], [1.74717492E12, 2.0], [1.74717714E12, 2.05], [1.74717432E12, 2.0833333333333335], [1.74717534E12, 1.9833333333333334], [1.74717756E12, 2.1166666666666667], [1.74717594E12, 2.033333333333333], [1.74717816E12, 1.9166666666666667], [1.74717474E12, 2.0166666666666666], [1.74717636E12, 2.033333333333333], [1.74717798E12, 2.1], [1.74717414E12, 1.9666666666666666], [1.74717696E12, 1.95], [1.74717858E12, 2.0833333333333335], [1.74717516E12, 2.0833333333333335], [1.74717678E12, 1.9666666666666666], [1.74717576E12, 1.9333333333333333], [1.74717738E12, 2.1166666666666667], [1.74717456E12, 2.0166666666666666], [1.74717558E12, 2.0166666666666666], [1.7471778E12, 2.0], [1.74717618E12, 1.9166666666666667], [1.7471784E12, 1.85], [1.74717396E12, 1.9166666666666667], [1.74717498E12, 2.033333333333333], [1.7471766E12, 1.9666666666666666], [1.74717822E12, 2.05], [1.74717438E12, 2.033333333333333], [1.7471772E12, 2.1166666666666667], [1.7471754E12, 2.05], [1.74717702E12, 1.95], [1.747176E12, 1.9666666666666666], [1.74717762E12, 2.183333333333333], [1.7471748E12, 2.1333333333333333], [1.74717582E12, 1.9166666666666667], [1.74717804E12, 2.25], [1.7471742E12, 2.183333333333333], [1.74717642E12, 1.9166666666666667], [1.74717864E12, 2.1166666666666667], [1.74717684E12, 2.05], [1.74717846E12, 1.8666666666666667], [1.74717462E12, 1.8666666666666667], [1.74717522E12, 2.0833333333333335], [1.74717744E12, 2.0], [1.74717402E12, 1.8166666666666667], [1.74717564E12, 2.0], [1.74717726E12, 2.0166666666666666], [1.74717624E12, 2.066666666666667], [1.74717786E12, 2.1]], "isOverall": false, "label": "0", "isController": false}, {"data": [[1.74717504E12, 2.1666666666666665], [1.74717828E12, 2.033333333333333], [1.74717606E12, 1.8833333333333333], [1.74717444E12, 1.9], [1.74717666E12, 1.9166666666666667], [1.74717708E12, 2.05], [1.7471787E12, 2.183333333333333], [1.74717384E12, 0.7666666666666667], [1.74717486E12, 2.1], [1.74717546E12, 2.1666666666666665], [1.74717768E12, 2.1333333333333333], [1.74717426E12, 2.033333333333333], [1.74717588E12, 2.0833333333333335], [1.7471775E12, 2.1166666666666667], [1.74717648E12, 2.0166666666666666], [1.7471781E12, 2.183333333333333], [1.7471763E12, 1.7833333333333334], [1.74717852E12, 2.0166666666666666], [1.74717528E12, 1.9333333333333333], [1.74717468E12, 2.1666666666666665], [1.7471769E12, 1.8666666666666667], [1.74717408E12, 2.033333333333333], [1.7471751E12, 1.8666666666666667], [1.74717732E12, 2.0166666666666666], [1.7471757E12, 1.8833333333333333], [1.74717792E12, 2.0166666666666666], [1.7471745E12, 2.0166666666666666], [1.74717612E12, 1.9833333333333334], [1.74717774E12, 2.15], [1.74717672E12, 2.05], [1.74717834E12, 2.066666666666667], [1.7471739E12, 2.1], [1.74717654E12, 2.05], [1.74717876E12, 1.7333333333333334], [1.74717552E12, 2.316666666666667], [1.74717492E12, 2.0], [1.74717714E12, 2.05], [1.74717432E12, 2.0833333333333335], [1.74717534E12, 1.9833333333333334], [1.74717756E12, 2.1166666666666667], [1.74717594E12, 2.033333333333333], [1.74717816E12, 1.9], [1.74717474E12, 2.0166666666666666], [1.74717636E12, 2.033333333333333], [1.74717798E12, 2.1], [1.74717414E12, 1.9666666666666666], [1.74717696E12, 1.95], [1.74717858E12, 2.0833333333333335], [1.74717516E12, 2.0833333333333335], [1.74717678E12, 1.9666666666666666], [1.74717576E12, 1.9166666666666667], [1.74717738E12, 2.1], [1.74717456E12, 2.0166666666666666], [1.74717558E12, 2.0166666666666666], [1.7471778E12, 1.9833333333333334], [1.74717618E12, 1.9166666666666667], [1.7471784E12, 1.85], [1.74717396E12, 1.9166666666666667], [1.74717498E12, 2.033333333333333], [1.7471766E12, 1.9666666666666666], [1.74717822E12, 2.066666666666667], [1.74717438E12, 2.033333333333333], [1.7471772E12, 2.1166666666666667], [1.7471754E12, 2.05], [1.74717702E12, 1.95], [1.747176E12, 1.9666666666666666], [1.74717762E12, 2.183333333333333], [1.7471748E12, 2.1333333333333333], [1.74717582E12, 1.9333333333333333], [1.74717804E12, 2.25], [1.7471742E12, 2.183333333333333], [1.74717642E12, 1.9166666666666667], [1.74717864E12, 2.1166666666666667], [1.74717684E12, 2.05], [1.74717846E12, 1.8666666666666667], [1.74717462E12, 1.8666666666666667], [1.74717522E12, 2.0833333333333335], [1.74717744E12, 2.0166666666666666], [1.74717402E12, 1.8166666666666667], [1.74717564E12, 2.0], [1.74717726E12, 2.0166666666666666], [1.74717624E12, 2.066666666666667], [1.74717786E12, 2.1166666666666667]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74717876E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.7666666666666667, "minX": 1.74717384E12, "maxY": 2.316666666666667, "series": [{"data": [[1.74717504E12, 2.1666666666666665], [1.74717828E12, 2.033333333333333], [1.74717606E12, 1.8833333333333333], [1.74717444E12, 1.9], [1.74717666E12, 1.9166666666666667], [1.74717708E12, 2.05], [1.7471787E12, 2.183333333333333], [1.74717384E12, 0.7666666666666667], [1.74717486E12, 2.1], [1.74717546E12, 2.1666666666666665], [1.74717768E12, 2.1333333333333333], [1.74717426E12, 2.033333333333333], [1.74717588E12, 2.0833333333333335], [1.7471775E12, 2.1166666666666667], [1.74717648E12, 2.0166666666666666], [1.7471781E12, 2.183333333333333], [1.7471763E12, 1.7833333333333334], [1.74717852E12, 2.0166666666666666], [1.74717528E12, 1.9333333333333333], [1.74717468E12, 2.1666666666666665], [1.7471769E12, 1.8666666666666667], [1.74717408E12, 2.033333333333333], [1.7471751E12, 1.8666666666666667], [1.74717732E12, 2.0166666666666666], [1.7471757E12, 1.8833333333333333], [1.74717792E12, 2.0166666666666666], [1.7471745E12, 2.0166666666666666], [1.74717612E12, 1.9833333333333334], [1.74717774E12, 2.15], [1.74717672E12, 2.05], [1.74717834E12, 2.066666666666667], [1.7471739E12, 2.1], [1.74717654E12, 2.05], [1.74717876E12, 1.7333333333333334], [1.74717552E12, 2.316666666666667], [1.74717492E12, 2.0], [1.74717714E12, 2.05], [1.74717432E12, 2.0833333333333335], [1.74717534E12, 1.9833333333333334], [1.74717756E12, 2.1166666666666667], [1.74717594E12, 2.033333333333333], [1.74717816E12, 1.9], [1.74717474E12, 2.0166666666666666], [1.74717636E12, 2.033333333333333], [1.74717798E12, 2.1], [1.74717414E12, 1.9666666666666666], [1.74717696E12, 1.95], [1.74717858E12, 2.0833333333333335], [1.74717516E12, 2.0833333333333335], [1.74717678E12, 1.9666666666666666], [1.74717576E12, 1.9166666666666667], [1.74717738E12, 2.1], [1.74717456E12, 2.0166666666666666], [1.74717558E12, 2.0166666666666666], [1.7471778E12, 1.9833333333333334], [1.74717618E12, 1.9166666666666667], [1.7471784E12, 1.85], [1.74717396E12, 1.9166666666666667], [1.74717498E12, 2.033333333333333], [1.7471766E12, 1.9666666666666666], [1.74717822E12, 2.066666666666667], [1.74717438E12, 2.033333333333333], [1.7471772E12, 2.1166666666666667], [1.7471754E12, 2.05], [1.74717702E12, 1.95], [1.747176E12, 1.9666666666666666], [1.74717762E12, 2.183333333333333], [1.7471748E12, 2.1333333333333333], [1.74717582E12, 1.9333333333333333], [1.74717804E12, 2.25], [1.7471742E12, 2.183333333333333], [1.74717642E12, 1.9166666666666667], [1.74717864E12, 2.1166666666666667], [1.74717684E12, 2.05], [1.74717846E12, 1.8666666666666667], [1.74717462E12, 1.8666666666666667], [1.74717522E12, 2.0833333333333335], [1.74717744E12, 2.0166666666666666], [1.74717402E12, 1.8166666666666667], [1.74717564E12, 2.0], [1.74717726E12, 2.0166666666666666], [1.74717624E12, 2.066666666666667], [1.74717786E12, 2.1166666666666667]], "isOverall": false, "label": "HTTP Request - enroll-success", "isController": false}, {"data": [[1.74717504E12, 2.1666666666666665], [1.74717828E12, 2.033333333333333], [1.74717606E12, 1.8833333333333333], [1.74717444E12, 1.9], [1.74717666E12, 1.9166666666666667], [1.74717708E12, 2.05], [1.7471787E12, 2.183333333333333], [1.74717384E12, 0.7666666666666667], [1.74717486E12, 2.1], [1.74717546E12, 2.1666666666666665], [1.74717768E12, 2.1333333333333333], [1.74717426E12, 2.033333333333333], [1.74717588E12, 2.0833333333333335], [1.7471775E12, 2.1166666666666667], [1.74717648E12, 2.0166666666666666], [1.7471781E12, 2.183333333333333], [1.7471763E12, 1.7833333333333334], [1.74717852E12, 2.0166666666666666], [1.74717528E12, 1.9333333333333333], [1.74717468E12, 2.1666666666666665], [1.7471769E12, 1.8666666666666667], [1.74717408E12, 2.033333333333333], [1.7471751E12, 1.8666666666666667], [1.74717732E12, 2.0166666666666666], [1.7471757E12, 1.8833333333333333], [1.74717792E12, 2.0166666666666666], [1.7471745E12, 2.0166666666666666], [1.74717612E12, 1.9833333333333334], [1.74717774E12, 2.15], [1.74717672E12, 2.05], [1.74717834E12, 2.066666666666667], [1.7471739E12, 2.1], [1.74717654E12, 2.05], [1.74717876E12, 1.7333333333333334], [1.74717552E12, 2.316666666666667], [1.74717492E12, 2.0], [1.74717714E12, 2.05], [1.74717432E12, 2.0833333333333335], [1.74717534E12, 1.9833333333333334], [1.74717756E12, 2.1166666666666667], [1.74717594E12, 2.033333333333333], [1.74717816E12, 1.9166666666666667], [1.74717474E12, 2.0166666666666666], [1.74717636E12, 2.033333333333333], [1.74717798E12, 2.1], [1.74717414E12, 1.9666666666666666], [1.74717696E12, 1.95], [1.74717858E12, 2.0833333333333335], [1.74717516E12, 2.0833333333333335], [1.74717678E12, 1.9666666666666666], [1.74717576E12, 1.9333333333333333], [1.74717738E12, 2.1166666666666667], [1.74717456E12, 2.0166666666666666], [1.74717558E12, 2.0166666666666666], [1.7471778E12, 2.0], [1.74717618E12, 1.9166666666666667], [1.7471784E12, 1.85], [1.74717396E12, 1.9166666666666667], [1.74717498E12, 2.033333333333333], [1.7471766E12, 1.9666666666666666], [1.74717822E12, 2.05], [1.74717438E12, 2.033333333333333], [1.7471772E12, 2.1166666666666667], [1.7471754E12, 2.05], [1.74717702E12, 1.95], [1.747176E12, 1.9666666666666666], [1.74717762E12, 2.183333333333333], [1.7471748E12, 2.1333333333333333], [1.74717582E12, 1.9166666666666667], [1.74717804E12, 2.25], [1.7471742E12, 2.183333333333333], [1.74717642E12, 1.9166666666666667], [1.74717864E12, 2.1166666666666667], [1.74717684E12, 2.05], [1.74717846E12, 1.8666666666666667], [1.74717462E12, 1.8666666666666667], [1.74717522E12, 2.0833333333333335], [1.74717744E12, 2.0], [1.74717402E12, 1.8166666666666667], [1.74717564E12, 2.0], [1.74717726E12, 2.0166666666666666], [1.74717624E12, 2.066666666666667], [1.74717786E12, 2.1]], "isOverall": false, "label": "Create CSR-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74717876E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.5333333333333334, "minX": 1.74717384E12, "maxY": 4.633333333333334, "series": [{"data": [[1.74717504E12, 4.333333333333333], [1.74717828E12, 4.066666666666666], [1.74717606E12, 3.7666666666666666], [1.74717444E12, 3.8], [1.74717666E12, 3.8333333333333335], [1.74717708E12, 4.1], [1.7471787E12, 4.366666666666666], [1.74717384E12, 1.5333333333333334], [1.74717486E12, 4.2], [1.74717546E12, 4.333333333333333], [1.74717768E12, 4.266666666666667], [1.74717426E12, 4.066666666666666], [1.74717588E12, 4.166666666666667], [1.7471775E12, 4.233333333333333], [1.74717648E12, 4.033333333333333], [1.7471781E12, 4.366666666666666], [1.7471763E12, 3.566666666666667], [1.74717852E12, 4.033333333333333], [1.74717528E12, 3.8666666666666667], [1.74717468E12, 4.333333333333333], [1.7471769E12, 3.7333333333333334], [1.74717408E12, 4.066666666666666], [1.7471751E12, 3.7333333333333334], [1.74717732E12, 4.033333333333333], [1.7471757E12, 3.7666666666666666], [1.74717792E12, 4.033333333333333], [1.7471745E12, 4.033333333333333], [1.74717612E12, 3.966666666666667], [1.74717774E12, 4.3], [1.74717672E12, 4.1], [1.74717834E12, 4.133333333333334], [1.7471739E12, 4.2], [1.74717654E12, 4.1], [1.74717876E12, 3.466666666666667], [1.74717552E12, 4.633333333333334], [1.74717492E12, 4.0], [1.74717714E12, 4.1], [1.74717432E12, 4.166666666666667], [1.74717534E12, 3.966666666666667], [1.74717756E12, 4.233333333333333], [1.74717594E12, 4.066666666666666], [1.74717816E12, 3.816666666666667], [1.74717474E12, 4.033333333333333], [1.74717636E12, 4.066666666666666], [1.74717798E12, 4.2], [1.74717414E12, 3.933333333333333], [1.74717696E12, 3.9], [1.74717858E12, 4.166666666666667], [1.74717516E12, 4.166666666666667], [1.74717678E12, 3.933333333333333], [1.74717576E12, 3.85], [1.74717738E12, 4.216666666666667], [1.74717456E12, 4.033333333333333], [1.74717558E12, 4.033333333333333], [1.7471778E12, 3.9833333333333334], [1.74717618E12, 3.8333333333333335], [1.7471784E12, 3.7], [1.74717396E12, 3.8333333333333335], [1.74717498E12, 4.066666666666666], [1.7471766E12, 3.933333333333333], [1.74717822E12, 4.116666666666666], [1.74717438E12, 4.066666666666666], [1.7471772E12, 4.233333333333333], [1.7471754E12, 4.1], [1.74717702E12, 3.9], [1.747176E12, 3.933333333333333], [1.74717762E12, 4.366666666666666], [1.7471748E12, 4.266666666666667], [1.74717582E12, 3.85], [1.74717804E12, 4.5], [1.7471742E12, 4.366666666666666], [1.74717642E12, 3.8333333333333335], [1.74717864E12, 4.233333333333333], [1.74717684E12, 4.1], [1.74717846E12, 3.7333333333333334], [1.74717462E12, 3.7333333333333334], [1.74717522E12, 4.166666666666667], [1.74717744E12, 4.016666666666667], [1.74717402E12, 3.6333333333333333], [1.74717564E12, 4.0], [1.74717726E12, 4.033333333333333], [1.74717624E12, 4.133333333333334], [1.74717786E12, 4.216666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74717876E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

