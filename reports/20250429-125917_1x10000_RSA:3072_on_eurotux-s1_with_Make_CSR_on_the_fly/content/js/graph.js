/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 114.0, "minX": 0.0, "maxY": 4471.0, "series": [{"data": [[0.0, 114.0], [0.1, 117.0], [0.2, 121.0], [0.3, 124.0], [0.4, 125.0], [0.5, 126.0], [0.6, 129.0], [0.7, 130.0], [0.8, 131.0], [0.9, 134.0], [1.0, 135.0], [1.1, 136.0], [1.2, 138.0], [1.3, 139.0], [1.4, 141.0], [1.5, 142.0], [1.6, 143.0], [1.7, 144.0], [1.8, 145.0], [1.9, 147.0], [2.0, 148.0], [2.1, 149.0], [2.2, 150.0], [2.3, 151.0], [2.4, 152.0], [2.5, 152.0], [2.6, 153.0], [2.7, 155.0], [2.8, 156.0], [2.9, 157.0], [3.0, 158.0], [3.1, 158.0], [3.2, 160.0], [3.3, 160.0], [3.4, 161.0], [3.5, 162.0], [3.6, 163.0], [3.7, 164.0], [3.8, 165.0], [3.9, 165.0], [4.0, 166.0], [4.1, 167.0], [4.2, 168.0], [4.3, 169.0], [4.4, 169.0], [4.5, 170.0], [4.6, 171.0], [4.7, 171.0], [4.8, 172.0], [4.9, 173.0], [5.0, 173.0], [5.1, 174.0], [5.2, 174.0], [5.3, 175.0], [5.4, 175.0], [5.5, 176.0], [5.6, 176.0], [5.7, 177.0], [5.8, 178.0], [5.9, 179.0], [6.0, 179.0], [6.1, 180.0], [6.2, 180.0], [6.3, 181.0], [6.4, 181.0], [6.5, 182.0], [6.6, 183.0], [6.7, 183.0], [6.8, 184.0], [6.9, 185.0], [7.0, 185.0], [7.1, 186.0], [7.2, 186.0], [7.3, 187.0], [7.4, 188.0], [7.5, 189.0], [7.6, 189.0], [7.7, 190.0], [7.8, 190.0], [7.9, 191.0], [8.0, 192.0], [8.1, 192.0], [8.2, 192.0], [8.3, 193.0], [8.4, 194.0], [8.5, 194.0], [8.6, 194.0], [8.7, 195.0], [8.8, 196.0], [8.9, 197.0], [9.0, 197.0], [9.1, 198.0], [9.2, 199.0], [9.3, 199.0], [9.4, 200.0], [9.5, 200.0], [9.6, 201.0], [9.7, 201.0], [9.8, 202.0], [9.9, 203.0], [10.0, 203.0], [10.1, 204.0], [10.2, 204.0], [10.3, 205.0], [10.4, 206.0], [10.5, 206.0], [10.6, 207.0], [10.7, 207.0], [10.8, 208.0], [10.9, 209.0], [11.0, 209.0], [11.1, 209.0], [11.2, 210.0], [11.3, 210.0], [11.4, 211.0], [11.5, 212.0], [11.6, 212.0], [11.7, 213.0], [11.8, 213.0], [11.9, 214.0], [12.0, 214.0], [12.1, 215.0], [12.2, 215.0], [12.3, 216.0], [12.4, 216.0], [12.5, 217.0], [12.6, 217.0], [12.7, 218.0], [12.8, 219.0], [12.9, 219.0], [13.0, 219.0], [13.1, 220.0], [13.2, 220.0], [13.3, 221.0], [13.4, 221.0], [13.5, 222.0], [13.6, 222.0], [13.7, 222.0], [13.8, 223.0], [13.9, 223.0], [14.0, 224.0], [14.1, 224.0], [14.2, 224.0], [14.3, 225.0], [14.4, 225.0], [14.5, 226.0], [14.6, 226.0], [14.7, 227.0], [14.8, 227.0], [14.9, 227.0], [15.0, 228.0], [15.1, 228.0], [15.2, 229.0], [15.3, 229.0], [15.4, 230.0], [15.5, 230.0], [15.6, 231.0], [15.7, 231.0], [15.8, 232.0], [15.9, 233.0], [16.0, 233.0], [16.1, 234.0], [16.2, 234.0], [16.3, 235.0], [16.4, 235.0], [16.5, 236.0], [16.6, 237.0], [16.7, 237.0], [16.8, 237.0], [16.9, 238.0], [17.0, 238.0], [17.1, 239.0], [17.2, 239.0], [17.3, 240.0], [17.4, 240.0], [17.5, 241.0], [17.6, 241.0], [17.7, 242.0], [17.8, 242.0], [17.9, 243.0], [18.0, 243.0], [18.1, 243.0], [18.2, 244.0], [18.3, 244.0], [18.4, 245.0], [18.5, 245.0], [18.6, 246.0], [18.7, 246.0], [18.8, 247.0], [18.9, 248.0], [19.0, 248.0], [19.1, 248.0], [19.2, 249.0], [19.3, 249.0], [19.4, 250.0], [19.5, 250.0], [19.6, 251.0], [19.7, 251.0], [19.8, 252.0], [19.9, 253.0], [20.0, 253.0], [20.1, 254.0], [20.2, 254.0], [20.3, 254.0], [20.4, 255.0], [20.5, 256.0], [20.6, 256.0], [20.7, 257.0], [20.8, 257.0], [20.9, 258.0], [21.0, 258.0], [21.1, 258.0], [21.2, 259.0], [21.3, 259.0], [21.4, 260.0], [21.5, 260.0], [21.6, 261.0], [21.7, 261.0], [21.8, 261.0], [21.9, 262.0], [22.0, 262.0], [22.1, 263.0], [22.2, 264.0], [22.3, 264.0], [22.4, 265.0], [22.5, 265.0], [22.6, 265.0], [22.7, 266.0], [22.8, 266.0], [22.9, 267.0], [23.0, 267.0], [23.1, 268.0], [23.2, 269.0], [23.3, 269.0], [23.4, 270.0], [23.5, 270.0], [23.6, 270.0], [23.7, 271.0], [23.8, 272.0], [23.9, 272.0], [24.0, 273.0], [24.1, 273.0], [24.2, 274.0], [24.3, 274.0], [24.4, 275.0], [24.5, 275.0], [24.6, 275.0], [24.7, 276.0], [24.8, 277.0], [24.9, 277.0], [25.0, 277.0], [25.1, 277.0], [25.2, 278.0], [25.3, 278.0], [25.4, 279.0], [25.5, 279.0], [25.6, 279.0], [25.7, 280.0], [25.8, 280.0], [25.9, 280.0], [26.0, 281.0], [26.1, 282.0], [26.2, 282.0], [26.3, 282.0], [26.4, 283.0], [26.5, 283.0], [26.6, 284.0], [26.7, 284.0], [26.8, 285.0], [26.9, 285.0], [27.0, 286.0], [27.1, 286.0], [27.2, 287.0], [27.3, 287.0], [27.4, 288.0], [27.5, 288.0], [27.6, 288.0], [27.7, 289.0], [27.8, 289.0], [27.9, 290.0], [28.0, 291.0], [28.1, 291.0], [28.2, 291.0], [28.3, 292.0], [28.4, 292.0], [28.5, 293.0], [28.6, 293.0], [28.7, 294.0], [28.8, 294.0], [28.9, 295.0], [29.0, 295.0], [29.1, 296.0], [29.2, 297.0], [29.3, 297.0], [29.4, 298.0], [29.5, 298.0], [29.6, 298.0], [29.7, 299.0], [29.8, 299.0], [29.9, 300.0], [30.0, 300.0], [30.1, 301.0], [30.2, 302.0], [30.3, 302.0], [30.4, 303.0], [30.5, 303.0], [30.6, 304.0], [30.7, 304.0], [30.8, 304.0], [30.9, 305.0], [31.0, 305.0], [31.1, 306.0], [31.2, 306.0], [31.3, 307.0], [31.4, 307.0], [31.5, 308.0], [31.6, 308.0], [31.7, 308.0], [31.8, 309.0], [31.9, 309.0], [32.0, 310.0], [32.1, 310.0], [32.2, 311.0], [32.3, 311.0], [32.4, 311.0], [32.5, 312.0], [32.6, 312.0], [32.7, 313.0], [32.8, 313.0], [32.9, 313.0], [33.0, 314.0], [33.1, 314.0], [33.2, 315.0], [33.3, 315.0], [33.4, 316.0], [33.5, 316.0], [33.6, 317.0], [33.7, 317.0], [33.8, 317.0], [33.9, 318.0], [34.0, 318.0], [34.1, 318.0], [34.2, 319.0], [34.3, 319.0], [34.4, 320.0], [34.5, 320.0], [34.6, 321.0], [34.7, 321.0], [34.8, 322.0], [34.9, 322.0], [35.0, 323.0], [35.1, 323.0], [35.2, 324.0], [35.3, 324.0], [35.4, 325.0], [35.5, 325.0], [35.6, 326.0], [35.7, 326.0], [35.8, 327.0], [35.9, 327.0], [36.0, 327.0], [36.1, 328.0], [36.2, 329.0], [36.3, 329.0], [36.4, 329.0], [36.5, 330.0], [36.6, 330.0], [36.7, 331.0], [36.8, 331.0], [36.9, 331.0], [37.0, 332.0], [37.1, 332.0], [37.2, 333.0], [37.3, 333.0], [37.4, 334.0], [37.5, 334.0], [37.6, 335.0], [37.7, 335.0], [37.8, 336.0], [37.9, 336.0], [38.0, 337.0], [38.1, 337.0], [38.2, 338.0], [38.3, 339.0], [38.4, 339.0], [38.5, 340.0], [38.6, 340.0], [38.7, 340.0], [38.8, 341.0], [38.9, 341.0], [39.0, 342.0], [39.1, 342.0], [39.2, 343.0], [39.3, 343.0], [39.4, 344.0], [39.5, 344.0], [39.6, 345.0], [39.7, 345.0], [39.8, 345.0], [39.9, 346.0], [40.0, 346.0], [40.1, 347.0], [40.2, 347.0], [40.3, 348.0], [40.4, 348.0], [40.5, 349.0], [40.6, 349.0], [40.7, 350.0], [40.8, 350.0], [40.9, 350.0], [41.0, 351.0], [41.1, 351.0], [41.2, 352.0], [41.3, 352.0], [41.4, 353.0], [41.5, 353.0], [41.6, 354.0], [41.7, 354.0], [41.8, 354.0], [41.9, 355.0], [42.0, 355.0], [42.1, 356.0], [42.2, 356.0], [42.3, 357.0], [42.4, 357.0], [42.5, 358.0], [42.6, 358.0], [42.7, 359.0], [42.8, 359.0], [42.9, 360.0], [43.0, 361.0], [43.1, 361.0], [43.2, 362.0], [43.3, 362.0], [43.4, 362.0], [43.5, 363.0], [43.6, 364.0], [43.7, 364.0], [43.8, 365.0], [43.9, 365.0], [44.0, 366.0], [44.1, 366.0], [44.2, 367.0], [44.3, 368.0], [44.4, 369.0], [44.5, 369.0], [44.6, 369.0], [44.7, 370.0], [44.8, 370.0], [44.9, 371.0], [45.0, 371.0], [45.1, 372.0], [45.2, 372.0], [45.3, 372.0], [45.4, 373.0], [45.5, 374.0], [45.6, 374.0], [45.7, 375.0], [45.8, 375.0], [45.9, 376.0], [46.0, 376.0], [46.1, 377.0], [46.2, 378.0], [46.3, 378.0], [46.4, 378.0], [46.5, 379.0], [46.6, 380.0], [46.7, 381.0], [46.8, 381.0], [46.9, 382.0], [47.0, 382.0], [47.1, 383.0], [47.2, 383.0], [47.3, 383.0], [47.4, 384.0], [47.5, 384.0], [47.6, 385.0], [47.7, 385.0], [47.8, 386.0], [47.9, 386.0], [48.0, 387.0], [48.1, 387.0], [48.2, 388.0], [48.3, 388.0], [48.4, 389.0], [48.5, 389.0], [48.6, 390.0], [48.7, 391.0], [48.8, 391.0], [48.9, 392.0], [49.0, 392.0], [49.1, 393.0], [49.2, 393.0], [49.3, 394.0], [49.4, 395.0], [49.5, 395.0], [49.6, 396.0], [49.7, 396.0], [49.8, 397.0], [49.9, 397.0], [50.0, 398.0], [50.1, 398.0], [50.2, 398.0], [50.3, 399.0], [50.4, 399.0], [50.5, 400.0], [50.6, 400.0], [50.7, 400.0], [50.8, 401.0], [50.9, 401.0], [51.0, 402.0], [51.1, 402.0], [51.2, 403.0], [51.3, 403.0], [51.4, 404.0], [51.5, 405.0], [51.6, 405.0], [51.7, 406.0], [51.8, 407.0], [51.9, 407.0], [52.0, 408.0], [52.1, 409.0], [52.2, 409.0], [52.3, 410.0], [52.4, 410.0], [52.5, 411.0], [52.6, 412.0], [52.7, 412.0], [52.8, 413.0], [52.9, 414.0], [53.0, 414.0], [53.1, 415.0], [53.2, 415.0], [53.3, 416.0], [53.4, 416.0], [53.5, 417.0], [53.6, 417.0], [53.7, 418.0], [53.8, 419.0], [53.9, 419.0], [54.0, 420.0], [54.1, 420.0], [54.2, 421.0], [54.3, 421.0], [54.4, 422.0], [54.5, 422.0], [54.6, 423.0], [54.7, 424.0], [54.8, 424.0], [54.9, 424.0], [55.0, 425.0], [55.1, 426.0], [55.2, 426.0], [55.3, 427.0], [55.4, 428.0], [55.5, 428.0], [55.6, 428.0], [55.7, 429.0], [55.8, 430.0], [55.9, 430.0], [56.0, 431.0], [56.1, 432.0], [56.2, 432.0], [56.3, 433.0], [56.4, 433.0], [56.5, 434.0], [56.6, 434.0], [56.7, 435.0], [56.8, 436.0], [56.9, 436.0], [57.0, 437.0], [57.1, 437.0], [57.2, 437.0], [57.3, 438.0], [57.4, 439.0], [57.5, 439.0], [57.6, 440.0], [57.7, 440.0], [57.8, 441.0], [57.9, 441.0], [58.0, 442.0], [58.1, 443.0], [58.2, 443.0], [58.3, 444.0], [58.4, 445.0], [58.5, 446.0], [58.6, 446.0], [58.7, 447.0], [58.8, 448.0], [58.9, 448.0], [59.0, 449.0], [59.1, 450.0], [59.2, 450.0], [59.3, 451.0], [59.4, 451.0], [59.5, 452.0], [59.6, 452.0], [59.7, 453.0], [59.8, 454.0], [59.9, 454.0], [60.0, 455.0], [60.1, 455.0], [60.2, 456.0], [60.3, 456.0], [60.4, 457.0], [60.5, 457.0], [60.6, 458.0], [60.7, 458.0], [60.8, 459.0], [60.9, 460.0], [61.0, 460.0], [61.1, 461.0], [61.2, 461.0], [61.3, 462.0], [61.4, 463.0], [61.5, 463.0], [61.6, 463.0], [61.7, 464.0], [61.8, 464.0], [61.9, 465.0], [62.0, 466.0], [62.1, 467.0], [62.2, 468.0], [62.3, 468.0], [62.4, 468.0], [62.5, 469.0], [62.6, 470.0], [62.7, 470.0], [62.8, 471.0], [62.9, 471.0], [63.0, 472.0], [63.1, 473.0], [63.2, 473.0], [63.3, 474.0], [63.4, 475.0], [63.5, 475.0], [63.6, 476.0], [63.7, 477.0], [63.8, 477.0], [63.9, 478.0], [64.0, 480.0], [64.1, 480.0], [64.2, 481.0], [64.3, 481.0], [64.4, 483.0], [64.5, 483.0], [64.6, 484.0], [64.7, 485.0], [64.8, 486.0], [64.9, 486.0], [65.0, 487.0], [65.1, 487.0], [65.2, 488.0], [65.3, 489.0], [65.4, 490.0], [65.5, 490.0], [65.6, 491.0], [65.7, 492.0], [65.8, 492.0], [65.9, 493.0], [66.0, 494.0], [66.1, 495.0], [66.2, 495.0], [66.3, 496.0], [66.4, 497.0], [66.5, 498.0], [66.6, 499.0], [66.7, 500.0], [66.8, 500.0], [66.9, 501.0], [67.0, 502.0], [67.1, 503.0], [67.2, 504.0], [67.3, 505.0], [67.4, 506.0], [67.5, 507.0], [67.6, 507.0], [67.7, 509.0], [67.8, 509.0], [67.9, 510.0], [68.0, 511.0], [68.1, 512.0], [68.2, 513.0], [68.3, 513.0], [68.4, 514.0], [68.5, 515.0], [68.6, 515.0], [68.7, 517.0], [68.8, 517.0], [68.9, 518.0], [69.0, 519.0], [69.1, 520.0], [69.2, 521.0], [69.3, 522.0], [69.4, 523.0], [69.5, 524.0], [69.6, 524.0], [69.7, 525.0], [69.8, 526.0], [69.9, 526.0], [70.0, 527.0], [70.1, 528.0], [70.2, 529.0], [70.3, 530.0], [70.4, 531.0], [70.5, 531.0], [70.6, 532.0], [70.7, 533.0], [70.8, 533.0], [70.9, 534.0], [71.0, 536.0], [71.1, 536.0], [71.2, 537.0], [71.3, 538.0], [71.4, 538.0], [71.5, 539.0], [71.6, 539.0], [71.7, 540.0], [71.8, 541.0], [71.9, 542.0], [72.0, 542.0], [72.1, 543.0], [72.2, 544.0], [72.3, 545.0], [72.4, 546.0], [72.5, 546.0], [72.6, 547.0], [72.7, 548.0], [72.8, 549.0], [72.9, 551.0], [73.0, 551.0], [73.1, 552.0], [73.2, 553.0], [73.3, 554.0], [73.4, 555.0], [73.5, 556.0], [73.6, 557.0], [73.7, 557.0], [73.8, 558.0], [73.9, 559.0], [74.0, 560.0], [74.1, 560.0], [74.2, 561.0], [74.3, 562.0], [74.4, 563.0], [74.5, 564.0], [74.6, 565.0], [74.7, 565.0], [74.8, 566.0], [74.9, 567.0], [75.0, 568.0], [75.1, 569.0], [75.2, 570.0], [75.3, 571.0], [75.4, 572.0], [75.5, 573.0], [75.6, 574.0], [75.7, 575.0], [75.8, 575.0], [75.9, 577.0], [76.0, 578.0], [76.1, 579.0], [76.2, 579.0], [76.3, 580.0], [76.4, 581.0], [76.5, 582.0], [76.6, 583.0], [76.7, 583.0], [76.8, 585.0], [76.9, 586.0], [77.0, 587.0], [77.1, 587.0], [77.2, 588.0], [77.3, 589.0], [77.4, 591.0], [77.5, 592.0], [77.6, 593.0], [77.7, 594.0], [77.8, 595.0], [77.9, 596.0], [78.0, 597.0], [78.1, 598.0], [78.2, 600.0], [78.3, 600.0], [78.4, 601.0], [78.5, 602.0], [78.6, 604.0], [78.7, 604.0], [78.8, 605.0], [78.9, 606.0], [79.0, 607.0], [79.1, 608.0], [79.2, 609.0], [79.3, 610.0], [79.4, 612.0], [79.5, 613.0], [79.6, 614.0], [79.7, 615.0], [79.8, 617.0], [79.9, 617.0], [80.0, 618.0], [80.1, 619.0], [80.2, 621.0], [80.3, 622.0], [80.4, 623.0], [80.5, 623.0], [80.6, 624.0], [80.7, 625.0], [80.8, 626.0], [80.9, 626.0], [81.0, 628.0], [81.1, 629.0], [81.2, 631.0], [81.3, 632.0], [81.4, 634.0], [81.5, 635.0], [81.6, 637.0], [81.7, 637.0], [81.8, 638.0], [81.9, 640.0], [82.0, 641.0], [82.1, 642.0], [82.2, 643.0], [82.3, 645.0], [82.4, 647.0], [82.5, 648.0], [82.6, 649.0], [82.7, 651.0], [82.8, 652.0], [82.9, 654.0], [83.0, 655.0], [83.1, 656.0], [83.2, 658.0], [83.3, 659.0], [83.4, 660.0], [83.5, 663.0], [83.6, 665.0], [83.7, 665.0], [83.8, 666.0], [83.9, 667.0], [84.0, 668.0], [84.1, 669.0], [84.2, 670.0], [84.3, 672.0], [84.4, 674.0], [84.5, 676.0], [84.6, 677.0], [84.7, 679.0], [84.8, 679.0], [84.9, 681.0], [85.0, 682.0], [85.1, 684.0], [85.2, 686.0], [85.3, 688.0], [85.4, 689.0], [85.5, 691.0], [85.6, 693.0], [85.7, 695.0], [85.8, 696.0], [85.9, 698.0], [86.0, 699.0], [86.1, 701.0], [86.2, 703.0], [86.3, 704.0], [86.4, 706.0], [86.5, 707.0], [86.6, 709.0], [86.7, 710.0], [86.8, 712.0], [86.9, 714.0], [87.0, 716.0], [87.1, 718.0], [87.2, 719.0], [87.3, 720.0], [87.4, 722.0], [87.5, 723.0], [87.6, 725.0], [87.7, 728.0], [87.8, 731.0], [87.9, 733.0], [88.0, 736.0], [88.1, 737.0], [88.2, 739.0], [88.3, 743.0], [88.4, 745.0], [88.5, 747.0], [88.6, 749.0], [88.7, 752.0], [88.8, 754.0], [88.9, 756.0], [89.0, 757.0], [89.1, 759.0], [89.2, 761.0], [89.3, 763.0], [89.4, 766.0], [89.5, 767.0], [89.6, 772.0], [89.7, 774.0], [89.8, 776.0], [89.9, 778.0], [90.0, 782.0], [90.1, 784.0], [90.2, 784.0], [90.3, 788.0], [90.4, 789.0], [90.5, 791.0], [90.6, 793.0], [90.7, 795.0], [90.8, 795.0], [90.9, 798.0], [91.0, 801.0], [91.1, 803.0], [91.2, 805.0], [91.3, 809.0], [91.4, 810.0], [91.5, 814.0], [91.6, 816.0], [91.7, 820.0], [91.8, 822.0], [91.9, 824.0], [92.0, 826.0], [92.1, 829.0], [92.2, 832.0], [92.3, 834.0], [92.4, 837.0], [92.5, 839.0], [92.6, 842.0], [92.7, 846.0], [92.8, 849.0], [92.9, 853.0], [93.0, 855.0], [93.1, 859.0], [93.2, 863.0], [93.3, 867.0], [93.4, 869.0], [93.5, 871.0], [93.6, 873.0], [93.7, 877.0], [93.8, 880.0], [93.9, 885.0], [94.0, 887.0], [94.1, 889.0], [94.2, 893.0], [94.3, 897.0], [94.4, 900.0], [94.5, 903.0], [94.6, 908.0], [94.7, 912.0], [94.8, 916.0], [94.9, 918.0], [95.0, 921.0], [95.1, 924.0], [95.2, 926.0], [95.3, 931.0], [95.4, 936.0], [95.5, 939.0], [95.6, 943.0], [95.7, 947.0], [95.8, 951.0], [95.9, 954.0], [96.0, 958.0], [96.1, 965.0], [96.2, 969.0], [96.3, 977.0], [96.4, 985.0], [96.5, 991.0], [96.6, 996.0], [96.7, 1001.0], [96.8, 1008.0], [96.9, 1015.0], [97.0, 1020.0], [97.1, 1027.0], [97.2, 1032.0], [97.3, 1036.0], [97.4, 1041.0], [97.5, 1047.0], [97.6, 1052.0], [97.7, 1060.0], [97.8, 1067.0], [97.9, 1072.0], [98.0, 1081.0], [98.1, 1096.0], [98.2, 1103.0], [98.3, 1114.0], [98.4, 1130.0], [98.5, 1143.0], [98.6, 1162.0], [98.7, 1179.0], [98.8, 1189.0], [98.9, 1201.0], [99.0, 1228.0], [99.1, 1246.0], [99.2, 1263.0], [99.3, 1284.0], [99.4, 1306.0], [99.5, 1329.0], [99.6, 1397.0], [99.7, 1432.0], [99.8, 1524.0], [99.9, 1631.0], [100.0, 2447.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[0.0, 324.0], [0.1, 327.0], [0.2, 328.0], [0.3, 329.0], [0.4, 330.0], [0.5, 330.0], [0.6, 331.0], [0.7, 331.0], [0.8, 331.0], [0.9, 331.0], [1.0, 331.0], [1.1, 331.0], [1.2, 332.0], [1.3, 332.0], [1.4, 332.0], [1.5, 332.0], [1.6, 332.0], [1.7, 332.0], [1.8, 332.0], [1.9, 332.0], [2.0, 333.0], [2.1, 333.0], [2.2, 333.0], [2.3, 333.0], [2.4, 333.0], [2.5, 333.0], [2.6, 333.0], [2.7, 333.0], [2.8, 333.0], [2.9, 333.0], [3.0, 333.0], [3.1, 334.0], [3.2, 334.0], [3.3, 334.0], [3.4, 334.0], [3.5, 334.0], [3.6, 334.0], [3.7, 334.0], [3.8, 334.0], [3.9, 334.0], [4.0, 334.0], [4.1, 334.0], [4.2, 334.0], [4.3, 334.0], [4.4, 334.0], [4.5, 334.0], [4.6, 334.0], [4.7, 334.0], [4.8, 334.0], [4.9, 335.0], [5.0, 335.0], [5.1, 335.0], [5.2, 335.0], [5.3, 335.0], [5.4, 335.0], [5.5, 335.0], [5.6, 335.0], [5.7, 335.0], [5.8, 335.0], [5.9, 335.0], [6.0, 335.0], [6.1, 335.0], [6.2, 335.0], [6.3, 335.0], [6.4, 335.0], [6.5, 335.0], [6.6, 335.0], [6.7, 335.0], [6.8, 335.0], [6.9, 335.0], [7.0, 335.0], [7.1, 335.0], [7.2, 335.0], [7.3, 335.0], [7.4, 335.0], [7.5, 335.0], [7.6, 335.0], [7.7, 335.0], [7.8, 335.0], [7.9, 335.0], [8.0, 336.0], [8.1, 336.0], [8.2, 336.0], [8.3, 336.0], [8.4, 336.0], [8.5, 336.0], [8.6, 336.0], [8.7, 336.0], [8.8, 336.0], [8.9, 336.0], [9.0, 336.0], [9.1, 336.0], [9.2, 336.0], [9.3, 336.0], [9.4, 336.0], [9.5, 336.0], [9.6, 336.0], [9.7, 336.0], [9.8, 336.0], [9.9, 336.0], [10.0, 336.0], [10.1, 336.0], [10.2, 336.0], [10.3, 336.0], [10.4, 336.0], [10.5, 336.0], [10.6, 336.0], [10.7, 336.0], [10.8, 336.0], [10.9, 336.0], [11.0, 336.0], [11.1, 336.0], [11.2, 336.0], [11.3, 336.0], [11.4, 336.0], [11.5, 336.0], [11.6, 336.0], [11.7, 336.0], [11.8, 336.0], [11.9, 336.0], [12.0, 336.0], [12.1, 336.0], [12.2, 336.0], [12.3, 336.0], [12.4, 336.0], [12.5, 336.0], [12.6, 336.0], [12.7, 336.0], [12.8, 336.0], [12.9, 336.0], [13.0, 336.0], [13.1, 337.0], [13.2, 337.0], [13.3, 337.0], [13.4, 337.0], [13.5, 337.0], [13.6, 337.0], [13.7, 337.0], [13.8, 337.0], [13.9, 337.0], [14.0, 337.0], [14.1, 337.0], [14.2, 337.0], [14.3, 337.0], [14.4, 337.0], [14.5, 337.0], [14.6, 337.0], [14.7, 337.0], [14.8, 337.0], [14.9, 337.0], [15.0, 337.0], [15.1, 337.0], [15.2, 337.0], [15.3, 337.0], [15.4, 337.0], [15.5, 337.0], [15.6, 337.0], [15.7, 337.0], [15.8, 337.0], [15.9, 337.0], [16.0, 337.0], [16.1, 337.0], [16.2, 337.0], [16.3, 337.0], [16.4, 337.0], [16.5, 337.0], [16.6, 337.0], [16.7, 337.0], [16.8, 337.0], [16.9, 337.0], [17.0, 337.0], [17.1, 337.0], [17.2, 337.0], [17.3, 337.0], [17.4, 337.0], [17.5, 337.0], [17.6, 337.0], [17.7, 337.0], [17.8, 337.0], [17.9, 337.0], [18.0, 337.0], [18.1, 337.0], [18.2, 337.0], [18.3, 337.0], [18.4, 337.0], [18.5, 337.0], [18.6, 337.0], [18.7, 337.0], [18.8, 337.0], [18.9, 338.0], [19.0, 338.0], [19.1, 338.0], [19.2, 338.0], [19.3, 338.0], [19.4, 338.0], [19.5, 338.0], [19.6, 338.0], [19.7, 338.0], [19.8, 338.0], [19.9, 338.0], [20.0, 338.0], [20.1, 338.0], [20.2, 338.0], [20.3, 338.0], [20.4, 338.0], [20.5, 338.0], [20.6, 338.0], [20.7, 338.0], [20.8, 338.0], [20.9, 338.0], [21.0, 338.0], [21.1, 338.0], [21.2, 338.0], [21.3, 338.0], [21.4, 338.0], [21.5, 338.0], [21.6, 338.0], [21.7, 338.0], [21.8, 338.0], [21.9, 338.0], [22.0, 338.0], [22.1, 338.0], [22.2, 338.0], [22.3, 338.0], [22.4, 338.0], [22.5, 338.0], [22.6, 338.0], [22.7, 338.0], [22.8, 338.0], [22.9, 338.0], [23.0, 338.0], [23.1, 338.0], [23.2, 338.0], [23.3, 338.0], [23.4, 338.0], [23.5, 338.0], [23.6, 338.0], [23.7, 338.0], [23.8, 338.0], [23.9, 338.0], [24.0, 338.0], [24.1, 338.0], [24.2, 338.0], [24.3, 338.0], [24.4, 338.0], [24.5, 338.0], [24.6, 338.0], [24.7, 338.0], [24.8, 338.0], [24.9, 338.0], [25.0, 338.0], [25.1, 338.0], [25.2, 338.0], [25.3, 338.0], [25.4, 338.0], [25.5, 338.0], [25.6, 339.0], [25.7, 339.0], [25.8, 339.0], [25.9, 339.0], [26.0, 339.0], [26.1, 339.0], [26.2, 339.0], [26.3, 339.0], [26.4, 339.0], [26.5, 339.0], [26.6, 339.0], [26.7, 339.0], [26.8, 339.0], [26.9, 339.0], [27.0, 339.0], [27.1, 339.0], [27.2, 339.0], [27.3, 339.0], [27.4, 339.0], [27.5, 339.0], [27.6, 339.0], [27.7, 339.0], [27.8, 339.0], [27.9, 339.0], [28.0, 339.0], [28.1, 339.0], [28.2, 339.0], [28.3, 339.0], [28.4, 339.0], [28.5, 339.0], [28.6, 339.0], [28.7, 339.0], [28.8, 339.0], [28.9, 339.0], [29.0, 339.0], [29.1, 339.0], [29.2, 339.0], [29.3, 339.0], [29.4, 339.0], [29.5, 339.0], [29.6, 339.0], [29.7, 339.0], [29.8, 339.0], [29.9, 339.0], [30.0, 339.0], [30.1, 339.0], [30.2, 339.0], [30.3, 339.0], [30.4, 339.0], [30.5, 339.0], [30.6, 339.0], [30.7, 339.0], [30.8, 339.0], [30.9, 339.0], [31.0, 339.0], [31.1, 339.0], [31.2, 339.0], [31.3, 339.0], [31.4, 339.0], [31.5, 339.0], [31.6, 339.0], [31.7, 339.0], [31.8, 339.0], [31.9, 339.0], [32.0, 339.0], [32.1, 339.0], [32.2, 339.0], [32.3, 339.0], [32.4, 339.0], [32.5, 339.0], [32.6, 339.0], [32.7, 339.0], [32.8, 339.0], [32.9, 339.0], [33.0, 339.0], [33.1, 339.0], [33.2, 339.0], [33.3, 339.0], [33.4, 339.0], [33.5, 339.0], [33.6, 339.0], [33.7, 340.0], [33.8, 340.0], [33.9, 340.0], [34.0, 340.0], [34.1, 340.0], [34.2, 340.0], [34.3, 340.0], [34.4, 340.0], [34.5, 340.0], [34.6, 340.0], [34.7, 340.0], [34.8, 340.0], [34.9, 340.0], [35.0, 340.0], [35.1, 340.0], [35.2, 340.0], [35.3, 340.0], [35.4, 340.0], [35.5, 340.0], [35.6, 340.0], [35.7, 340.0], [35.8, 340.0], [35.9, 340.0], [36.0, 340.0], [36.1, 340.0], [36.2, 340.0], [36.3, 340.0], [36.4, 340.0], [36.5, 340.0], [36.6, 340.0], [36.7, 340.0], [36.8, 340.0], [36.9, 340.0], [37.0, 340.0], [37.1, 340.0], [37.2, 340.0], [37.3, 340.0], [37.4, 340.0], [37.5, 340.0], [37.6, 340.0], [37.7, 340.0], [37.8, 340.0], [37.9, 340.0], [38.0, 340.0], [38.1, 340.0], [38.2, 340.0], [38.3, 340.0], [38.4, 340.0], [38.5, 340.0], [38.6, 340.0], [38.7, 340.0], [38.8, 340.0], [38.9, 340.0], [39.0, 340.0], [39.1, 340.0], [39.2, 340.0], [39.3, 340.0], [39.4, 340.0], [39.5, 340.0], [39.6, 340.0], [39.7, 340.0], [39.8, 340.0], [39.9, 340.0], [40.0, 340.0], [40.1, 340.0], [40.2, 340.0], [40.3, 340.0], [40.4, 340.0], [40.5, 340.0], [40.6, 340.0], [40.7, 340.0], [40.8, 340.0], [40.9, 340.0], [41.0, 340.0], [41.1, 340.0], [41.2, 340.0], [41.3, 340.0], [41.4, 340.0], [41.5, 340.0], [41.6, 340.0], [41.7, 341.0], [41.8, 341.0], [41.9, 341.0], [42.0, 341.0], [42.1, 341.0], [42.2, 341.0], [42.3, 341.0], [42.4, 341.0], [42.5, 341.0], [42.6, 341.0], [42.7, 341.0], [42.8, 341.0], [42.9, 341.0], [43.0, 341.0], [43.1, 341.0], [43.2, 341.0], [43.3, 341.0], [43.4, 341.0], [43.5, 341.0], [43.6, 341.0], [43.7, 341.0], [43.8, 341.0], [43.9, 341.0], [44.0, 341.0], [44.1, 341.0], [44.2, 341.0], [44.3, 341.0], [44.4, 341.0], [44.5, 341.0], [44.6, 341.0], [44.7, 341.0], [44.8, 341.0], [44.9, 341.0], [45.0, 341.0], [45.1, 341.0], [45.2, 341.0], [45.3, 341.0], [45.4, 341.0], [45.5, 341.0], [45.6, 341.0], [45.7, 341.0], [45.8, 341.0], [45.9, 341.0], [46.0, 341.0], [46.1, 341.0], [46.2, 341.0], [46.3, 341.0], [46.4, 341.0], [46.5, 341.0], [46.6, 341.0], [46.7, 341.0], [46.8, 341.0], [46.9, 341.0], [47.0, 341.0], [47.1, 341.0], [47.2, 341.0], [47.3, 341.0], [47.4, 341.0], [47.5, 341.0], [47.6, 341.0], [47.7, 341.0], [47.8, 341.0], [47.9, 341.0], [48.0, 341.0], [48.1, 341.0], [48.2, 341.0], [48.3, 341.0], [48.4, 341.0], [48.5, 341.0], [48.6, 341.0], [48.7, 341.0], [48.8, 341.0], [48.9, 341.0], [49.0, 341.0], [49.1, 341.0], [49.2, 341.0], [49.3, 341.0], [49.4, 341.0], [49.5, 341.0], [49.6, 341.0], [49.7, 341.0], [49.8, 341.0], [49.9, 341.0], [50.0, 341.0], [50.1, 341.0], [50.2, 341.0], [50.3, 342.0], [50.4, 342.0], [50.5, 342.0], [50.6, 342.0], [50.7, 342.0], [50.8, 342.0], [50.9, 342.0], [51.0, 342.0], [51.1, 342.0], [51.2, 342.0], [51.3, 342.0], [51.4, 342.0], [51.5, 342.0], [51.6, 342.0], [51.7, 342.0], [51.8, 342.0], [51.9, 342.0], [52.0, 342.0], [52.1, 342.0], [52.2, 342.0], [52.3, 342.0], [52.4, 342.0], [52.5, 342.0], [52.6, 342.0], [52.7, 342.0], [52.8, 342.0], [52.9, 342.0], [53.0, 342.0], [53.1, 342.0], [53.2, 342.0], [53.3, 342.0], [53.4, 342.0], [53.5, 342.0], [53.6, 342.0], [53.7, 342.0], [53.8, 342.0], [53.9, 342.0], [54.0, 342.0], [54.1, 342.0], [54.2, 342.0], [54.3, 342.0], [54.4, 342.0], [54.5, 342.0], [54.6, 342.0], [54.7, 342.0], [54.8, 342.0], [54.9, 342.0], [55.0, 342.0], [55.1, 342.0], [55.2, 342.0], [55.3, 342.0], [55.4, 342.0], [55.5, 342.0], [55.6, 342.0], [55.7, 342.0], [55.8, 342.0], [55.9, 342.0], [56.0, 342.0], [56.1, 342.0], [56.2, 342.0], [56.3, 342.0], [56.4, 342.0], [56.5, 342.0], [56.6, 342.0], [56.7, 342.0], [56.8, 342.0], [56.9, 342.0], [57.0, 342.0], [57.1, 342.0], [57.2, 342.0], [57.3, 342.0], [57.4, 342.0], [57.5, 342.0], [57.6, 342.0], [57.7, 342.0], [57.8, 342.0], [57.9, 342.0], [58.0, 342.0], [58.1, 342.0], [58.2, 342.0], [58.3, 342.0], [58.4, 342.0], [58.5, 342.0], [58.6, 343.0], [58.7, 343.0], [58.8, 343.0], [58.9, 343.0], [59.0, 343.0], [59.1, 343.0], [59.2, 343.0], [59.3, 343.0], [59.4, 343.0], [59.5, 343.0], [59.6, 343.0], [59.7, 343.0], [59.8, 343.0], [59.9, 343.0], [60.0, 343.0], [60.1, 343.0], [60.2, 343.0], [60.3, 343.0], [60.4, 343.0], [60.5, 343.0], [60.6, 343.0], [60.7, 343.0], [60.8, 343.0], [60.9, 343.0], [61.0, 343.0], [61.1, 343.0], [61.2, 343.0], [61.3, 343.0], [61.4, 343.0], [61.5, 343.0], [61.6, 343.0], [61.7, 343.0], [61.8, 343.0], [61.9, 343.0], [62.0, 343.0], [62.1, 343.0], [62.2, 343.0], [62.3, 343.0], [62.4, 343.0], [62.5, 343.0], [62.6, 343.0], [62.7, 343.0], [62.8, 343.0], [62.9, 343.0], [63.0, 343.0], [63.1, 343.0], [63.2, 343.0], [63.3, 343.0], [63.4, 343.0], [63.5, 343.0], [63.6, 343.0], [63.7, 343.0], [63.8, 343.0], [63.9, 343.0], [64.0, 343.0], [64.1, 343.0], [64.2, 343.0], [64.3, 343.0], [64.4, 343.0], [64.5, 343.0], [64.6, 343.0], [64.7, 343.0], [64.8, 343.0], [64.9, 343.0], [65.0, 343.0], [65.1, 343.0], [65.2, 343.0], [65.3, 343.0], [65.4, 343.0], [65.5, 343.0], [65.6, 343.0], [65.7, 343.0], [65.8, 343.0], [65.9, 343.0], [66.0, 343.0], [66.1, 343.0], [66.2, 343.0], [66.3, 344.0], [66.4, 344.0], [66.5, 344.0], [66.6, 344.0], [66.7, 344.0], [66.8, 344.0], [66.9, 344.0], [67.0, 344.0], [67.1, 344.0], [67.2, 344.0], [67.3, 344.0], [67.4, 344.0], [67.5, 344.0], [67.6, 344.0], [67.7, 344.0], [67.8, 344.0], [67.9, 344.0], [68.0, 344.0], [68.1, 344.0], [68.2, 344.0], [68.3, 344.0], [68.4, 344.0], [68.5, 344.0], [68.6, 344.0], [68.7, 344.0], [68.8, 344.0], [68.9, 344.0], [69.0, 344.0], [69.1, 344.0], [69.2, 344.0], [69.3, 344.0], [69.4, 344.0], [69.5, 344.0], [69.6, 344.0], [69.7, 344.0], [69.8, 344.0], [69.9, 344.0], [70.0, 344.0], [70.1, 344.0], [70.2, 344.0], [70.3, 344.0], [70.4, 344.0], [70.5, 344.0], [70.6, 344.0], [70.7, 344.0], [70.8, 344.0], [70.9, 344.0], [71.0, 344.0], [71.1, 344.0], [71.2, 344.0], [71.3, 344.0], [71.4, 344.0], [71.5, 344.0], [71.6, 344.0], [71.7, 344.0], [71.8, 344.0], [71.9, 344.0], [72.0, 344.0], [72.1, 344.0], [72.2, 344.0], [72.3, 344.0], [72.4, 344.0], [72.5, 344.0], [72.6, 344.0], [72.7, 344.0], [72.8, 344.0], [72.9, 344.0], [73.0, 344.0], [73.1, 344.0], [73.2, 344.0], [73.3, 344.0], [73.4, 344.0], [73.5, 344.0], [73.6, 344.0], [73.7, 345.0], [73.8, 345.0], [73.9, 345.0], [74.0, 345.0], [74.1, 345.0], [74.2, 345.0], [74.3, 345.0], [74.4, 345.0], [74.5, 345.0], [74.6, 345.0], [74.7, 345.0], [74.8, 345.0], [74.9, 345.0], [75.0, 345.0], [75.1, 345.0], [75.2, 345.0], [75.3, 345.0], [75.4, 345.0], [75.5, 345.0], [75.6, 345.0], [75.7, 345.0], [75.8, 345.0], [75.9, 345.0], [76.0, 345.0], [76.1, 345.0], [76.2, 345.0], [76.3, 345.0], [76.4, 345.0], [76.5, 345.0], [76.6, 345.0], [76.7, 345.0], [76.8, 345.0], [76.9, 345.0], [77.0, 345.0], [77.1, 345.0], [77.2, 345.0], [77.3, 345.0], [77.4, 345.0], [77.5, 345.0], [77.6, 345.0], [77.7, 345.0], [77.8, 345.0], [77.9, 345.0], [78.0, 345.0], [78.1, 345.0], [78.2, 345.0], [78.3, 345.0], [78.4, 345.0], [78.5, 345.0], [78.6, 345.0], [78.7, 345.0], [78.8, 345.0], [78.9, 345.0], [79.0, 345.0], [79.1, 345.0], [79.2, 345.0], [79.3, 345.0], [79.4, 345.0], [79.5, 345.0], [79.6, 345.0], [79.7, 345.0], [79.8, 345.0], [79.9, 345.0], [80.0, 346.0], [80.1, 346.0], [80.2, 346.0], [80.3, 346.0], [80.4, 346.0], [80.5, 346.0], [80.6, 346.0], [80.7, 346.0], [80.8, 346.0], [80.9, 346.0], [81.0, 346.0], [81.1, 346.0], [81.2, 346.0], [81.3, 346.0], [81.4, 346.0], [81.5, 346.0], [81.6, 346.0], [81.7, 346.0], [81.8, 346.0], [81.9, 346.0], [82.0, 346.0], [82.1, 346.0], [82.2, 346.0], [82.3, 346.0], [82.4, 346.0], [82.5, 346.0], [82.6, 346.0], [82.7, 346.0], [82.8, 346.0], [82.9, 346.0], [83.0, 346.0], [83.1, 346.0], [83.2, 346.0], [83.3, 346.0], [83.4, 346.0], [83.5, 346.0], [83.6, 346.0], [83.7, 346.0], [83.8, 346.0], [83.9, 346.0], [84.0, 346.0], [84.1, 346.0], [84.2, 346.0], [84.3, 346.0], [84.4, 346.0], [84.5, 346.0], [84.6, 346.0], [84.7, 346.0], [84.8, 346.0], [84.9, 346.0], [85.0, 346.0], [85.1, 346.0], [85.2, 346.0], [85.3, 346.0], [85.4, 347.0], [85.5, 347.0], [85.6, 347.0], [85.7, 347.0], [85.8, 347.0], [85.9, 347.0], [86.0, 347.0], [86.1, 347.0], [86.2, 347.0], [86.3, 347.0], [86.4, 347.0], [86.5, 347.0], [86.6, 347.0], [86.7, 347.0], [86.8, 347.0], [86.9, 347.0], [87.0, 347.0], [87.1, 347.0], [87.2, 347.0], [87.3, 347.0], [87.4, 347.0], [87.5, 347.0], [87.6, 347.0], [87.7, 347.0], [87.8, 347.0], [87.9, 347.0], [88.0, 347.0], [88.1, 347.0], [88.2, 347.0], [88.3, 347.0], [88.4, 347.0], [88.5, 347.0], [88.6, 347.0], [88.7, 347.0], [88.8, 347.0], [88.9, 347.0], [89.0, 347.0], [89.1, 347.0], [89.2, 347.0], [89.3, 347.0], [89.4, 347.0], [89.5, 347.0], [89.6, 348.0], [89.7, 348.0], [89.8, 348.0], [89.9, 348.0], [90.0, 348.0], [90.1, 348.0], [90.2, 348.0], [90.3, 348.0], [90.4, 348.0], [90.5, 348.0], [90.6, 348.0], [90.7, 348.0], [90.8, 348.0], [90.9, 348.0], [91.0, 348.0], [91.1, 348.0], [91.2, 348.0], [91.3, 348.0], [91.4, 348.0], [91.5, 348.0], [91.6, 348.0], [91.7, 348.0], [91.8, 348.0], [91.9, 348.0], [92.0, 348.0], [92.1, 348.0], [92.2, 348.0], [92.3, 348.0], [92.4, 348.0], [92.5, 348.0], [92.6, 348.0], [92.7, 348.0], [92.8, 348.0], [92.9, 348.0], [93.0, 349.0], [93.1, 349.0], [93.2, 349.0], [93.3, 349.0], [93.4, 349.0], [93.5, 349.0], [93.6, 349.0], [93.7, 349.0], [93.8, 349.0], [93.9, 349.0], [94.0, 349.0], [94.1, 349.0], [94.2, 349.0], [94.3, 349.0], [94.4, 349.0], [94.5, 349.0], [94.6, 349.0], [94.7, 349.0], [94.8, 349.0], [94.9, 349.0], [95.0, 349.0], [95.1, 349.0], [95.2, 349.0], [95.3, 349.0], [95.4, 350.0], [95.5, 350.0], [95.6, 350.0], [95.7, 350.0], [95.8, 350.0], [95.9, 350.0], [96.0, 350.0], [96.1, 350.0], [96.2, 350.0], [96.3, 350.0], [96.4, 350.0], [96.5, 350.0], [96.6, 350.0], [96.7, 350.0], [96.8, 350.0], [96.9, 350.0], [97.0, 351.0], [97.1, 351.0], [97.2, 351.0], [97.3, 351.0], [97.4, 351.0], [97.5, 351.0], [97.6, 351.0], [97.7, 351.0], [97.8, 351.0], [97.9, 351.0], [98.0, 351.0], [98.1, 352.0], [98.2, 352.0], [98.3, 352.0], [98.4, 352.0], [98.5, 352.0], [98.6, 352.0], [98.7, 352.0], [98.8, 352.0], [98.9, 353.0], [99.0, 353.0], [99.1, 353.0], [99.2, 354.0], [99.3, 354.0], [99.4, 355.0], [99.5, 355.0], [99.6, 356.0], [99.7, 358.0], [99.8, 359.0], [99.9, 361.0], [100.0, 4471.0]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 9998.0, "series": [{"data": [[600.0, 783.0], [2400.0, 1.0], [700.0, 490.0], [200.0, 2047.0], [800.0, 345.0], [900.0, 229.0], [1000.0, 147.0], [1100.0, 76.0], [300.0, 2063.0], [1200.0, 48.0], [1300.0, 24.0], [1400.0, 16.0], [1500.0, 12.0], [400.0, 1621.0], [100.0, 937.0], [1600.0, 4.0], [1700.0, 1.0], [1800.0, 2.0], [1900.0, 2.0], [500.0, 1151.0], [2000.0, 1.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[4400.0, 1.0], [300.0, 9998.0], [400.0, 1.0]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 24.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 16682.0, "series": [{"data": [[0.0, 16682.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3294.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 24.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.74592794E12, "maxY": 1.0, "series": [{"data": [[1.74593154E12, 1.0], [1.74593478E12, 1.0], [1.74592812E12, 1.0], [1.74593376E12, 1.0], [1.74592932E12, 1.0], [1.74593256E12, 1.0], [1.74593034E12, 1.0], [1.74593358E12, 1.0], [1.7459358E12, 1.0], [1.74593136E12, 1.0], [1.7459346E12, 1.0], [1.74592794E12, 1.0], [1.74593238E12, 1.0], [1.74593016E12, 1.0], [1.74592914E12, 1.0], [1.74593118E12, 1.0], [1.7459334E12, 1.0], [1.74593562E12, 1.0], [1.74593088E12, 1.0], [1.74593412E12, 1.0], [1.7459319E12, 1.0], [1.74592968E12, 1.0], [1.74592866E12, 1.0], [1.7459307E12, 1.0], [1.74593292E12, 1.0], [1.74593514E12, 1.0], [1.7459283E12, 1.0], [1.7459295E12, 1.0], [1.74593172E12, 1.0], [1.74593394E12, 1.0], [1.74593274E12, 1.0], [1.74593052E12, 1.0], [1.74593496E12, 1.0], [1.74592848E12, 1.0], [1.74593346E12, 1.0], [1.74593124E12, 1.0], [1.74593568E12, 1.0], [1.74592902E12, 1.0], [1.74593226E12, 1.0], [1.7459355E12, 1.0], [1.74593004E12, 1.0], [1.74593448E12, 1.0], [1.745928E12, 1.0], [1.74593106E12, 1.0], [1.74593328E12, 1.0], [1.7459343E12, 1.0], [1.74593532E12, 1.0], [1.74592884E12, 1.0], [1.74592986E12, 1.0], [1.74593208E12, 1.0], [1.7459331E12, 1.0], [1.74593058E12, 1.0], [1.7459328E12, 1.0], [1.74593382E12, 1.0], [1.74593484E12, 1.0], [1.74592836E12, 1.0], [1.74592938E12, 1.0], [1.7459316E12, 1.0], [1.74593262E12, 1.0], [1.7459304E12, 1.0], [1.74593364E12, 1.0], [1.74593586E12, 1.0], [1.7459292E12, 1.0], [1.74593142E12, 1.0], [1.74592818E12, 1.0], [1.74593466E12, 1.0], [1.74593022E12, 1.0], [1.74593244E12, 1.0], [1.74592992E12, 1.0], [1.74592872E12, 1.0], [1.74593094E12, 1.0], [1.74593316E12, 1.0], [1.74593538E12, 1.0], [1.74592974E12, 1.0], [1.74593196E12, 1.0], [1.74593418E12, 1.0], [1.74593298E12, 1.0], [1.74593076E12, 1.0], [1.7459352E12, 1.0], [1.74592854E12, 1.0], [1.74593178E12, 1.0], [1.74593502E12, 1.0], [1.74592956E12, 1.0], [1.745934E12, 1.0], [1.7459325E12, 1.0], [1.74593574E12, 1.0], [1.74592908E12, 1.0], [1.74593472E12, 1.0], [1.74593028E12, 1.0], [1.74592806E12, 1.0], [1.7459313E12, 1.0], [1.74593352E12, 1.0], [1.74593454E12, 1.0], [1.74593556E12, 1.0], [1.7459301E12, 1.0], [1.74593232E12, 1.0], [1.7459289E12, 1.0], [1.74593334E12, 1.0], [1.74593112E12, 1.0], [1.74593436E12, 1.0], [1.74593214E12, 1.0], [1.74593508E12, 1.0], [1.74592962E12, 1.0], [1.74593184E12, 1.0], [1.74592842E12, 1.0], [1.74593286E12, 1.0], [1.74593064E12, 1.0], [1.74593388E12, 1.0], [1.74593166E12, 1.0], [1.74592926E12, 1.0], [1.74592944E12, 1.0], [1.74593046E12, 1.0], [1.74593268E12, 1.0], [1.7459349E12, 1.0], [1.74592824E12, 1.0], [1.74593148E12, 1.0], [1.7459337E12, 1.0], [1.74592878E12, 1.0], [1.74592998E12, 1.0], [1.7459322E12, 1.0], [1.74593442E12, 1.0], [1.74593322E12, 1.0], [1.745931E12, 1.0], [1.74593544E12, 1.0], [1.74592896E12, 1.0], [1.74593202E12, 1.0], [1.7459286E12, 1.0], [1.74593526E12, 1.0], [1.7459298E12, 1.0], [1.74593424E12, 1.0], [1.74593082E12, 1.0], [1.74593304E12, 1.0], [1.74593406E12, 1.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74593586E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 342.06240000000014, "minX": 1.0, "maxY": 451.5983000000001, "series": [{"data": [[1.0, 451.5983000000001]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.0, 451.5983000000001]], "isOverall": false, "label": "Create CSR-Aggregated", "isController": false}, {"data": [[1.0, 342.06240000000014]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}, {"data": [[1.0, 342.06240000000014]], "isOverall": false, "label": "HTTP Request - enroll-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1362.3666666666666, "minX": 1.74592794E12, "maxY": 12363.2, "series": [{"data": [[1.74593154E12, 11774.483333333334], [1.74593478E12, 11795.7], [1.74592812E12, 10597.066666666668], [1.74593376E12, 11017.4], [1.74592932E12, 11185.783333333333], [1.74593256E12, 10744.216666666667], [1.74593034E12, 11333.0], [1.74593358E12, 11185.783333333333], [1.7459358E12, 11458.983333333334], [1.74593136E12, 11480.133333333333], [1.7459346E12, 11206.95], [1.74592794E12, 6770.333333333333], [1.74593238E12, 11354.033333333333], [1.74593016E12, 10870.333333333334], [1.74592914E12, 11627.3], [1.74593118E12, 11480.133333333333], [1.7459334E12, 11185.833333333334], [1.74593562E12, 11164.616666666667], [1.74593088E12, 11606.133333333333], [1.74593412E12, 11332.95], [1.7459319E12, 10891.383333333333], [1.74592968E12, 11164.6], [1.74592866E12, 11185.816666666668], [1.7459307E12, 12090.066666666668], [1.74593292E12, 10891.466666666667], [1.74593514E12, 11164.6], [1.7459283E12, 11017.5], [1.7459295E12, 11185.75], [1.74593172E12, 10870.283333333333], [1.74593394E12, 10891.416666666666], [1.74593274E12, 11017.45], [1.74593052E12, 11606.216666666667], [1.74593496E12, 11038.616666666667], [1.74592848E12, 10765.35], [1.74593346E12, 10912.633333333333], [1.74593124E12, 11480.1], [1.74593568E12, 10597.083333333334], [1.74592902E12, 11185.75], [1.74593226E12, 11185.75], [1.7459355E12, 10891.416666666666], [1.74593004E12, 11206.883333333333], [1.74593448E12, 10765.3], [1.745928E12, 11038.483333333334], [1.74593106E12, 11206.9], [1.74593328E12, 11017.35], [1.7459343E12, 11501.283333333333], [1.74593532E12, 11185.716666666667], [1.74592884E12, 11480.15], [1.74592986E12, 10891.433333333332], [1.74593208E12, 11206.95], [1.7459331E12, 10891.366666666667], [1.74593058E12, 11206.916666666666], [1.7459328E12, 11185.75], [1.74593382E12, 10618.166666666666], [1.74593484E12, 11606.083333333334], [1.74592836E12, 10744.25], [1.74592938E12, 11038.55], [1.7459316E12, 12047.766666666666], [1.74593262E12, 12363.2], [1.7459304E12, 11185.8], [1.74593364E12, 11038.566666666668], [1.74593586E12, 8095.0], [1.7459292E12, 11606.166666666666], [1.74593142E12, 10744.183333333332], [1.74592818E12, 11332.933333333332], [1.74593466E12, 11332.966666666667], [1.74593022E12, 11332.983333333334], [1.74593244E12, 10723.116666666667], [1.74592992E12, 10597.05], [1.74592872E12, 11606.116666666667], [1.74593094E12, 11038.583333333334], [1.74593316E12, 11185.816666666668], [1.74593538E12, 11038.55], [1.74592974E12, 11059.733333333334], [1.74593196E12, 10891.433333333332], [1.74593418E12, 10744.2], [1.74593298E12, 11627.333333333334], [1.74593076E12, 10723.116666666667], [1.7459352E12, 10891.483333333334], [1.74592854E12, 11185.766666666666], [1.74593178E12, 10744.283333333333], [1.74593502E12, 10618.233333333334], [1.74592956E12, 11038.466666666667], [1.745934E12, 10449.866666666667], [1.7459325E12, 11038.616666666667], [1.74593574E12, 11648.433333333332], [1.74592908E12, 11354.166666666666], [1.74593472E12, 10723.033333333333], [1.74593028E12, 10891.483333333334], [1.74592806E12, 10323.766666666666], [1.7459313E12, 11185.733333333334], [1.74593352E12, 10870.216666666667], [1.74593454E12, 10428.783333333333], [1.74593556E12, 11059.766666666666], [1.7459301E12, 11038.55], [1.74593232E12, 11185.8], [1.7459289E12, 11332.9], [1.74593334E12, 11038.633333333333], [1.74593112E12, 10575.883333333333], [1.74593436E12, 11164.683333333332], [1.74593214E12, 10870.333333333334], [1.74593508E12, 10891.483333333334], [1.74592962E12, 11059.716666666667], [1.74593184E12, 12068.766666666666], [1.74592842E12, 11480.1], [1.74593286E12, 11059.683333333332], [1.74593064E12, 11458.85], [1.74593388E12, 10575.966666666667], [1.74593166E12, 11059.8], [1.74592926E12, 10302.65], [1.74592944E12, 10744.233333333334], [1.74593046E12, 10765.433333333332], [1.74593268E12, 11501.383333333333], [1.7459349E12, 11332.866666666667], [1.74592824E12, 10597.083333333334], [1.74593148E12, 11059.733333333334], [1.7459337E12, 10912.616666666667], [1.74592878E12, 11921.666666666666], [1.74592998E12, 11480.1], [1.7459322E12, 11332.916666666666], [1.74593442E12, 10597.0], [1.74593322E12, 10891.383333333333], [1.745931E12, 11332.966666666667], [1.74593544E12, 10575.983333333334], [1.74592896E12, 11185.783333333333], [1.74593202E12, 11185.733333333334], [1.7459286E12, 11332.933333333332], [1.74593526E12, 10470.966666666667], [1.7459298E12, 11458.95], [1.74593424E12, 11038.566666666668], [1.74593082E12, 11354.083333333334], [1.74593304E12, 11038.633333333333], [1.74593406E12, 11774.45]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74593154E12, 2369.3333333333335], [1.74593478E12, 2369.3333333333335], [1.74592812E12, 2132.4], [1.74593376E12, 2221.25], [1.74592932E12, 2250.866666666667], [1.74593256E12, 2162.016666666667], [1.74593034E12, 2280.483333333333], [1.74593358E12, 2250.866666666667], [1.7459358E12, 2310.1], [1.74593136E12, 2310.1], [1.7459346E12, 2250.866666666667], [1.74592794E12, 1362.3666666666666], [1.74593238E12, 2280.483333333333], [1.74593016E12, 2191.633333333333], [1.74592914E12, 2339.7166666666667], [1.74593118E12, 2310.1], [1.7459334E12, 2250.866666666667], [1.74593562E12, 2250.866666666667], [1.74593088E12, 2339.7166666666667], [1.74593412E12, 2280.483333333333], [1.7459319E12, 2191.633333333333], [1.74592968E12, 2250.866666666667], [1.74592866E12, 2250.866666666667], [1.7459307E12, 2428.5666666666666], [1.74593292E12, 2191.633333333333], [1.74593514E12, 2250.866666666667], [1.7459283E12, 2221.25], [1.7459295E12, 2250.866666666667], [1.74593172E12, 2191.633333333333], [1.74593394E12, 2191.633333333333], [1.74593274E12, 2221.25], [1.74593052E12, 2339.7166666666667], [1.74593496E12, 2221.25], [1.74592848E12, 2162.016666666667], [1.74593346E12, 2191.633333333333], [1.74593124E12, 2310.1], [1.74593568E12, 2132.4], [1.74592902E12, 2250.866666666667], [1.74593226E12, 2250.866666666667], [1.7459355E12, 2191.633333333333], [1.74593004E12, 2250.866666666667], [1.74593448E12, 2162.016666666667], [1.745928E12, 2221.25], [1.74593106E12, 2250.866666666667], [1.74593328E12, 2221.25], [1.7459343E12, 2310.1], [1.74593532E12, 2250.866666666667], [1.74592884E12, 2310.1], [1.74592986E12, 2191.633333333333], [1.74593208E12, 2250.866666666667], [1.7459331E12, 2191.633333333333], [1.74593058E12, 2250.866666666667], [1.7459328E12, 2250.866666666667], [1.74593382E12, 2132.4], [1.74593484E12, 2339.7166666666667], [1.74592836E12, 2162.016666666667], [1.74592938E12, 2221.25], [1.7459316E12, 2428.5666666666666], [1.74593262E12, 2487.8], [1.7459304E12, 2250.866666666667], [1.74593364E12, 2221.25], [1.74593586E12, 1628.9166666666667], [1.7459292E12, 2339.7166666666667], [1.74593142E12, 2162.016666666667], [1.74592818E12, 2280.483333333333], [1.74593466E12, 2280.483333333333], [1.74593022E12, 2280.483333333333], [1.74593244E12, 2162.016666666667], [1.74592992E12, 2132.4], [1.74592872E12, 2339.7166666666667], [1.74593094E12, 2221.25], [1.74593316E12, 2250.866666666667], [1.74593538E12, 2221.25], [1.74592974E12, 2221.25], [1.74593196E12, 2191.633333333333], [1.74593418E12, 2162.016666666667], [1.74593298E12, 2339.7166666666667], [1.74593076E12, 2162.016666666667], [1.7459352E12, 2191.633333333333], [1.74592854E12, 2250.866666666667], [1.74593178E12, 2162.016666666667], [1.74593502E12, 2132.4], [1.74592956E12, 2221.25], [1.745934E12, 2102.7833333333333], [1.7459325E12, 2221.25], [1.74593574E12, 2339.7166666666667], [1.74592908E12, 2280.483333333333], [1.74593472E12, 2162.016666666667], [1.74593028E12, 2191.633333333333], [1.74592806E12, 2073.1666666666665], [1.7459313E12, 2250.866666666667], [1.74593352E12, 2191.633333333333], [1.74593454E12, 2102.7833333333333], [1.74593556E12, 2221.25], [1.7459301E12, 2221.25], [1.74593232E12, 2250.866666666667], [1.7459289E12, 2280.483333333333], [1.74593334E12, 2221.25], [1.74593112E12, 2132.4], [1.74593436E12, 2250.866666666667], [1.74593214E12, 2191.633333333333], [1.74593508E12, 2191.633333333333], [1.74592962E12, 2221.25], [1.74593184E12, 2428.5666666666666], [1.74592842E12, 2310.1], [1.74593286E12, 2221.25], [1.74593064E12, 2310.1], [1.74593388E12, 2132.4], [1.74593166E12, 2221.25], [1.74592926E12, 2073.1666666666665], [1.74592944E12, 2162.016666666667], [1.74593046E12, 2162.016666666667], [1.74593268E12, 2310.1], [1.7459349E12, 2280.483333333333], [1.74592824E12, 2132.4], [1.74593148E12, 2221.25], [1.7459337E12, 2191.633333333333], [1.74592878E12, 2398.95], [1.74592998E12, 2310.1], [1.7459322E12, 2280.483333333333], [1.74593442E12, 2132.4], [1.74593322E12, 2191.633333333333], [1.745931E12, 2280.483333333333], [1.74593544E12, 2132.4], [1.74592896E12, 2250.866666666667], [1.74593202E12, 2250.866666666667], [1.7459286E12, 2280.483333333333], [1.74593526E12, 2102.7833333333333], [1.7459298E12, 2310.1], [1.74593424E12, 2221.25], [1.74593082E12, 2280.483333333333], [1.74593304E12, 2221.25], [1.74593406E12, 2369.3333333333335]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74593586E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 334.5194805194805, "minX": 1.74592794E12, "maxY": 521.0142857142858, "series": [{"data": [[1.74593154E12, 407.4374999999999], [1.74593478E12, 400.55555555555566], [1.74592812E12, 491.3888888888889], [1.74593376E12, 443.0540540540541], [1.74592932E12, 447.6184210526316], [1.74593256E12, 478.1095890410959], [1.74593034E12, 439.7532467532467], [1.74593358E12, 448.828947368421], [1.7459358E12, 423.64935064935077], [1.74593136E12, 430.8333333333333], [1.7459346E12, 442.31168831168816], [1.74592794E12, 456.73913043478257], [1.74593238E12, 435.61538461538447], [1.74593016E12, 482.1095890410959], [1.74592914E12, 425.27848101265823], [1.74593118E12, 419.7692307692308], [1.7459334E12, 444.5789473684209], [1.74593562E12, 444.64000000000004], [1.74593088E12, 422.9871794871795], [1.74593412E12, 437.6623376623375], [1.7459319E12, 470.87837837837833], [1.74592968E12, 455.0533333333334], [1.74592866E12, 446.9473684210525], [1.7459307E12, 387.74698795180706], [1.74593292E12, 469.0540540540542], [1.74593514E12, 450.3466666666668], [1.7459283E12, 467.9459459459459], [1.7459295E12, 453.52631578947364], [1.74593172E12, 469.90410958904096], [1.74593394E12, 467.77027027027026], [1.74593274E12, 465.09459459459447], [1.74593052E12, 424.7435897435896], [1.74593496E12, 458.2000000000001], [1.74592848E12, 474.5810810810812], [1.74593346E12, 461.5066666666666], [1.74593124E12, 433.5384615384616], [1.74593568E12, 484.9027777777777], [1.74592902E12, 458.6842105263157], [1.74593226E12, 439.9473684210527], [1.7459355E12, 455.48648648648646], [1.74593004E12, 441.8051948051948], [1.74593448E12, 472.1486486486485], [1.745928E12, 450.7333333333334], [1.74593106E12, 444.61038961038946], [1.74593328E12, 458.89189189189193], [1.7459343E12, 419.1012658227848], [1.74593532E12, 443.5921052631578], [1.74592884E12, 424.7179487179488], [1.74592986E12, 463.027027027027], [1.74593208E12, 439.64935064935065], [1.7459331E12, 466.1351351351351], [1.74593058E12, 443.76623376623365], [1.7459328E12, 440.8815789473684], [1.74593382E12, 503.4931506849315], [1.74593484E12, 418.974358974359], [1.74592836E12, 476.67123287671234], [1.74592938E12, 462.2533333333334], [1.7459316E12, 395.9012345679012], [1.74593262E12, 368.16666666666663], [1.7459304E12, 450.75], [1.74593364E12, 457.85333333333335], [1.74593586E12, 447.1090909090907], [1.7459292E12, 425.294871794872], [1.74593142E12, 473.75342465753425], [1.74592818E12, 439.29870129870125], [1.74593466E12, 436.012987012987], [1.74593022E12, 435.6883116883117], [1.74593244E12, 481.00000000000006], [1.74592992E12, 502.97222222222223], [1.74592872E12, 422.2948717948718], [1.74593094E12, 465.38666666666677], [1.74593316E12, 447.1710526315789], [1.74593538E12, 454.65333333333336], [1.74592974E12, 456.5131578947369], [1.74593196E12, 467.554054054054], [1.74593418E12, 474.9589041095889], [1.74593298E12, 415.987341772152], [1.74593076E12, 485.3055555555555], [1.7459352E12, 459.16216216216225], [1.74592854E12, 451.1052631578946], [1.74593178E12, 485.83561643835617], [1.74593502E12, 479.19178082191775], [1.74592956E12, 457.73333333333335], [1.745934E12, 492.2253521126761], [1.7459325E12, 460.18666666666667], [1.74593574E12, 407.0999999999999], [1.74592908E12, 439.47435897435895], [1.74593472E12, 476.29166666666674], [1.74593028E12, 472.0405405405405], [1.74592806E12, 517.4225352112676], [1.7459313E12, 455.76315789473676], [1.74593352E12, 471.61643835616445], [1.74593454E12, 502.5428571428571], [1.74593556E12, 452.7236842105262], [1.7459301E12, 457.43999999999994], [1.74593232E12, 446.9736842105263], [1.7459289E12, 444.2727272727272], [1.74593334E12, 457.4400000000001], [1.74593112E12, 496.718309859155], [1.74593436E12, 443.62666666666667], [1.74593214E12, 478.0], [1.74593508E12, 462.5945945945946], [1.74592962E12, 456.5921052631579], [1.74593184E12, 386.15853658536605], [1.74592842E12, 432.65384615384625], [1.74593286E12, 450.5131578947367], [1.74593064E12, 431.5844155844156], [1.74593388E12, 496.09859154929575], [1.74593166E12, 454.4736842105262], [1.74592926E12, 521.0142857142858], [1.74592944E12, 481.4520547945205], [1.74593046E12, 475.28378378378363], [1.74593268E12, 429.84810126582266], [1.7459349E12, 431.36363636363643], [1.74592824E12, 488.73611111111086], [1.74593148E12, 456.93421052631584], [1.7459337E12, 455.44000000000005], [1.74592878E12, 404.8888888888888], [1.74592998E12, 430.05128205128204], [1.7459322E12, 437.1818181818183], [1.74593442E12, 492.9999999999998], [1.74593322E12, 464.94594594594605], [1.745931E12, 437.97402597402584], [1.74593544E12, 493.7183098591549], [1.74592896E12, 440.2894736842105], [1.74593202E12, 446.3684210526315], [1.7459286E12, 443.2337662337662], [1.74593526E12, 492.4166666666668], [1.7459298E12, 440.24675324675326], [1.74593424E12, 453.41333333333324], [1.74593082E12, 433.6538461538459], [1.74593304E12, 454.9733333333334], [1.74593406E12, 405.2375]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.74593154E12, 342.7125], [1.74593478E12, 346.23749999999995], [1.74592812E12, 339.4861111111112], [1.74593376E12, 345.4933333333334], [1.74592932E12, 339.1973684210526], [1.74593256E12, 340.7397260273972], [1.74593034E12, 338.87012987012986], [1.74593358E12, 342.67105263157913], [1.7459358E12, 345.96153846153845], [1.74593136E12, 339.2435897435898], [1.7459346E12, 345.9868421052633], [1.74592794E12, 433.60869565217394], [1.74593238E12, 342.1948051948052], [1.74593016E12, 338.62162162162167], [1.74592914E12, 335.4177215189873], [1.74593118E12, 340.75641025641033], [1.7459334E12, 345.1052631578947], [1.74593562E12, 347.17105263157885], [1.74593088E12, 340.5949367088607], [1.74593412E12, 345.3116883116883], [1.7459319E12, 342.77027027027026], [1.74592968E12, 338.1973684210526], [1.74592866E12, 339.4078947368421], [1.7459307E12, 341.2804878048781], [1.74593292E12, 342.9729729729729], [1.74593514E12, 345.23684210526324], [1.7459283E12, 339.36000000000007], [1.7459295E12, 336.7105263157895], [1.74593172E12, 339.4189189189189], [1.74593394E12, 342.90540540540536], [1.74593274E12, 341.56000000000006], [1.74593052E12, 338.7215189873417], [1.74593496E12, 345.14666666666665], [1.74592848E12, 339.3698630136986], [1.74593346E12, 345.2567567567566], [1.74593124E12, 340.3846153846153], [1.74593568E12, 346.30555555555554], [1.74592902E12, 338.7236842105262], [1.74593226E12, 342.55263157894734], [1.7459355E12, 346.9324324324325], [1.74593004E12, 340.9078947368423], [1.74593448E12, 343.05479452054794], [1.745928E12, 341.96000000000004], [1.74593106E12, 339.1710526315789], [1.74593328E12, 342.40000000000003], [1.7459343E12, 343.37179487179486], [1.74593532E12, 346.5394736842105], [1.74592884E12, 338.64102564102575], [1.74592986E12, 338.51351351351354], [1.74593208E12, 341.4342105263157], [1.7459331E12, 342.51351351351343], [1.74593058E12, 339.4078947368422], [1.7459328E12, 345.23684210526335], [1.74593382E12, 343.44444444444457], [1.74593484E12, 344.84810126582283], [1.74592836E12, 338.69863013698625], [1.74592938E12, 338.8400000000001], [1.7459316E12, 339.7439024390243], [1.74593262E12, 341.77380952380946], [1.7459304E12, 339.96052631578954], [1.74593364E12, 342.6533333333333], [1.74593586E12, 345.109090909091], [1.7459292E12, 337.02531645569627], [1.74593142E12, 339.97260273972614], [1.74592818E12, 339.2337662337664], [1.74593466E12, 344.961038961039], [1.74593022E12, 339.07792207792227], [1.74593244E12, 340.8082191780823], [1.74592992E12, 337.76388888888886], [1.74592872E12, 337.4303797468353], [1.74593094E12, 335.5466666666666], [1.74593316E12, 343.26315789473693], [1.74593538E12, 346.21333333333325], [1.74592974E12, 336.9866666666667], [1.74593196E12, 344.4324324324324], [1.74593418E12, 345.78082191780834], [1.74593298E12, 343.16455696202524], [1.74593076E12, 340.45205479452045], [1.7459352E12, 345.7162162162162], [1.74592854E12, 337.7631578947368], [1.74593178E12, 340.1643835616439], [1.74593502E12, 346.18055555555554], [1.74592956E12, 337.53333333333336], [1.745934E12, 345.30985915492965], [1.7459325E12, 343.2933333333334], [1.74593574E12, 347.10126582278474], [1.74592908E12, 334.5194805194805], [1.74593472E12, 347.1369863013699], [1.74593028E12, 338.4189189189189], [1.74592806E12, 338.8571428571429], [1.7459313E12, 338.72368421052647], [1.74593352E12, 341.51351351351354], [1.74593454E12, 343.60563380281695], [1.74593556E12, 348.0533333333333], [1.7459301E12, 338.84000000000003], [1.74593232E12, 343.82894736842104], [1.7459289E12, 339.54545454545456], [1.74593334E12, 343.77333333333326], [1.74593112E12, 339.73611111111114], [1.74593436E12, 345.1447368421053], [1.74593214E12, 340.6756756756755], [1.74593508E12, 346.4864864864865], [1.74592962E12, 339.24], [1.74593184E12, 341.65853658536605], [1.74592842E12, 337.80769230769215], [1.74593286E12, 343.94666666666666], [1.74593064E12, 341.33333333333354], [1.74593388E12, 342.625], [1.74593166E12, 340.0266666666666], [1.74592926E12, 336.3428571428571], [1.74592944E12, 337.8630136986303], [1.74593046E12, 339.3561643835615], [1.74593268E12, 338.2179487179488], [1.7459349E12, 346.11688311688306], [1.74592824E12, 340.43055555555566], [1.74593148E12, 341.2933333333335], [1.7459337E12, 345.8513513513515], [1.74592878E12, 338.27160493827176], [1.74592998E12, 338.1666666666667], [1.7459322E12, 341.99999999999994], [1.74593442E12, 344.6527777777779], [1.74593322E12, 343.7027027027027], [1.745931E12, 339.1818181818183], [1.74593544E12, 346.8888888888888], [1.74592896E12, 338.27631578947364], [1.74593202E12, 341.9342105263159], [1.7459286E12, 337.4285714285712], [1.74593526E12, 348.42253521126753], [1.7459298E12, 336.93589743589735], [1.74593424E12, 346.64000000000004], [1.74593082E12, 338.9090909090908], [1.74593304E12, 344.50666666666666], [1.74593406E12, 344.12499999999994]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74593586E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74592794E12, "maxY": 433.5652173913044, "series": [{"data": [[1.74593154E12, 0.0], [1.74593478E12, 0.0], [1.74592812E12, 0.0], [1.74593376E12, 0.0], [1.74592932E12, 0.0], [1.74593256E12, 0.0], [1.74593034E12, 0.0], [1.74593358E12, 0.0], [1.7459358E12, 0.0], [1.74593136E12, 0.0], [1.7459346E12, 0.0], [1.74592794E12, 0.0], [1.74593238E12, 0.0], [1.74593016E12, 0.0], [1.74592914E12, 0.0], [1.74593118E12, 0.0], [1.7459334E12, 0.0], [1.74593562E12, 0.0], [1.74593088E12, 0.0], [1.74593412E12, 0.0], [1.7459319E12, 0.0], [1.74592968E12, 0.0], [1.74592866E12, 0.0], [1.7459307E12, 0.0], [1.74593292E12, 0.0], [1.74593514E12, 0.0], [1.7459283E12, 0.0], [1.7459295E12, 0.0], [1.74593172E12, 0.0], [1.74593394E12, 0.0], [1.74593274E12, 0.0], [1.74593052E12, 0.0], [1.74593496E12, 0.0], [1.74592848E12, 0.0], [1.74593346E12, 0.0], [1.74593124E12, 0.0], [1.74593568E12, 0.0], [1.74592902E12, 0.0], [1.74593226E12, 0.0], [1.7459355E12, 0.0], [1.74593004E12, 0.0], [1.74593448E12, 0.0], [1.745928E12, 0.0], [1.74593106E12, 0.0], [1.74593328E12, 0.0], [1.7459343E12, 0.0], [1.74593532E12, 0.0], [1.74592884E12, 0.0], [1.74592986E12, 0.0], [1.74593208E12, 0.0], [1.7459331E12, 0.0], [1.74593058E12, 0.0], [1.7459328E12, 0.0], [1.74593382E12, 0.0], [1.74593484E12, 0.0], [1.74592836E12, 0.0], [1.74592938E12, 0.0], [1.7459316E12, 0.0], [1.74593262E12, 0.0], [1.7459304E12, 0.0], [1.74593364E12, 0.0], [1.74593586E12, 0.0], [1.7459292E12, 0.0], [1.74593142E12, 0.0], [1.74592818E12, 0.0], [1.74593466E12, 0.0], [1.74593022E12, 0.0], [1.74593244E12, 0.0], [1.74592992E12, 0.0], [1.74592872E12, 0.0], [1.74593094E12, 0.0], [1.74593316E12, 0.0], [1.74593538E12, 0.0], [1.74592974E12, 0.0], [1.74593196E12, 0.0], [1.74593418E12, 0.0], [1.74593298E12, 0.0], [1.74593076E12, 0.0], [1.7459352E12, 0.0], [1.74592854E12, 0.0], [1.74593178E12, 0.0], [1.74593502E12, 0.0], [1.74592956E12, 0.0], [1.745934E12, 0.0], [1.7459325E12, 0.0], [1.74593574E12, 0.0], [1.74592908E12, 0.0], [1.74593472E12, 0.0], [1.74593028E12, 0.0], [1.74592806E12, 0.0], [1.7459313E12, 0.0], [1.74593352E12, 0.0], [1.74593454E12, 0.0], [1.74593556E12, 0.0], [1.7459301E12, 0.0], [1.74593232E12, 0.0], [1.7459289E12, 0.0], [1.74593334E12, 0.0], [1.74593112E12, 0.0], [1.74593436E12, 0.0], [1.74593214E12, 0.0], [1.74593508E12, 0.0], [1.74592962E12, 0.0], [1.74593184E12, 0.0], [1.74592842E12, 0.0], [1.74593286E12, 0.0], [1.74593064E12, 0.0], [1.74593388E12, 0.0], [1.74593166E12, 0.0], [1.74592926E12, 0.0], [1.74592944E12, 0.0], [1.74593046E12, 0.0], [1.74593268E12, 0.0], [1.7459349E12, 0.0], [1.74592824E12, 0.0], [1.74593148E12, 0.0], [1.7459337E12, 0.0], [1.74592878E12, 0.0], [1.74592998E12, 0.0], [1.7459322E12, 0.0], [1.74593442E12, 0.0], [1.74593322E12, 0.0], [1.745931E12, 0.0], [1.74593544E12, 0.0], [1.74592896E12, 0.0], [1.74593202E12, 0.0], [1.7459286E12, 0.0], [1.74593526E12, 0.0], [1.7459298E12, 0.0], [1.74593424E12, 0.0], [1.74593082E12, 0.0], [1.74593304E12, 0.0], [1.74593406E12, 0.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.74593154E12, 342.7125], [1.74593478E12, 346.23749999999995], [1.74592812E12, 339.41666666666674], [1.74593376E12, 345.4933333333334], [1.74592932E12, 339.1052631578948], [1.74593256E12, 340.7260273972603], [1.74593034E12, 338.87012987012986], [1.74593358E12, 342.67105263157913], [1.7459358E12, 345.96153846153845], [1.74593136E12, 339.23076923076917], [1.7459346E12, 345.9868421052633], [1.74592794E12, 433.5652173913044], [1.74593238E12, 342.16883116883105], [1.74593016E12, 338.62162162162167], [1.74592914E12, 335.4177215189873], [1.74593118E12, 340.75641025641033], [1.7459334E12, 345.1052631578947], [1.74593562E12, 347.1578947368419], [1.74593088E12, 340.5949367088607], [1.74593412E12, 345.3116883116883], [1.7459319E12, 342.7432432432432], [1.74592968E12, 338.1578947368422], [1.74592866E12, 339.4078947368421], [1.7459307E12, 341.2682926829267], [1.74593292E12, 342.9729729729729], [1.74593514E12, 345.23684210526324], [1.7459283E12, 339.3466666666666], [1.7459295E12, 336.7105263157895], [1.74593172E12, 339.4054054054055], [1.74593394E12, 342.891891891892], [1.74593274E12, 341.54666666666674], [1.74593052E12, 338.68354430379753], [1.74593496E12, 345.14666666666665], [1.74592848E12, 339.3698630136986], [1.74593346E12, 345.2432432432434], [1.74593124E12, 340.37179487179486], [1.74593568E12, 346.2777777777778], [1.74592902E12, 338.7236842105262], [1.74593226E12, 342.55263157894734], [1.7459355E12, 346.9324324324325], [1.74593004E12, 340.8947368421054], [1.74593448E12, 343.05479452054794], [1.745928E12, 341.85333333333335], [1.74593106E12, 339.1710526315789], [1.74593328E12, 342.40000000000003], [1.7459343E12, 343.37179487179486], [1.74593532E12, 346.5263157894737], [1.74592884E12, 338.6282051282052], [1.74592986E12, 338.51351351351354], [1.74593208E12, 341.421052631579], [1.7459331E12, 342.4864864864865], [1.74593058E12, 339.4078947368422], [1.7459328E12, 345.23684210526335], [1.74593382E12, 343.43055555555554], [1.74593484E12, 344.84810126582283], [1.74592836E12, 338.6438356164384], [1.74592938E12, 338.82666666666665], [1.7459316E12, 339.7439024390243], [1.74593262E12, 341.76190476190476], [1.7459304E12, 339.93421052631595], [1.74593364E12, 342.6533333333333], [1.74593586E12, 345.07272727272726], [1.7459292E12, 337.0126582278482], [1.74593142E12, 339.95890410958907], [1.74592818E12, 339.1688311688313], [1.74593466E12, 344.961038961039], [1.74593022E12, 339.07792207792227], [1.74593244E12, 340.8082191780823], [1.74592992E12, 337.76388888888886], [1.74592872E12, 337.4303797468353], [1.74593094E12, 335.53333333333325], [1.74593316E12, 343.26315789473693], [1.74593538E12, 346.21333333333325], [1.74592974E12, 336.97333333333347], [1.74593196E12, 344.4324324324324], [1.74593418E12, 345.75342465753414], [1.74593298E12, 343.1518987341771], [1.74593076E12, 340.4383561643836], [1.7459352E12, 345.7027027027027], [1.74592854E12, 337.7631578947368], [1.74593178E12, 340.12328767123296], [1.74593502E12, 346.18055555555554], [1.74592956E12, 337.50666666666666], [1.745934E12, 345.30985915492965], [1.7459325E12, 343.2933333333334], [1.74593574E12, 347.0886075949368], [1.74592908E12, 334.49350649350663], [1.74593472E12, 347.1369863013699], [1.74593028E12, 338.4054054054055], [1.74592806E12, 338.8142857142858], [1.7459313E12, 338.72368421052647], [1.74593352E12, 341.51351351351354], [1.74593454E12, 343.5915492957746], [1.74593556E12, 348.0533333333333], [1.7459301E12, 338.8133333333332], [1.74593232E12, 343.82894736842104], [1.7459289E12, 339.5324675324675], [1.74593334E12, 343.77333333333326], [1.74593112E12, 339.73611111111114], [1.74593436E12, 345.1447368421053], [1.74593214E12, 340.6756756756755], [1.74593508E12, 346.4864864864865], [1.74592962E12, 339.2000000000001], [1.74593184E12, 341.65853658536605], [1.74592842E12, 337.7692307692308], [1.74593286E12, 343.9333333333334], [1.74593064E12, 341.3205128205129], [1.74593388E12, 342.6111111111112], [1.74593166E12, 340.0133333333334], [1.74592926E12, 336.3428571428571], [1.74592944E12, 337.84931506849324], [1.74593046E12, 339.3424657534246], [1.74593268E12, 338.2179487179488], [1.7459349E12, 346.10389610389603], [1.74592824E12, 340.3888888888888], [1.74593148E12, 341.28000000000014], [1.7459337E12, 345.8378378378379], [1.74592878E12, 338.2469135802469], [1.74592998E12, 338.15384615384625], [1.7459322E12, 341.99999999999994], [1.74593442E12, 344.6527777777779], [1.74593322E12, 343.6756756756757], [1.745931E12, 339.1818181818183], [1.74593544E12, 346.8888888888888], [1.74592896E12, 338.27631578947364], [1.74593202E12, 341.9342105263159], [1.7459286E12, 337.38961038961025], [1.74593526E12, 348.40845070422523], [1.7459298E12, 336.92307692307685], [1.74593424E12, 346.64000000000004], [1.74593082E12, 338.89610389610397], [1.74593304E12, 344.50666666666666], [1.74593406E12, 344.12499999999994]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74593586E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74592794E12, "maxY": 3.67391304347826, "series": [{"data": [[1.74593154E12, 0.0], [1.74593478E12, 0.0], [1.74592812E12, 0.0], [1.74593376E12, 0.0], [1.74592932E12, 0.0], [1.74593256E12, 0.0], [1.74593034E12, 0.0], [1.74593358E12, 0.0], [1.7459358E12, 0.0], [1.74593136E12, 0.0], [1.7459346E12, 0.0], [1.74592794E12, 0.0], [1.74593238E12, 0.0], [1.74593016E12, 0.0], [1.74592914E12, 0.0], [1.74593118E12, 0.0], [1.7459334E12, 0.0], [1.74593562E12, 0.0], [1.74593088E12, 0.0], [1.74593412E12, 0.0], [1.7459319E12, 0.0], [1.74592968E12, 0.0], [1.74592866E12, 0.0], [1.7459307E12, 0.0], [1.74593292E12, 0.0], [1.74593514E12, 0.0], [1.7459283E12, 0.0], [1.7459295E12, 0.0], [1.74593172E12, 0.0], [1.74593394E12, 0.0], [1.74593274E12, 0.0], [1.74593052E12, 0.0], [1.74593496E12, 0.0], [1.74592848E12, 0.0], [1.74593346E12, 0.0], [1.74593124E12, 0.0], [1.74593568E12, 0.0], [1.74592902E12, 0.0], [1.74593226E12, 0.0], [1.7459355E12, 0.0], [1.74593004E12, 0.0], [1.74593448E12, 0.0], [1.745928E12, 0.0], [1.74593106E12, 0.0], [1.74593328E12, 0.0], [1.7459343E12, 0.0], [1.74593532E12, 0.0], [1.74592884E12, 0.0], [1.74592986E12, 0.0], [1.74593208E12, 0.0], [1.7459331E12, 0.0], [1.74593058E12, 0.0], [1.7459328E12, 0.0], [1.74593382E12, 0.0], [1.74593484E12, 0.0], [1.74592836E12, 0.0], [1.74592938E12, 0.0], [1.7459316E12, 0.0], [1.74593262E12, 0.0], [1.7459304E12, 0.0], [1.74593364E12, 0.0], [1.74593586E12, 0.0], [1.7459292E12, 0.0], [1.74593142E12, 0.0], [1.74592818E12, 0.0], [1.74593466E12, 0.0], [1.74593022E12, 0.0], [1.74593244E12, 0.0], [1.74592992E12, 0.0], [1.74592872E12, 0.0], [1.74593094E12, 0.0], [1.74593316E12, 0.0], [1.74593538E12, 0.0], [1.74592974E12, 0.0], [1.74593196E12, 0.0], [1.74593418E12, 0.0], [1.74593298E12, 0.0], [1.74593076E12, 0.0], [1.7459352E12, 0.0], [1.74592854E12, 0.0], [1.74593178E12, 0.0], [1.74593502E12, 0.0], [1.74592956E12, 0.0], [1.745934E12, 0.0], [1.7459325E12, 0.0], [1.74593574E12, 0.0], [1.74592908E12, 0.0], [1.74593472E12, 0.0], [1.74593028E12, 0.0], [1.74592806E12, 0.0], [1.7459313E12, 0.0], [1.74593352E12, 0.0], [1.74593454E12, 0.0], [1.74593556E12, 0.0], [1.7459301E12, 0.0], [1.74593232E12, 0.0], [1.7459289E12, 0.0], [1.74593334E12, 0.0], [1.74593112E12, 0.0], [1.74593436E12, 0.0], [1.74593214E12, 0.0], [1.74593508E12, 0.0], [1.74592962E12, 0.0], [1.74593184E12, 0.0], [1.74592842E12, 0.0], [1.74593286E12, 0.0], [1.74593064E12, 0.0], [1.74593388E12, 0.0], [1.74593166E12, 0.0], [1.74592926E12, 0.0], [1.74592944E12, 0.0], [1.74593046E12, 0.0], [1.74593268E12, 0.0], [1.7459349E12, 0.0], [1.74592824E12, 0.0], [1.74593148E12, 0.0], [1.7459337E12, 0.0], [1.74592878E12, 0.0], [1.74592998E12, 0.0], [1.7459322E12, 0.0], [1.74593442E12, 0.0], [1.74593322E12, 0.0], [1.745931E12, 0.0], [1.74593544E12, 0.0], [1.74592896E12, 0.0], [1.74593202E12, 0.0], [1.7459286E12, 0.0], [1.74593526E12, 0.0], [1.7459298E12, 0.0], [1.74593424E12, 0.0], [1.74593082E12, 0.0], [1.74593304E12, 0.0], [1.74593406E12, 0.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.74593154E12, 0.05], [1.74593478E12, 0.03750000000000001], [1.74592812E12, 0.06944444444444445], [1.74593376E12, 0.040000000000000015], [1.74592932E12, 0.052631578947368425], [1.74593256E12, 0.04109589041095891], [1.74593034E12, 0.03896103896103895], [1.74593358E12, 0.039473684210526314], [1.7459358E12, 0.03846153846153848], [1.74593136E12, 0.038461538461538464], [1.7459346E12, 0.03947368421052633], [1.74592794E12, 3.67391304347826], [1.74593238E12, 0.03896103896103896], [1.74593016E12, 0.040540540540540536], [1.74592914E12, 0.03797468354430379], [1.74593118E12, 0.05128205128205129], [1.7459334E12, 0.03947368421052631], [1.74593562E12, 0.03947368421052633], [1.74593088E12, 0.0379746835443038], [1.74593412E12, 0.038961038961038974], [1.7459319E12, 0.05405405405405406], [1.74592968E12, 0.03947368421052631], [1.74592866E12, 0.03947368421052631], [1.7459307E12, 0.036585365853658534], [1.74593292E12, 0.040540540540540536], [1.74593514E12, 0.026315789473684213], [1.7459283E12, 0.05333333333333334], [1.7459295E12, 0.052631578947368425], [1.74593172E12, 0.04054054054054054], [1.74593394E12, 0.04054054054054056], [1.74593274E12, 0.039999999999999994], [1.74593052E12, 0.0379746835443038], [1.74593496E12, 0.040000000000000015], [1.74592848E12, 0.04109589041095892], [1.74593346E12, 0.027027027027027025], [1.74593124E12, 0.05128205128205129], [1.74593568E12, 0.041666666666666685], [1.74592902E12, 0.03947368421052631], [1.74593226E12, 0.039473684210526314], [1.7459355E12, 0.04054054054054056], [1.74593004E12, 0.052631578947368425], [1.74593448E12, 0.027397260273972605], [1.745928E12, 0.08000000000000003], [1.74593106E12, 0.039473684210526314], [1.74593328E12, 0.039999999999999994], [1.7459343E12, 0.025641025641025644], [1.74593532E12, 0.03947368421052633], [1.74592884E12, 0.05128205128205129], [1.74592986E12, 0.05405405405405406], [1.74593208E12, 0.039473684210526314], [1.7459331E12, 0.040540540540540536], [1.74593058E12, 0.039473684210526314], [1.7459328E12, 0.03947368421052631], [1.74593382E12, 0.041666666666666685], [1.74593484E12, 0.03797468354430381], [1.74592836E12, 0.05479452054794521], [1.74592938E12, 0.039999999999999994], [1.7459316E12, 0.036585365853658534], [1.74593262E12, 0.035714285714285705], [1.7459304E12, 0.03947368421052631], [1.74593364E12, 0.04], [1.74593586E12, 0.03636363636363637], [1.7459292E12, 0.05063291139240507], [1.74593142E12, 0.04109589041095891], [1.74592818E12, 0.05194805194805195], [1.74593466E12, 0.025974025974025976], [1.74593022E12, 0.05194805194805195], [1.74593244E12, 0.05479452054794521], [1.74592992E12, 0.041666666666666664], [1.74592872E12, 0.0632911392405063], [1.74593094E12, 0.053333333333333344], [1.74593316E12, 0.03947368421052631], [1.74593538E12, 0.040000000000000015], [1.74592974E12, 0.05333333333333334], [1.74593196E12, 0.04054054054054054], [1.74593418E12, 0.04109589041095892], [1.74593298E12, 0.03797468354430379], [1.74593076E12, 0.04109589041095891], [1.7459352E12, 0.04054054054054056], [1.74592854E12, 0.052631578947368425], [1.74593178E12, 0.04109589041095891], [1.74593502E12, 0.041666666666666685], [1.74592956E12, 0.040000000000000015], [1.745934E12, 0.04225352112676058], [1.7459325E12, 0.04], [1.74593574E12, 0.03797468354430381], [1.74592908E12, 0.03896103896103895], [1.74593472E12, 0.04109589041095892], [1.74593028E12, 0.05405405405405406], [1.74592806E12, 0.07142857142857144], [1.7459313E12, 0.039473684210526314], [1.74593352E12, 0.040540540540540536], [1.74593454E12, 0.04225352112676058], [1.74593556E12, 0.040000000000000015], [1.7459301E12, 0.05333333333333334], [1.74593232E12, 0.052631578947368425], [1.7459289E12, 0.05194805194805195], [1.74593334E12, 0.026666666666666665], [1.74593112E12, 0.04166666666666667], [1.74593436E12, 0.03947368421052633], [1.74593214E12, 0.05405405405405406], [1.74593508E12, 0.04054054054054056], [1.74592962E12, 0.039999999999999994], [1.74593184E12, 0.04878048780487805], [1.74592842E12, 0.05128205128205129], [1.74593286E12, 0.039999999999999994], [1.74593064E12, 0.038461538461538464], [1.74593388E12, 0.041666666666666685], [1.74593166E12, 0.04], [1.74592926E12, 0.04285714285714286], [1.74592944E12, 0.0410958904109589], [1.74593046E12, 0.05479452054794521], [1.74593268E12, 0.025641025641025644], [1.7459349E12, 0.051948051948051986], [1.74592824E12, 0.08333333333333337], [1.74593148E12, 0.04], [1.7459337E12, 0.0], [1.74592878E12, 0.03703703703703703], [1.74592998E12, 0.03846153846153846], [1.7459322E12, 0.05194805194805195], [1.74593442E12, 0.041666666666666685], [1.74593322E12, 0.02702702702702703], [1.745931E12, 0.03896103896103897], [1.74593544E12, 0.041666666666666685], [1.74592896E12, 0.03947368421052631], [1.74593202E12, 0.052631578947368425], [1.7459286E12, 0.05194805194805195], [1.74593526E12, 0.04225352112676058], [1.7459298E12, 0.03846153846153846], [1.74593424E12, 0.040000000000000015], [1.74593082E12, 0.03896103896103896], [1.74593304E12, 0.039999999999999994], [1.74593406E12, 0.03750000000000001]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74593586E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 114.0, "minX": 1.74592794E12, "maxY": 4471.0, "series": [{"data": [[1.74593154E12, 1083.0], [1.74593478E12, 1086.0], [1.74592812E12, 1339.0], [1.74593376E12, 1502.0], [1.74592932E12, 1101.0], [1.74593256E12, 1056.0], [1.74593034E12, 1290.0], [1.74593358E12, 1121.0], [1.7459358E12, 1102.0], [1.74593136E12, 1220.0], [1.7459346E12, 1470.0], [1.74592794E12, 4471.0], [1.74593238E12, 1698.0], [1.74593016E12, 1572.0], [1.74592914E12, 1195.0], [1.74593118E12, 1554.0], [1.7459334E12, 1650.0], [1.74593562E12, 1037.0], [1.74593088E12, 1233.0], [1.74593412E12, 1288.0], [1.7459319E12, 1586.0], [1.74592968E12, 2089.0], [1.74592866E12, 1310.0], [1.7459307E12, 1165.0], [1.74593292E12, 1354.0], [1.74593514E12, 1061.0], [1.7459283E12, 1302.0], [1.7459295E12, 1300.0], [1.74593172E12, 994.0], [1.74593394E12, 1286.0], [1.74593274E12, 1368.0], [1.74593052E12, 1684.0], [1.74593496E12, 924.0], [1.74592848E12, 1423.0], [1.74593346E12, 1193.0], [1.74593124E12, 1317.0], [1.74593568E12, 1324.0], [1.74592902E12, 1446.0], [1.74593226E12, 1427.0], [1.7459355E12, 1700.0], [1.74593004E12, 1182.0], [1.74593448E12, 1266.0], [1.745928E12, 1113.0], [1.74593106E12, 1097.0], [1.74593328E12, 1163.0], [1.7459343E12, 1173.0], [1.74593532E12, 951.0], [1.74592884E12, 1066.0], [1.74592986E12, 1041.0], [1.74593208E12, 1246.0], [1.7459331E12, 1247.0], [1.74593058E12, 1029.0], [1.7459328E12, 1231.0], [1.74593382E12, 1920.0], [1.74593484E12, 1002.0], [1.74592836E12, 1490.0], [1.74592938E12, 1218.0], [1.7459316E12, 1046.0], [1.74593262E12, 990.0], [1.7459304E12, 1284.0], [1.74593364E12, 1138.0], [1.74593586E12, 1189.0], [1.7459292E12, 1136.0], [1.74593142E12, 1249.0], [1.74592818E12, 1526.0], [1.74593466E12, 1008.0], [1.74593022E12, 1513.0], [1.74593244E12, 1343.0], [1.74592992E12, 1551.0], [1.74592872E12, 1393.0], [1.74593094E12, 1498.0], [1.74593316E12, 1375.0], [1.74593538E12, 1278.0], [1.74592974E12, 1242.0], [1.74593196E12, 1267.0], [1.74593418E12, 1297.0], [1.74593298E12, 979.0], [1.74593076E12, 1067.0], [1.7459352E12, 1308.0], [1.74592854E12, 1046.0], [1.74593178E12, 1551.0], [1.74593502E12, 1899.0], [1.74592956E12, 1283.0], [1.745934E12, 1262.0], [1.7459325E12, 1311.0], [1.74593574E12, 867.0], [1.74592908E12, 1397.0], [1.74593472E12, 1247.0], [1.74593028E12, 1132.0], [1.74592806E12, 1456.0], [1.7459313E12, 1276.0], [1.74593352E12, 1374.0], [1.74593454E12, 1950.0], [1.74593556E12, 1298.0], [1.7459301E12, 1394.0], [1.74593232E12, 1524.0], [1.7459289E12, 1038.0], [1.74593334E12, 1455.0], [1.74593112E12, 1306.0], [1.74593436E12, 1140.0], [1.74593214E12, 1432.0], [1.74593508E12, 1430.0], [1.74592962E12, 952.0], [1.74593184E12, 980.0], [1.74592842E12, 1156.0], [1.74593286E12, 1237.0], [1.74593064E12, 1188.0], [1.74593388E12, 1431.0], [1.74593166E12, 1112.0], [1.74592926E12, 1246.0], [1.74592944E12, 1057.0], [1.74593046E12, 1631.0], [1.74593268E12, 1184.0], [1.7459349E12, 1084.0], [1.74592824E12, 1261.0], [1.74593148E12, 1165.0], [1.7459337E12, 1197.0], [1.74592878E12, 1199.0], [1.74592998E12, 1063.0], [1.7459322E12, 1564.0], [1.74593442E12, 1827.0], [1.74593322E12, 1143.0], [1.745931E12, 1122.0], [1.74593544E12, 1145.0], [1.74592896E12, 2447.0], [1.74593202E12, 1051.0], [1.7459286E12, 1404.0], [1.74593526E12, 1217.0], [1.7459298E12, 1183.0], [1.74593424E12, 1531.0], [1.74593082E12, 1313.0], [1.74593304E12, 1405.0], [1.74593406E12, 973.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74593154E12, 542.8], [1.74593478E12, 561.4000000000001], [1.74592812E12, 678.5], [1.74593376E12, 637.0], [1.74592932E12, 615.6000000000005], [1.74593256E12, 668.5], [1.74593034E12, 618.5], [1.74593358E12, 602.5000000000006], [1.7459358E12, 577.8000000000002], [1.74593136E12, 548.5000000000002], [1.7459346E12, 569.6], [1.74592794E12, 692.6000000000001], [1.74593238E12, 582.0000000000002], [1.74593016E12, 607.2000000000002], [1.74592914E12, 617.9], [1.74593118E12, 648.9000000000003], [1.7459334E12, 595.8000000000002], [1.74593562E12, 617.8000000000004], [1.74593088E12, 595.2000000000002], [1.74593412E12, 585.0], [1.7459319E12, 649.5999999999999], [1.74592968E12, 623.2000000000005], [1.74592866E12, 643.0000000000005], [1.7459307E12, 497.0], [1.74593292E12, 655.3], [1.74593514E12, 663.8000000000002], [1.7459283E12, 699.0], [1.7459295E12, 636.1], [1.74593172E12, 657.2000000000007], [1.74593394E12, 665.3], [1.74593274E12, 666.0], [1.74593052E12, 573.6000000000001], [1.74593496E12, 634.7], [1.74592848E12, 633.2], [1.74593346E12, 639.0], [1.74593124E12, 592.9000000000005], [1.74593568E12, 695.5], [1.74592902E12, 637.1], [1.74593226E12, 623.5000000000008], [1.7459355E12, 583.8999999999999], [1.74593004E12, 640.4], [1.74593448E12, 654.6000000000006], [1.745928E12, 611.7], [1.74593106E12, 615.1999999999999], [1.74593328E12, 675.0], [1.7459343E12, 550.6000000000004], [1.74593532E12, 616.1], [1.74592884E12, 556.6000000000004], [1.74592986E12, 646.9], [1.74593208E12, 607.0], [1.7459331E12, 666.3999999999999], [1.74593058E12, 606.1999999999999], [1.7459328E12, 632.4000000000002], [1.74593382E12, 703.4000000000001], [1.74593484E12, 544.0], [1.74592836E12, 635.8000000000011], [1.74592938E12, 653.7000000000002], [1.7459316E12, 572.8], [1.74593262E12, 469.2], [1.7459304E12, 600.4000000000001], [1.74593364E12, 670.8], [1.74593586E12, 661.3000000000002], [1.7459292E12, 552.6000000000006], [1.74593142E12, 720.5000000000002], [1.74592818E12, 618.5], [1.74593466E12, 616.5], [1.74593022E12, 600.0], [1.74593244E12, 664.0], [1.74592992E12, 741.5], [1.74592872E12, 575.2], [1.74593094E12, 647.8000000000001], [1.74593316E12, 593.0], [1.74593538E12, 663.4000000000003], [1.74592974E12, 646.2], [1.74593196E12, 682.8999999999997], [1.74593418E12, 668.8000000000001], [1.74593298E12, 591.3], [1.74593076E12, 695.2000000000003], [1.7459352E12, 658.0999999999998], [1.74592854E12, 645.2], [1.74593178E12, 718.2000000000006], [1.74593502E12, 699.4], [1.74592956E12, 662.2000000000003], [1.745934E12, 691.2000000000005], [1.7459325E12, 665.4000000000001], [1.74593574E12, 568.0], [1.74592908E12, 621.0], [1.74593472E12, 611.8000000000001], [1.74593028E12, 643.4999999999999], [1.74592806E12, 768.9999999999998], [1.7459313E12, 628.5000000000001], [1.74593352E12, 629.4000000000001], [1.74593454E12, 669.4], [1.74593556E12, 646.8], [1.7459301E12, 675.9000000000001], [1.74593232E12, 606.8000000000001], [1.7459289E12, 634.0], [1.74593334E12, 634.0], [1.74593112E12, 659.9999999999998], [1.74593436E12, 611.8], [1.74593214E12, 631.4000000000001], [1.74593508E12, 692.1999999999999], [1.74592962E12, 647.8], [1.74593184E12, 506.0], [1.74592842E12, 576.6000000000004], [1.74593286E12, 593.6], [1.74593064E12, 693.2], [1.74593388E12, 687.5999999999998], [1.74593166E12, 663.2000000000003], [1.74592926E12, 688.2000000000002], [1.74592944E12, 660.9000000000001], [1.74593046E12, 667.0000000000002], [1.74593268E12, 594.2000000000005], [1.7459349E12, 589.5], [1.74592824E12, 677.5], [1.74593148E12, 616.2], [1.7459337E12, 658.0], [1.74592878E12, 545.4000000000001], [1.74592998E12, 585.8000000000001], [1.7459322E12, 545.5], [1.74593442E12, 696.0], [1.74593322E12, 613.5999999999999], [1.745931E12, 582.0], [1.74593544E12, 630.8], [1.74592896E12, 543.7000000000005], [1.74593202E12, 605.8000000000002], [1.7459286E12, 654.0], [1.74593526E12, 656.5999999999999], [1.7459298E12, 596.8], [1.74593424E12, 633.7000000000004], [1.74593082E12, 621.4], [1.74593304E12, 574.3000000000001], [1.74593406E12, 545.9000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74593154E12, 1029.929999999999], [1.74593478E12, 992.9999999999993], [1.74592812E12, 1275.5500000000015], [1.74593376E12, 1281.5], [1.74592932E12, 1015.6699999999998], [1.74593256E12, 1047.07], [1.74593034E12, 1208.0499999999984], [1.74593358E12, 1110.4], [1.7459358E12, 1080.7199999999998], [1.74593136E12, 1181.8100000000004], [1.7459346E12, 1449.4800000000002], [1.74592794E12, 4471.0], [1.74593238E12, 1344.0799999999986], [1.74593016E12, 1399.6800000000037], [1.74592914E12, 1110.0399999999995], [1.74593118E12, 1256.4600000000037], [1.7459334E12, 1391.3599999999994], [1.74593562E12, 1015.1599999999996], [1.74593088E12, 1108.2999999999972], [1.74593412E12, 1236.2999999999988], [1.7459319E12, 1578.6499999999999], [1.74592968E12, 1557.5599999999895], [1.74592866E12, 1269.7199999999998], [1.7459307E12, 978.2200000000009], [1.74593292E12, 1307.4499999999991], [1.74593514E12, 1044.8799999999997], [1.7459283E12, 1263.5], [1.7459295E12, 1190.8199999999997], [1.74593172E12, 983.9200000000002], [1.74593394E12, 1167.4199999999978], [1.74593274E12, 1281.5], [1.74593052E12, 1331.9399999999923], [1.74593496E12, 887.2800000000007], [1.74592848E12, 1369.2400000000011], [1.74593346E12, 1161.5], [1.74593124E12, 1257.1500000000008], [1.74593568E12, 1257.8500000000017], [1.74592902E12, 1222.3399999999995], [1.74593226E12, 1325.7699999999998], [1.7459355E12, 1420.6999999999948], [1.74593004E12, 1167.9600000000003], [1.74593448E12, 1200.2400000000014], [1.745928E12, 1083.4200000000005], [1.74593106E12, 1033.8200000000008], [1.74593328E12, 1131.0], [1.7459343E12, 1098.7599999999984], [1.74593532E12, 950.47], [1.74592884E12, 1016.4100000000005], [1.74592986E12, 968.9699999999987], [1.74593208E12, 1221.7000000000003], [1.7459331E12, 1229.3599999999997], [1.74593058E12, 996.6000000000005], [1.7459328E12, 1068.8199999999997], [1.74593382E12, 1580.979999999994], [1.74593484E12, 982.2799999999995], [1.74592836E12, 1388.0100000000002], [1.74592938E12, 1130.2800000000016], [1.7459316E12, 983.9199999999986], [1.74593262E12, 936.1800000000002], [1.7459304E12, 1168.4599999999998], [1.74593364E12, 1036.5100000000018], [1.74593586E12, 1160.73], [1.7459292E12, 1117.4399999999996], [1.74593142E12, 1169.5700000000002], [1.74592818E12, 1279.599999999995], [1.74593466E12, 964.549999999999], [1.74593022E12, 1234.6999999999944], [1.74593244E12, 1298.3799999999992], [1.74592992E12, 1339.5000000000055], [1.74592872E12, 1264.8199999999972], [1.74593094E12, 1478.6200000000003], [1.74593316E12, 1202.7499999999995], [1.74593538E12, 1271.88], [1.74592974E12, 1171.7999999999986], [1.74593196E12, 1188.5999999999985], [1.74593418E12, 1169.1600000000003], [1.74593298E12, 973.6899999999999], [1.74593076E12, 1049.9799999999998], [1.7459352E12, 1173.2499999999975], [1.74592854E12, 1045.47], [1.74593178E12, 1494.6000000000001], [1.74593502E12, 1631.7399999999952], [1.74592956E12, 1153.4600000000023], [1.745934E12, 1215.1299999999992], [1.7459325E12, 1189.1100000000022], [1.74593574E12, 846.0000000000002], [1.74592908E12, 1213.8799999999992], [1.74593472E12, 1228.5999999999997], [1.74593028E12, 1078.099999999999], [1.74592806E12, 1287.580000000005], [1.7459313E12, 1086.7899999999995], [1.74593352E12, 1317.8400000000013], [1.74593454E12, 1661.4600000000087], [1.74593556E12, 1290.1999999999998], [1.7459301E12, 1360.8500000000006], [1.74593232E12, 1345.9199999999996], [1.7459289E12, 1034.6999999999998], [1.74593334E12, 1258.6500000000035], [1.74593112E12, 1200.8400000000006], [1.74593436E12, 1084.359999999999], [1.74593214E12, 1273.1200000000033], [1.74593508E12, 1393.7399999999993], [1.74592962E12, 936.3999999999996], [1.74593184E12, 954.6499999999997], [1.74592842E12, 1077.340000000001], [1.74593286E12, 1085.1599999999971], [1.74593064E12, 1161.6799999999998], [1.74593388E12, 1383.0400000000002], [1.74593166E12, 1041.2799999999986], [1.74592926E12, 1209.1000000000004], [1.74592944E12, 1047.13], [1.74593046E12, 1437.560000000004], [1.74593268E12, 1049.439999999997], [1.7459349E12, 1035.599999999999], [1.74592824E12, 1189.900000000002], [1.74593148E12, 1093.2399999999986], [1.7459337E12, 1138.5], [1.74592878E12, 1120.8800000000006], [1.74592998E12, 1031.0800000000004], [1.7459322E12, 1337.9499999999953], [1.74593442E12, 1559.2500000000068], [1.74593322E12, 1124.8699999999997], [1.745931E12, 1064.7999999999988], [1.74593544E12, 1112.88], [1.74592896E12, 1730.9699999999984], [1.74593202E12, 941.8199999999997], [1.7459286E12, 1278.0499999999975], [1.74593526E12, 1143.0800000000004], [1.7459298E12, 1114.1199999999997], [1.74593424E12, 1396.8700000000024], [1.74593082E12, 1101.8799999999992], [1.74593304E12, 1348.390000000001], [1.74593406E12, 908.9499999999986]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74593154E12, 671.2499999999998], [1.74593478E12, 645.3000000000001], [1.74592812E12, 866.0], [1.74593376E12, 719.0], [1.74592932E12, 873.1999999999999], [1.74593256E12, 784.45], [1.74593034E12, 738.75], [1.74593358E12, 761.0], [1.7459358E12, 769.5999999999999], [1.74593136E12, 681.3500000000001], [1.7459346E12, 709.6999999999998], [1.74592794E12, 772.9499999999998], [1.74593238E12, 693.7999999999997], [1.74593016E12, 846.9999999999993], [1.74592914E12, 722.6999999999998], [1.74593118E12, 757.15], [1.7459334E12, 676.9499999999997], [1.74593562E12, 803.6000000000001], [1.74593088E12, 708.4999999999997], [1.74593412E12, 735.75], [1.7459319E12, 836.8999999999994], [1.74592968E12, 810.8000000000002], [1.74592866E12, 745.1499999999997], [1.7459307E12, 655.6999999999996], [1.74593292E12, 773.0999999999979], [1.74593514E12, 788.8000000000001], [1.7459283E12, 769.0], [1.7459295E12, 835.7499999999999], [1.74593172E12, 851.7999999999997], [1.74593394E12, 841.1999999999999], [1.74593274E12, 863.0], [1.74593052E12, 721.1], [1.74593496E12, 722.0], [1.74592848E12, 865.3999999999996], [1.74593346E12, 731.5], [1.74593124E12, 735.1000000000001], [1.74593568E12, 886.25], [1.74592902E12, 747.55], [1.74593226E12, 767.1999999999999], [1.7459355E12, 832.799999999999], [1.74593004E12, 828.9], [1.74593448E12, 772.8], [1.745928E12, 793.8999999999997], [1.74593106E12, 736.7999999999997], [1.74593328E12, 817.5], [1.7459343E12, 720.9], [1.74593532E12, 721.3499999999999], [1.74592884E12, 695.2], [1.74592986E12, 838.7999999999997], [1.74593208E12, 817.6999999999995], [1.7459331E12, 880.7999999999984], [1.74593058E12, 734.8999999999996], [1.7459328E12, 768.5999999999998], [1.74593382E12, 947.899999999999], [1.74593484E12, 741.4999999999998], [1.74592836E12, 905.8000000000001], [1.74592938E12, 880.5999999999992], [1.7459316E12, 671.7999999999998], [1.74593262E12, 628.7499999999995], [1.7459304E12, 728.7499999999999], [1.74593364E12, 784.8499999999999], [1.74593586E12, 745.2999999999994], [1.7459292E12, 722.7999999999997], [1.74593142E12, 935.5], [1.74592818E12, 801.75], [1.74593466E12, 748.5], [1.74593022E12, 850.25], [1.74593244E12, 890.9999999999995], [1.74592992E12, 901.75], [1.74592872E12, 793.2], [1.74593094E12, 820.7999999999995], [1.74593316E12, 742.35], [1.74593538E12, 812.6999999999999], [1.74592974E12, 830.2000000000003], [1.74593196E12, 870.5999999999995], [1.74593418E12, 828.6], [1.74593298E12, 749.4999999999991], [1.74593076E12, 859.2999999999997], [1.7459352E12, 827.9999999999986], [1.74592854E12, 695.4], [1.74593178E12, 919.5500000000002], [1.74593502E12, 851.1999999999999], [1.74592956E12, 839.25], [1.745934E12, 885.7], [1.7459325E12, 778.5999999999997], [1.74593574E12, 632.0], [1.74592908E12, 696.5999999999997], [1.74593472E12, 764.3999999999996], [1.74593028E12, 773.5499999999996], [1.74592806E12, 920.7000000000002], [1.7459313E12, 793.6499999999997], [1.74593352E12, 794.8], [1.74593454E12, 786.0], [1.74593556E12, 842.6], [1.7459301E12, 805.8499999999997], [1.74593232E12, 689.0499999999998], [1.7459289E12, 803.5], [1.74593334E12, 808.9499999999998], [1.74593112E12, 868.3999999999997], [1.74593436E12, 805.0000000000001], [1.74593214E12, 836.3999999999996], [1.74593508E12, 840.3999999999995], [1.74592962E12, 800.6000000000001], [1.74593184E12, 654.5], [1.74592842E12, 852.6000000000003], [1.74593286E12, 668.4000000000001], [1.74593064E12, 895.0], [1.74593388E12, 989.9999999999999], [1.74593166E12, 870.4], [1.74592926E12, 966.2999999999994], [1.74592944E12, 797.5500000000001], [1.74593046E12, 906.7999999999995], [1.74593268E12, 688.2], [1.7459349E12, 748.25], [1.74592824E12, 895.25], [1.74593148E12, 834.6000000000005], [1.7459337E12, 854.5], [1.74592878E12, 720.65], [1.74592998E12, 831.9000000000001], [1.7459322E12, 687.0], [1.74593442E12, 877.25], [1.74593322E12, 795.0499999999998], [1.745931E12, 763.75], [1.74593544E12, 850.7999999999998], [1.74592896E12, 665.4999999999998], [1.74593202E12, 729.9999999999999], [1.7459286E12, 747.25], [1.74593526E12, 779.5999999999992], [1.7459298E12, 764.3999999999996], [1.74593424E12, 824.0], [1.74593082E12, 820.5999999999999], [1.74593304E12, 806.6499999999994], [1.74593406E12, 743.3999999999994]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.74593154E12, 122.0], [1.74593478E12, 129.0], [1.74592812E12, 137.0], [1.74593376E12, 142.0], [1.74592932E12, 143.0], [1.74593256E12, 151.0], [1.74593034E12, 114.0], [1.74593358E12, 129.0], [1.7459358E12, 125.0], [1.74593136E12, 189.0], [1.7459346E12, 136.0], [1.74592794E12, 173.0], [1.74593238E12, 132.0], [1.74593016E12, 145.0], [1.74592914E12, 152.0], [1.74593118E12, 130.0], [1.7459334E12, 150.0], [1.74593562E12, 135.0], [1.74593088E12, 124.0], [1.74593412E12, 117.0], [1.7459319E12, 120.0], [1.74592968E12, 135.0], [1.74592866E12, 147.0], [1.7459307E12, 131.0], [1.74593292E12, 128.0], [1.74593514E12, 122.0], [1.7459283E12, 140.0], [1.7459295E12, 120.0], [1.74593172E12, 134.0], [1.74593394E12, 121.0], [1.74593274E12, 120.0], [1.74593052E12, 131.0], [1.74593496E12, 116.0], [1.74592848E12, 124.0], [1.74593346E12, 126.0], [1.74593124E12, 126.0], [1.74593568E12, 116.0], [1.74592902E12, 150.0], [1.74593226E12, 158.0], [1.7459355E12, 165.0], [1.74593004E12, 148.0], [1.74593448E12, 127.0], [1.745928E12, 126.0], [1.74593106E12, 130.0], [1.74593328E12, 127.0], [1.7459343E12, 136.0], [1.74593532E12, 169.0], [1.74592884E12, 163.0], [1.74592986E12, 131.0], [1.74593208E12, 116.0], [1.7459331E12, 132.0], [1.74593058E12, 148.0], [1.7459328E12, 125.0], [1.74593382E12, 139.0], [1.74593484E12, 130.0], [1.74592836E12, 129.0], [1.74592938E12, 153.0], [1.7459316E12, 129.0], [1.74593262E12, 137.0], [1.7459304E12, 178.0], [1.74593364E12, 126.0], [1.74593586E12, 158.0], [1.7459292E12, 119.0], [1.74593142E12, 124.0], [1.74592818E12, 146.0], [1.74593466E12, 142.0], [1.74593022E12, 144.0], [1.74593244E12, 162.0], [1.74592992E12, 145.0], [1.74592872E12, 144.0], [1.74593094E12, 147.0], [1.74593316E12, 168.0], [1.74593538E12, 136.0], [1.74592974E12, 136.0], [1.74593196E12, 146.0], [1.74593418E12, 124.0], [1.74593298E12, 131.0], [1.74593076E12, 127.0], [1.7459352E12, 138.0], [1.74592854E12, 135.0], [1.74593178E12, 124.0], [1.74593502E12, 145.0], [1.74592956E12, 123.0], [1.745934E12, 115.0], [1.7459325E12, 117.0], [1.74593574E12, 131.0], [1.74592908E12, 142.0], [1.74593472E12, 166.0], [1.74593028E12, 123.0], [1.74592806E12, 143.0], [1.7459313E12, 153.0], [1.74593352E12, 116.0], [1.74593454E12, 126.0], [1.74593556E12, 117.0], [1.7459301E12, 139.0], [1.74593232E12, 134.0], [1.7459289E12, 125.0], [1.74593334E12, 149.0], [1.74593112E12, 167.0], [1.74593436E12, 149.0], [1.74593214E12, 146.0], [1.74593508E12, 118.0], [1.74592962E12, 131.0], [1.74593184E12, 135.0], [1.74592842E12, 141.0], [1.74593286E12, 143.0], [1.74593064E12, 148.0], [1.74593388E12, 122.0], [1.74593166E12, 126.0], [1.74592926E12, 143.0], [1.74592944E12, 169.0], [1.74593046E12, 129.0], [1.74593268E12, 141.0], [1.7459349E12, 131.0], [1.74592824E12, 146.0], [1.74593148E12, 119.0], [1.7459337E12, 114.0], [1.74592878E12, 131.0], [1.74592998E12, 151.0], [1.7459322E12, 121.0], [1.74593442E12, 137.0], [1.74593322E12, 125.0], [1.745931E12, 123.0], [1.74593544E12, 197.0], [1.74592896E12, 122.0], [1.74593202E12, 135.0], [1.7459286E12, 151.0], [1.74593526E12, 147.0], [1.7459298E12, 130.0], [1.74593424E12, 140.0], [1.74593082E12, 126.0], [1.74593304E12, 153.0], [1.74593406E12, 126.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74593154E12, 344.0], [1.74593478E12, 346.0], [1.74592812E12, 340.0], [1.74593376E12, 345.0], [1.74592932E12, 339.0], [1.74593256E12, 342.0], [1.74593034E12, 339.0], [1.74593358E12, 344.0], [1.7459358E12, 346.0], [1.74593136E12, 340.0], [1.7459346E12, 347.0], [1.74592794E12, 343.0], [1.74593238E12, 343.0], [1.74593016E12, 340.0], [1.74592914E12, 335.5], [1.74593118E12, 341.0], [1.7459334E12, 346.0], [1.74593562E12, 348.0], [1.74593088E12, 339.0], [1.74593412E12, 346.0], [1.7459319E12, 343.5], [1.74592968E12, 339.0], [1.74592866E12, 341.0], [1.7459307E12, 342.0], [1.74593292E12, 344.0], [1.74593514E12, 346.0], [1.7459283E12, 340.0], [1.7459295E12, 337.0], [1.74593172E12, 340.0], [1.74593394E12, 344.0], [1.74593274E12, 345.0], [1.74593052E12, 339.0], [1.74593496E12, 346.0], [1.74592848E12, 341.0], [1.74593346E12, 346.0], [1.74593124E12, 341.0], [1.74593568E12, 347.0], [1.74592902E12, 340.0], [1.74593226E12, 343.0], [1.7459355E12, 347.0], [1.74593004E12, 342.0], [1.74593448E12, 345.0], [1.745928E12, 343.0], [1.74593106E12, 340.0], [1.74593328E12, 343.0], [1.7459343E12, 344.0], [1.74593532E12, 348.0], [1.74592884E12, 339.0], [1.74592986E12, 340.0], [1.74593208E12, 342.0], [1.7459331E12, 342.5], [1.74593058E12, 340.0], [1.7459328E12, 346.0], [1.74593382E12, 345.0], [1.74593484E12, 345.0], [1.74592836E12, 340.0], [1.74592938E12, 339.0], [1.7459316E12, 340.0], [1.74593262E12, 341.0], [1.7459304E12, 341.0], [1.74593364E12, 343.0], [1.74593586E12, 345.0], [1.7459292E12, 337.0], [1.74593142E12, 340.0], [1.74592818E12, 340.0], [1.74593466E12, 346.0], [1.74593022E12, 340.0], [1.74593244E12, 342.0], [1.74592992E12, 339.0], [1.74592872E12, 338.0], [1.74593094E12, 337.0], [1.74593316E12, 344.0], [1.74593538E12, 346.5], [1.74592974E12, 338.0], [1.74593196E12, 345.0], [1.74593418E12, 347.0], [1.74593298E12, 343.0], [1.74593076E12, 342.0], [1.7459352E12, 345.5], [1.74592854E12, 339.0], [1.74593178E12, 340.0], [1.74593502E12, 347.0], [1.74592956E12, 339.0], [1.745934E12, 346.0], [1.7459325E12, 344.0], [1.74593574E12, 347.0], [1.74592908E12, 334.0], [1.74593472E12, 348.0], [1.74593028E12, 340.0], [1.74592806E12, 340.0], [1.7459313E12, 340.0], [1.74593352E12, 343.0], [1.74593454E12, 347.0], [1.74593556E12, 349.0], [1.7459301E12, 340.0], [1.74593232E12, 345.0], [1.7459289E12, 340.0], [1.74593334E12, 344.0], [1.74593112E12, 341.0], [1.74593436E12, 346.0], [1.74593214E12, 342.0], [1.74593508E12, 347.0], [1.74592962E12, 341.0], [1.74593184E12, 342.0], [1.74592842E12, 339.0], [1.74593286E12, 346.0], [1.74593064E12, 341.0], [1.74593388E12, 344.0], [1.74593166E12, 341.0], [1.74592926E12, 338.0], [1.74592944E12, 339.0], [1.74593046E12, 341.0], [1.74593268E12, 340.0], [1.7459349E12, 347.0], [1.74592824E12, 341.5], [1.74593148E12, 342.0], [1.7459337E12, 346.0], [1.74592878E12, 338.0], [1.74592998E12, 339.0], [1.7459322E12, 343.0], [1.74593442E12, 345.0], [1.74593322E12, 345.0], [1.745931E12, 340.0], [1.74593544E12, 348.0], [1.74592896E12, 339.0], [1.74593202E12, 344.0], [1.7459286E12, 338.0], [1.74593526E12, 350.0], [1.7459298E12, 338.0], [1.74593424E12, 347.5], [1.74593082E12, 339.0], [1.74593304E12, 345.0], [1.74593406E12, 345.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74593586E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 337.0, "minX": 1.0, "maxY": 716.5, "series": [{"data": [[1.0, 716.5], [2.0, 348.0], [4.0, 337.0], [3.0, 342.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 328.0, "series": [{"data": [[1.0, 0.0], [2.0, 162.0], [4.0, 163.0], [3.0, 328.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.55, "minX": 1.74592794E12, "maxY": 2.8, "series": [{"data": [[1.74593154E12, 2.6666666666666665], [1.74593478E12, 2.683333333333333], [1.74592812E12, 2.4], [1.74593376E12, 2.4833333333333334], [1.74592932E12, 2.533333333333333], [1.74593256E12, 2.433333333333333], [1.74593034E12, 2.566666666666667], [1.74593358E12, 2.533333333333333], [1.7459358E12, 2.5833333333333335], [1.74593136E12, 2.6], [1.7459346E12, 2.55], [1.74592794E12, 1.55], [1.74593238E12, 2.5833333333333335], [1.74593016E12, 2.45], [1.74592914E12, 2.6333333333333333], [1.74593118E12, 2.6], [1.7459334E12, 2.533333333333333], [1.74593562E12, 2.5166666666666666], [1.74593088E12, 2.6166666666666667], [1.74593412E12, 2.566666666666667], [1.7459319E12, 2.466666666666667], [1.74592968E12, 2.5166666666666666], [1.74592866E12, 2.533333333333333], [1.7459307E12, 2.75], [1.74593292E12, 2.466666666666667], [1.74593514E12, 2.5166666666666666], [1.7459283E12, 2.4833333333333334], [1.7459295E12, 2.533333333333333], [1.74593172E12, 2.45], [1.74593394E12, 2.466666666666667], [1.74593274E12, 2.4833333333333334], [1.74593052E12, 2.6166666666666667], [1.74593496E12, 2.5], [1.74592848E12, 2.45], [1.74593346E12, 2.4833333333333334], [1.74593124E12, 2.6], [1.74593568E12, 2.4], [1.74592902E12, 2.533333333333333], [1.74593226E12, 2.533333333333333], [1.7459355E12, 2.466666666666667], [1.74593004E12, 2.55], [1.74593448E12, 2.45], [1.745928E12, 2.5], [1.74593106E12, 2.55], [1.74593328E12, 2.4833333333333334], [1.7459343E12, 2.6166666666666667], [1.74593532E12, 2.533333333333333], [1.74592884E12, 2.6], [1.74592986E12, 2.466666666666667], [1.74593208E12, 2.55], [1.7459331E12, 2.466666666666667], [1.74593058E12, 2.55], [1.7459328E12, 2.533333333333333], [1.74593382E12, 2.4166666666666665], [1.74593484E12, 2.6166666666666667], [1.74592836E12, 2.433333333333333], [1.74592938E12, 2.5], [1.7459316E12, 2.716666666666667], [1.74593262E12, 2.8], [1.7459304E12, 2.533333333333333], [1.74593364E12, 2.5], [1.74593586E12, 1.8166666666666667], [1.7459292E12, 2.6166666666666667], [1.74593142E12, 2.433333333333333], [1.74592818E12, 2.566666666666667], [1.74593466E12, 2.566666666666667], [1.74593022E12, 2.566666666666667], [1.74593244E12, 2.4166666666666665], [1.74592992E12, 2.4], [1.74592872E12, 2.6166666666666667], [1.74593094E12, 2.5], [1.74593316E12, 2.533333333333333], [1.74593538E12, 2.5], [1.74592974E12, 2.5166666666666666], [1.74593196E12, 2.466666666666667], [1.74593418E12, 2.433333333333333], [1.74593298E12, 2.6333333333333333], [1.74593076E12, 2.4166666666666665], [1.7459352E12, 2.466666666666667], [1.74592854E12, 2.533333333333333], [1.74593178E12, 2.433333333333333], [1.74593502E12, 2.4166666666666665], [1.74592956E12, 2.5], [1.745934E12, 2.3666666666666667], [1.7459325E12, 2.5], [1.74593574E12, 2.65], [1.74592908E12, 2.5833333333333335], [1.74593472E12, 2.4166666666666665], [1.74593028E12, 2.466666666666667], [1.74592806E12, 2.35], [1.7459313E12, 2.533333333333333], [1.74593352E12, 2.45], [1.74593454E12, 2.35], [1.74593556E12, 2.5166666666666666], [1.7459301E12, 2.5], [1.74593232E12, 2.533333333333333], [1.7459289E12, 2.566666666666667], [1.74593334E12, 2.5], [1.74593112E12, 2.3833333333333333], [1.74593436E12, 2.5166666666666666], [1.74593214E12, 2.45], [1.74593508E12, 2.466666666666667], [1.74592962E12, 2.5166666666666666], [1.74593184E12, 2.7333333333333334], [1.74592842E12, 2.6], [1.74593286E12, 2.5166666666666666], [1.74593064E12, 2.5833333333333335], [1.74593388E12, 2.3833333333333333], [1.74593166E12, 2.5166666666666666], [1.74592926E12, 2.3333333333333335], [1.74592944E12, 2.433333333333333], [1.74593046E12, 2.45], [1.74593268E12, 2.6166666666666667], [1.7459349E12, 2.566666666666667], [1.74592824E12, 2.4], [1.74593148E12, 2.5166666666666666], [1.7459337E12, 2.4833333333333334], [1.74592878E12, 2.7], [1.74592998E12, 2.6], [1.7459322E12, 2.566666666666667], [1.74593442E12, 2.4], [1.74593322E12, 2.466666666666667], [1.745931E12, 2.566666666666667], [1.74593544E12, 2.3833333333333333], [1.74592896E12, 2.533333333333333], [1.74593202E12, 2.533333333333333], [1.7459286E12, 2.566666666666667], [1.74593526E12, 2.3833333333333333], [1.7459298E12, 2.5833333333333335], [1.74593424E12, 2.5], [1.74593082E12, 2.5833333333333335], [1.74593304E12, 2.5], [1.74593406E12, 2.6666666666666665]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74593586E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.7666666666666667, "minX": 1.74592794E12, "maxY": 1.4, "series": [{"data": [[1.74593154E12, 1.3333333333333333], [1.74593478E12, 1.35], [1.74592812E12, 1.2], [1.74593376E12, 1.2333333333333334], [1.74592932E12, 1.2666666666666666], [1.74593256E12, 1.2166666666666666], [1.74593034E12, 1.2833333333333334], [1.74593358E12, 1.2666666666666666], [1.7459358E12, 1.2833333333333334], [1.74593136E12, 1.3], [1.7459346E12, 1.2833333333333334], [1.74592794E12, 0.7666666666666667], [1.74593238E12, 1.3], [1.74593016E12, 1.2166666666666666], [1.74592914E12, 1.3166666666666667], [1.74593118E12, 1.3], [1.7459334E12, 1.2666666666666666], [1.74593562E12, 1.25], [1.74593088E12, 1.3], [1.74593412E12, 1.2833333333333334], [1.7459319E12, 1.2333333333333334], [1.74592968E12, 1.25], [1.74592866E12, 1.2666666666666666], [1.7459307E12, 1.3833333333333333], [1.74593292E12, 1.2333333333333334], [1.74593514E12, 1.25], [1.7459283E12, 1.2333333333333334], [1.7459295E12, 1.2666666666666666], [1.74593172E12, 1.2166666666666666], [1.74593394E12, 1.2333333333333334], [1.74593274E12, 1.2333333333333334], [1.74593052E12, 1.3], [1.74593496E12, 1.25], [1.74592848E12, 1.2333333333333334], [1.74593346E12, 1.25], [1.74593124E12, 1.3], [1.74593568E12, 1.2], [1.74592902E12, 1.2666666666666666], [1.74593226E12, 1.2666666666666666], [1.7459355E12, 1.2333333333333334], [1.74593004E12, 1.2833333333333334], [1.74593448E12, 1.2333333333333334], [1.745928E12, 1.25], [1.74593106E12, 1.2833333333333334], [1.74593328E12, 1.2333333333333334], [1.7459343E12, 1.3166666666666667], [1.74593532E12, 1.2666666666666666], [1.74592884E12, 1.3], [1.74592986E12, 1.2333333333333334], [1.74593208E12, 1.2833333333333334], [1.7459331E12, 1.2333333333333334], [1.74593058E12, 1.2833333333333334], [1.7459328E12, 1.2666666666666666], [1.74593382E12, 1.2166666666666666], [1.74593484E12, 1.3], [1.74592836E12, 1.2166666666666666], [1.74592938E12, 1.25], [1.7459316E12, 1.35], [1.74593262E12, 1.4], [1.7459304E12, 1.2666666666666666], [1.74593364E12, 1.25], [1.74593586E12, 0.9166666666666666], [1.7459292E12, 1.3], [1.74593142E12, 1.2166666666666666], [1.74592818E12, 1.2833333333333334], [1.74593466E12, 1.2833333333333334], [1.74593022E12, 1.2833333333333334], [1.74593244E12, 1.2], [1.74592992E12, 1.2], [1.74592872E12, 1.3], [1.74593094E12, 1.25], [1.74593316E12, 1.2666666666666666], [1.74593538E12, 1.25], [1.74592974E12, 1.2666666666666666], [1.74593196E12, 1.2333333333333334], [1.74593418E12, 1.2166666666666666], [1.74593298E12, 1.3166666666666667], [1.74593076E12, 1.2], [1.7459352E12, 1.2333333333333334], [1.74592854E12, 1.2666666666666666], [1.74593178E12, 1.2166666666666666], [1.74593502E12, 1.2166666666666666], [1.74592956E12, 1.25], [1.745934E12, 1.1833333333333333], [1.7459325E12, 1.25], [1.74593574E12, 1.3333333333333333], [1.74592908E12, 1.3], [1.74593472E12, 1.2], [1.74593028E12, 1.2333333333333334], [1.74592806E12, 1.1833333333333333], [1.7459313E12, 1.2666666666666666], [1.74593352E12, 1.2166666666666666], [1.74593454E12, 1.1666666666666667], [1.74593556E12, 1.2666666666666666], [1.7459301E12, 1.25], [1.74593232E12, 1.2666666666666666], [1.7459289E12, 1.2833333333333334], [1.74593334E12, 1.25], [1.74593112E12, 1.1833333333333333], [1.74593436E12, 1.25], [1.74593214E12, 1.2166666666666666], [1.74593508E12, 1.2333333333333334], [1.74592962E12, 1.2666666666666666], [1.74593184E12, 1.3666666666666667], [1.74592842E12, 1.3], [1.74593286E12, 1.2666666666666666], [1.74593064E12, 1.2833333333333334], [1.74593388E12, 1.1833333333333333], [1.74593166E12, 1.2666666666666666], [1.74592926E12, 1.1666666666666667], [1.74592944E12, 1.2166666666666666], [1.74593046E12, 1.2333333333333334], [1.74593268E12, 1.3166666666666667], [1.7459349E12, 1.2833333333333334], [1.74592824E12, 1.2], [1.74593148E12, 1.2666666666666666], [1.7459337E12, 1.25], [1.74592878E12, 1.35], [1.74592998E12, 1.3], [1.7459322E12, 1.2833333333333334], [1.74593442E12, 1.2], [1.74593322E12, 1.2333333333333334], [1.745931E12, 1.2833333333333334], [1.74593544E12, 1.1833333333333333], [1.74592896E12, 1.2666666666666666], [1.74593202E12, 1.2666666666666666], [1.7459286E12, 1.2833333333333334], [1.74593526E12, 1.2], [1.7459298E12, 1.2833333333333334], [1.74593424E12, 1.25], [1.74593082E12, 1.3], [1.74593304E12, 1.25], [1.74593406E12, 1.3333333333333333]], "isOverall": false, "label": "0", "isController": false}, {"data": [[1.74593154E12, 1.3333333333333333], [1.74593478E12, 1.3333333333333333], [1.74592812E12, 1.2], [1.74593376E12, 1.25], [1.74592932E12, 1.2666666666666666], [1.74593256E12, 1.2166666666666666], [1.74593034E12, 1.2833333333333334], [1.74593358E12, 1.2666666666666666], [1.7459358E12, 1.3], [1.74593136E12, 1.3], [1.7459346E12, 1.2666666666666666], [1.74592794E12, 0.7666666666666667], [1.74593238E12, 1.2833333333333334], [1.74593016E12, 1.2333333333333334], [1.74592914E12, 1.3166666666666667], [1.74593118E12, 1.3], [1.7459334E12, 1.2666666666666666], [1.74593562E12, 1.2666666666666666], [1.74593088E12, 1.3166666666666667], [1.74593412E12, 1.2833333333333334], [1.7459319E12, 1.2333333333333334], [1.74592968E12, 1.2666666666666666], [1.74592866E12, 1.2666666666666666], [1.7459307E12, 1.3666666666666667], [1.74593292E12, 1.2333333333333334], [1.74593514E12, 1.2666666666666666], [1.7459283E12, 1.25], [1.7459295E12, 1.2666666666666666], [1.74593172E12, 1.2333333333333334], [1.74593394E12, 1.2333333333333334], [1.74593274E12, 1.25], [1.74593052E12, 1.3166666666666667], [1.74593496E12, 1.25], [1.74592848E12, 1.2166666666666666], [1.74593346E12, 1.2333333333333334], [1.74593124E12, 1.3], [1.74593568E12, 1.2], [1.74592902E12, 1.2666666666666666], [1.74593226E12, 1.2666666666666666], [1.7459355E12, 1.2333333333333334], [1.74593004E12, 1.2666666666666666], [1.74593448E12, 1.2166666666666666], [1.745928E12, 1.25], [1.74593106E12, 1.2666666666666666], [1.74593328E12, 1.25], [1.7459343E12, 1.3], [1.74593532E12, 1.2666666666666666], [1.74592884E12, 1.3], [1.74592986E12, 1.2333333333333334], [1.74593208E12, 1.2666666666666666], [1.7459331E12, 1.2333333333333334], [1.74593058E12, 1.2666666666666666], [1.7459328E12, 1.2666666666666666], [1.74593382E12, 1.2], [1.74593484E12, 1.3166666666666667], [1.74592836E12, 1.2166666666666666], [1.74592938E12, 1.25], [1.7459316E12, 1.3666666666666667], [1.74593262E12, 1.4], [1.7459304E12, 1.2666666666666666], [1.74593364E12, 1.25], [1.74593586E12, 0.9166666666666666], [1.7459292E12, 1.3166666666666667], [1.74593142E12, 1.2166666666666666], [1.74592818E12, 1.2833333333333334], [1.74593466E12, 1.2833333333333334], [1.74593022E12, 1.2833333333333334], [1.74593244E12, 1.2166666666666666], [1.74592992E12, 1.2], [1.74592872E12, 1.3166666666666667], [1.74593094E12, 1.25], [1.74593316E12, 1.2666666666666666], [1.74593538E12, 1.25], [1.74592974E12, 1.25], [1.74593196E12, 1.2333333333333334], [1.74593418E12, 1.2166666666666666], [1.74593298E12, 1.3166666666666667], [1.74593076E12, 1.2166666666666666], [1.7459352E12, 1.2333333333333334], [1.74592854E12, 1.2666666666666666], [1.74593178E12, 1.2166666666666666], [1.74593502E12, 1.2], [1.74592956E12, 1.25], [1.745934E12, 1.1833333333333333], [1.7459325E12, 1.25], [1.74593574E12, 1.3166666666666667], [1.74592908E12, 1.2833333333333334], [1.74593472E12, 1.2166666666666666], [1.74593028E12, 1.2333333333333334], [1.74592806E12, 1.1666666666666667], [1.7459313E12, 1.2666666666666666], [1.74593352E12, 1.2333333333333334], [1.74593454E12, 1.1833333333333333], [1.74593556E12, 1.25], [1.7459301E12, 1.25], [1.74593232E12, 1.2666666666666666], [1.7459289E12, 1.2833333333333334], [1.74593334E12, 1.25], [1.74593112E12, 1.2], [1.74593436E12, 1.2666666666666666], [1.74593214E12, 1.2333333333333334], [1.74593508E12, 1.2333333333333334], [1.74592962E12, 1.25], [1.74593184E12, 1.3666666666666667], [1.74592842E12, 1.3], [1.74593286E12, 1.25], [1.74593064E12, 1.3], [1.74593388E12, 1.2], [1.74593166E12, 1.25], [1.74592926E12, 1.1666666666666667], [1.74592944E12, 1.2166666666666666], [1.74593046E12, 1.2166666666666666], [1.74593268E12, 1.3], [1.7459349E12, 1.2833333333333334], [1.74592824E12, 1.2], [1.74593148E12, 1.25], [1.7459337E12, 1.2333333333333334], [1.74592878E12, 1.35], [1.74592998E12, 1.3], [1.7459322E12, 1.2833333333333334], [1.74593442E12, 1.2], [1.74593322E12, 1.2333333333333334], [1.745931E12, 1.2833333333333334], [1.74593544E12, 1.2], [1.74592896E12, 1.2666666666666666], [1.74593202E12, 1.2666666666666666], [1.7459286E12, 1.2833333333333334], [1.74593526E12, 1.1833333333333333], [1.7459298E12, 1.3], [1.74593424E12, 1.25], [1.74593082E12, 1.2833333333333334], [1.74593304E12, 1.25], [1.74593406E12, 1.3333333333333333]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74593586E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.7666666666666667, "minX": 1.74592794E12, "maxY": 1.4, "series": [{"data": [[1.74593154E12, 1.3333333333333333], [1.74593478E12, 1.3333333333333333], [1.74592812E12, 1.2], [1.74593376E12, 1.25], [1.74592932E12, 1.2666666666666666], [1.74593256E12, 1.2166666666666666], [1.74593034E12, 1.2833333333333334], [1.74593358E12, 1.2666666666666666], [1.7459358E12, 1.3], [1.74593136E12, 1.3], [1.7459346E12, 1.2666666666666666], [1.74592794E12, 0.7666666666666667], [1.74593238E12, 1.2833333333333334], [1.74593016E12, 1.2333333333333334], [1.74592914E12, 1.3166666666666667], [1.74593118E12, 1.3], [1.7459334E12, 1.2666666666666666], [1.74593562E12, 1.2666666666666666], [1.74593088E12, 1.3166666666666667], [1.74593412E12, 1.2833333333333334], [1.7459319E12, 1.2333333333333334], [1.74592968E12, 1.2666666666666666], [1.74592866E12, 1.2666666666666666], [1.7459307E12, 1.3666666666666667], [1.74593292E12, 1.2333333333333334], [1.74593514E12, 1.2666666666666666], [1.7459283E12, 1.25], [1.7459295E12, 1.2666666666666666], [1.74593172E12, 1.2333333333333334], [1.74593394E12, 1.2333333333333334], [1.74593274E12, 1.25], [1.74593052E12, 1.3166666666666667], [1.74593496E12, 1.25], [1.74592848E12, 1.2166666666666666], [1.74593346E12, 1.2333333333333334], [1.74593124E12, 1.3], [1.74593568E12, 1.2], [1.74592902E12, 1.2666666666666666], [1.74593226E12, 1.2666666666666666], [1.7459355E12, 1.2333333333333334], [1.74593004E12, 1.2666666666666666], [1.74593448E12, 1.2166666666666666], [1.745928E12, 1.25], [1.74593106E12, 1.2666666666666666], [1.74593328E12, 1.25], [1.7459343E12, 1.3], [1.74593532E12, 1.2666666666666666], [1.74592884E12, 1.3], [1.74592986E12, 1.2333333333333334], [1.74593208E12, 1.2666666666666666], [1.7459331E12, 1.2333333333333334], [1.74593058E12, 1.2666666666666666], [1.7459328E12, 1.2666666666666666], [1.74593382E12, 1.2], [1.74593484E12, 1.3166666666666667], [1.74592836E12, 1.2166666666666666], [1.74592938E12, 1.25], [1.7459316E12, 1.3666666666666667], [1.74593262E12, 1.4], [1.7459304E12, 1.2666666666666666], [1.74593364E12, 1.25], [1.74593586E12, 0.9166666666666666], [1.7459292E12, 1.3166666666666667], [1.74593142E12, 1.2166666666666666], [1.74592818E12, 1.2833333333333334], [1.74593466E12, 1.2833333333333334], [1.74593022E12, 1.2833333333333334], [1.74593244E12, 1.2166666666666666], [1.74592992E12, 1.2], [1.74592872E12, 1.3166666666666667], [1.74593094E12, 1.25], [1.74593316E12, 1.2666666666666666], [1.74593538E12, 1.25], [1.74592974E12, 1.25], [1.74593196E12, 1.2333333333333334], [1.74593418E12, 1.2166666666666666], [1.74593298E12, 1.3166666666666667], [1.74593076E12, 1.2166666666666666], [1.7459352E12, 1.2333333333333334], [1.74592854E12, 1.2666666666666666], [1.74593178E12, 1.2166666666666666], [1.74593502E12, 1.2], [1.74592956E12, 1.25], [1.745934E12, 1.1833333333333333], [1.7459325E12, 1.25], [1.74593574E12, 1.3166666666666667], [1.74592908E12, 1.2833333333333334], [1.74593472E12, 1.2166666666666666], [1.74593028E12, 1.2333333333333334], [1.74592806E12, 1.1666666666666667], [1.7459313E12, 1.2666666666666666], [1.74593352E12, 1.2333333333333334], [1.74593454E12, 1.1833333333333333], [1.74593556E12, 1.25], [1.7459301E12, 1.25], [1.74593232E12, 1.2666666666666666], [1.7459289E12, 1.2833333333333334], [1.74593334E12, 1.25], [1.74593112E12, 1.2], [1.74593436E12, 1.2666666666666666], [1.74593214E12, 1.2333333333333334], [1.74593508E12, 1.2333333333333334], [1.74592962E12, 1.25], [1.74593184E12, 1.3666666666666667], [1.74592842E12, 1.3], [1.74593286E12, 1.25], [1.74593064E12, 1.3], [1.74593388E12, 1.2], [1.74593166E12, 1.25], [1.74592926E12, 1.1666666666666667], [1.74592944E12, 1.2166666666666666], [1.74593046E12, 1.2166666666666666], [1.74593268E12, 1.3], [1.7459349E12, 1.2833333333333334], [1.74592824E12, 1.2], [1.74593148E12, 1.25], [1.7459337E12, 1.2333333333333334], [1.74592878E12, 1.35], [1.74592998E12, 1.3], [1.7459322E12, 1.2833333333333334], [1.74593442E12, 1.2], [1.74593322E12, 1.2333333333333334], [1.745931E12, 1.2833333333333334], [1.74593544E12, 1.2], [1.74592896E12, 1.2666666666666666], [1.74593202E12, 1.2666666666666666], [1.7459286E12, 1.2833333333333334], [1.74593526E12, 1.1833333333333333], [1.7459298E12, 1.3], [1.74593424E12, 1.25], [1.74593082E12, 1.2833333333333334], [1.74593304E12, 1.25], [1.74593406E12, 1.3333333333333333]], "isOverall": false, "label": "HTTP Request - enroll-success", "isController": false}, {"data": [[1.74593154E12, 1.3333333333333333], [1.74593478E12, 1.35], [1.74592812E12, 1.2], [1.74593376E12, 1.2333333333333334], [1.74592932E12, 1.2666666666666666], [1.74593256E12, 1.2166666666666666], [1.74593034E12, 1.2833333333333334], [1.74593358E12, 1.2666666666666666], [1.7459358E12, 1.2833333333333334], [1.74593136E12, 1.3], [1.7459346E12, 1.2833333333333334], [1.74592794E12, 0.7666666666666667], [1.74593238E12, 1.3], [1.74593016E12, 1.2166666666666666], [1.74592914E12, 1.3166666666666667], [1.74593118E12, 1.3], [1.7459334E12, 1.2666666666666666], [1.74593562E12, 1.25], [1.74593088E12, 1.3], [1.74593412E12, 1.2833333333333334], [1.7459319E12, 1.2333333333333334], [1.74592968E12, 1.25], [1.74592866E12, 1.2666666666666666], [1.7459307E12, 1.3833333333333333], [1.74593292E12, 1.2333333333333334], [1.74593514E12, 1.25], [1.7459283E12, 1.2333333333333334], [1.7459295E12, 1.2666666666666666], [1.74593172E12, 1.2166666666666666], [1.74593394E12, 1.2333333333333334], [1.74593274E12, 1.2333333333333334], [1.74593052E12, 1.3], [1.74593496E12, 1.25], [1.74592848E12, 1.2333333333333334], [1.74593346E12, 1.25], [1.74593124E12, 1.3], [1.74593568E12, 1.2], [1.74592902E12, 1.2666666666666666], [1.74593226E12, 1.2666666666666666], [1.7459355E12, 1.2333333333333334], [1.74593004E12, 1.2833333333333334], [1.74593448E12, 1.2333333333333334], [1.745928E12, 1.25], [1.74593106E12, 1.2833333333333334], [1.74593328E12, 1.2333333333333334], [1.7459343E12, 1.3166666666666667], [1.74593532E12, 1.2666666666666666], [1.74592884E12, 1.3], [1.74592986E12, 1.2333333333333334], [1.74593208E12, 1.2833333333333334], [1.7459331E12, 1.2333333333333334], [1.74593058E12, 1.2833333333333334], [1.7459328E12, 1.2666666666666666], [1.74593382E12, 1.2166666666666666], [1.74593484E12, 1.3], [1.74592836E12, 1.2166666666666666], [1.74592938E12, 1.25], [1.7459316E12, 1.35], [1.74593262E12, 1.4], [1.7459304E12, 1.2666666666666666], [1.74593364E12, 1.25], [1.74593586E12, 0.9166666666666666], [1.7459292E12, 1.3], [1.74593142E12, 1.2166666666666666], [1.74592818E12, 1.2833333333333334], [1.74593466E12, 1.2833333333333334], [1.74593022E12, 1.2833333333333334], [1.74593244E12, 1.2], [1.74592992E12, 1.2], [1.74592872E12, 1.3], [1.74593094E12, 1.25], [1.74593316E12, 1.2666666666666666], [1.74593538E12, 1.25], [1.74592974E12, 1.2666666666666666], [1.74593196E12, 1.2333333333333334], [1.74593418E12, 1.2166666666666666], [1.74593298E12, 1.3166666666666667], [1.74593076E12, 1.2], [1.7459352E12, 1.2333333333333334], [1.74592854E12, 1.2666666666666666], [1.74593178E12, 1.2166666666666666], [1.74593502E12, 1.2166666666666666], [1.74592956E12, 1.25], [1.745934E12, 1.1833333333333333], [1.7459325E12, 1.25], [1.74593574E12, 1.3333333333333333], [1.74592908E12, 1.3], [1.74593472E12, 1.2], [1.74593028E12, 1.2333333333333334], [1.74592806E12, 1.1833333333333333], [1.7459313E12, 1.2666666666666666], [1.74593352E12, 1.2166666666666666], [1.74593454E12, 1.1666666666666667], [1.74593556E12, 1.2666666666666666], [1.7459301E12, 1.25], [1.74593232E12, 1.2666666666666666], [1.7459289E12, 1.2833333333333334], [1.74593334E12, 1.25], [1.74593112E12, 1.1833333333333333], [1.74593436E12, 1.25], [1.74593214E12, 1.2166666666666666], [1.74593508E12, 1.2333333333333334], [1.74592962E12, 1.2666666666666666], [1.74593184E12, 1.3666666666666667], [1.74592842E12, 1.3], [1.74593286E12, 1.2666666666666666], [1.74593064E12, 1.2833333333333334], [1.74593388E12, 1.1833333333333333], [1.74593166E12, 1.2666666666666666], [1.74592926E12, 1.1666666666666667], [1.74592944E12, 1.2166666666666666], [1.74593046E12, 1.2333333333333334], [1.74593268E12, 1.3166666666666667], [1.7459349E12, 1.2833333333333334], [1.74592824E12, 1.2], [1.74593148E12, 1.2666666666666666], [1.7459337E12, 1.25], [1.74592878E12, 1.35], [1.74592998E12, 1.3], [1.7459322E12, 1.2833333333333334], [1.74593442E12, 1.2], [1.74593322E12, 1.2333333333333334], [1.745931E12, 1.2833333333333334], [1.74593544E12, 1.1833333333333333], [1.74592896E12, 1.2666666666666666], [1.74593202E12, 1.2666666666666666], [1.7459286E12, 1.2833333333333334], [1.74593526E12, 1.2], [1.7459298E12, 1.2833333333333334], [1.74593424E12, 1.25], [1.74593082E12, 1.3], [1.74593304E12, 1.25], [1.74593406E12, 1.3333333333333333]], "isOverall": false, "label": "Create CSR-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74593586E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.5333333333333334, "minX": 1.74592794E12, "maxY": 2.8, "series": [{"data": [[1.74593154E12, 2.6666666666666665], [1.74593478E12, 2.683333333333333], [1.74592812E12, 2.4], [1.74593376E12, 2.4833333333333334], [1.74592932E12, 2.533333333333333], [1.74593256E12, 2.433333333333333], [1.74593034E12, 2.566666666666667], [1.74593358E12, 2.533333333333333], [1.7459358E12, 2.5833333333333335], [1.74593136E12, 2.6], [1.7459346E12, 2.55], [1.74592794E12, 1.5333333333333334], [1.74593238E12, 2.5833333333333335], [1.74593016E12, 2.45], [1.74592914E12, 2.6333333333333333], [1.74593118E12, 2.6], [1.7459334E12, 2.533333333333333], [1.74593562E12, 2.5166666666666666], [1.74593088E12, 2.6166666666666667], [1.74593412E12, 2.566666666666667], [1.7459319E12, 2.466666666666667], [1.74592968E12, 2.5166666666666666], [1.74592866E12, 2.533333333333333], [1.7459307E12, 2.75], [1.74593292E12, 2.466666666666667], [1.74593514E12, 2.5166666666666666], [1.7459283E12, 2.4833333333333334], [1.7459295E12, 2.533333333333333], [1.74593172E12, 2.45], [1.74593394E12, 2.466666666666667], [1.74593274E12, 2.4833333333333334], [1.74593052E12, 2.6166666666666667], [1.74593496E12, 2.5], [1.74592848E12, 2.45], [1.74593346E12, 2.4833333333333334], [1.74593124E12, 2.6], [1.74593568E12, 2.4], [1.74592902E12, 2.533333333333333], [1.74593226E12, 2.533333333333333], [1.7459355E12, 2.466666666666667], [1.74593004E12, 2.55], [1.74593448E12, 2.45], [1.745928E12, 2.5], [1.74593106E12, 2.55], [1.74593328E12, 2.4833333333333334], [1.7459343E12, 2.6166666666666667], [1.74593532E12, 2.533333333333333], [1.74592884E12, 2.6], [1.74592986E12, 2.466666666666667], [1.74593208E12, 2.55], [1.7459331E12, 2.466666666666667], [1.74593058E12, 2.55], [1.7459328E12, 2.533333333333333], [1.74593382E12, 2.4166666666666665], [1.74593484E12, 2.6166666666666667], [1.74592836E12, 2.433333333333333], [1.74592938E12, 2.5], [1.7459316E12, 2.716666666666667], [1.74593262E12, 2.8], [1.7459304E12, 2.533333333333333], [1.74593364E12, 2.5], [1.74593586E12, 1.8333333333333333], [1.7459292E12, 2.6166666666666667], [1.74593142E12, 2.433333333333333], [1.74592818E12, 2.566666666666667], [1.74593466E12, 2.566666666666667], [1.74593022E12, 2.566666666666667], [1.74593244E12, 2.4166666666666665], [1.74592992E12, 2.4], [1.74592872E12, 2.6166666666666667], [1.74593094E12, 2.5], [1.74593316E12, 2.533333333333333], [1.74593538E12, 2.5], [1.74592974E12, 2.5166666666666666], [1.74593196E12, 2.466666666666667], [1.74593418E12, 2.433333333333333], [1.74593298E12, 2.6333333333333333], [1.74593076E12, 2.4166666666666665], [1.7459352E12, 2.466666666666667], [1.74592854E12, 2.533333333333333], [1.74593178E12, 2.433333333333333], [1.74593502E12, 2.4166666666666665], [1.74592956E12, 2.5], [1.745934E12, 2.3666666666666667], [1.7459325E12, 2.5], [1.74593574E12, 2.65], [1.74592908E12, 2.5833333333333335], [1.74593472E12, 2.4166666666666665], [1.74593028E12, 2.466666666666667], [1.74592806E12, 2.35], [1.7459313E12, 2.533333333333333], [1.74593352E12, 2.45], [1.74593454E12, 2.35], [1.74593556E12, 2.5166666666666666], [1.7459301E12, 2.5], [1.74593232E12, 2.533333333333333], [1.7459289E12, 2.566666666666667], [1.74593334E12, 2.5], [1.74593112E12, 2.3833333333333333], [1.74593436E12, 2.5166666666666666], [1.74593214E12, 2.45], [1.74593508E12, 2.466666666666667], [1.74592962E12, 2.5166666666666666], [1.74593184E12, 2.7333333333333334], [1.74592842E12, 2.6], [1.74593286E12, 2.5166666666666666], [1.74593064E12, 2.5833333333333335], [1.74593388E12, 2.3833333333333333], [1.74593166E12, 2.5166666666666666], [1.74592926E12, 2.3333333333333335], [1.74592944E12, 2.433333333333333], [1.74593046E12, 2.45], [1.74593268E12, 2.6166666666666667], [1.7459349E12, 2.566666666666667], [1.74592824E12, 2.4], [1.74593148E12, 2.5166666666666666], [1.7459337E12, 2.4833333333333334], [1.74592878E12, 2.7], [1.74592998E12, 2.6], [1.7459322E12, 2.566666666666667], [1.74593442E12, 2.4], [1.74593322E12, 2.466666666666667], [1.745931E12, 2.566666666666667], [1.74593544E12, 2.3833333333333333], [1.74592896E12, 2.533333333333333], [1.74593202E12, 2.533333333333333], [1.7459286E12, 2.566666666666667], [1.74593526E12, 2.3833333333333333], [1.7459298E12, 2.5833333333333335], [1.74593424E12, 2.5], [1.74593082E12, 2.5833333333333335], [1.74593304E12, 2.5], [1.74593406E12, 2.6666666666666665]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74593586E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

