/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 113.0, "minX": 0.0, "maxY": 4337.0, "series": [{"data": [[0.0, 113.0], [0.1, 120.0], [0.2, 126.0], [0.3, 127.0], [0.4, 130.0], [0.5, 131.0], [0.6, 133.0], [0.7, 134.0], [0.8, 135.0], [0.9, 137.0], [1.0, 138.0], [1.1, 140.0], [1.2, 142.0], [1.3, 143.0], [1.4, 144.0], [1.5, 146.0], [1.6, 147.0], [1.7, 148.0], [1.8, 149.0], [1.9, 150.0], [2.0, 151.0], [2.1, 152.0], [2.2, 152.0], [2.3, 153.0], [2.4, 154.0], [2.5, 155.0], [2.6, 155.0], [2.7, 156.0], [2.8, 156.0], [2.9, 157.0], [3.0, 158.0], [3.1, 159.0], [3.2, 160.0], [3.3, 161.0], [3.4, 162.0], [3.5, 162.0], [3.6, 163.0], [3.7, 164.0], [3.8, 165.0], [3.9, 166.0], [4.0, 166.0], [4.1, 167.0], [4.2, 167.0], [4.3, 168.0], [4.4, 169.0], [4.5, 169.0], [4.6, 170.0], [4.7, 171.0], [4.8, 172.0], [4.9, 172.0], [5.0, 173.0], [5.1, 173.0], [5.2, 174.0], [5.3, 175.0], [5.4, 175.0], [5.5, 176.0], [5.6, 176.0], [5.7, 177.0], [5.8, 178.0], [5.9, 178.0], [6.0, 179.0], [6.1, 180.0], [6.2, 180.0], [6.3, 181.0], [6.4, 182.0], [6.5, 183.0], [6.6, 183.0], [6.7, 184.0], [6.8, 185.0], [6.9, 185.0], [7.0, 186.0], [7.1, 186.0], [7.2, 187.0], [7.3, 188.0], [7.4, 188.0], [7.5, 188.0], [7.6, 189.0], [7.7, 190.0], [7.8, 191.0], [7.9, 192.0], [8.0, 192.0], [8.1, 192.0], [8.2, 193.0], [8.3, 193.0], [8.4, 194.0], [8.5, 195.0], [8.6, 195.0], [8.7, 196.0], [8.8, 197.0], [8.9, 197.0], [9.0, 198.0], [9.1, 198.0], [9.2, 199.0], [9.3, 200.0], [9.4, 201.0], [9.5, 201.0], [9.6, 202.0], [9.7, 202.0], [9.8, 202.0], [9.9, 203.0], [10.0, 204.0], [10.1, 204.0], [10.2, 205.0], [10.3, 205.0], [10.4, 206.0], [10.5, 206.0], [10.6, 207.0], [10.7, 207.0], [10.8, 208.0], [10.9, 209.0], [11.0, 209.0], [11.1, 210.0], [11.2, 210.0], [11.3, 211.0], [11.4, 211.0], [11.5, 212.0], [11.6, 213.0], [11.7, 213.0], [11.8, 214.0], [11.9, 214.0], [12.0, 214.0], [12.1, 215.0], [12.2, 215.0], [12.3, 215.0], [12.4, 216.0], [12.5, 217.0], [12.6, 217.0], [12.7, 218.0], [12.8, 218.0], [12.9, 219.0], [13.0, 219.0], [13.1, 220.0], [13.2, 220.0], [13.3, 221.0], [13.4, 221.0], [13.5, 222.0], [13.6, 222.0], [13.7, 223.0], [13.8, 223.0], [13.9, 224.0], [14.0, 224.0], [14.1, 224.0], [14.2, 225.0], [14.3, 225.0], [14.4, 226.0], [14.5, 226.0], [14.6, 227.0], [14.7, 227.0], [14.8, 227.0], [14.9, 228.0], [15.0, 229.0], [15.1, 229.0], [15.2, 230.0], [15.3, 231.0], [15.4, 231.0], [15.5, 231.0], [15.6, 232.0], [15.7, 232.0], [15.8, 232.0], [15.9, 233.0], [16.0, 233.0], [16.1, 234.0], [16.2, 234.0], [16.3, 235.0], [16.4, 235.0], [16.5, 235.0], [16.6, 236.0], [16.7, 236.0], [16.8, 237.0], [16.9, 237.0], [17.0, 238.0], [17.1, 238.0], [17.2, 238.0], [17.3, 239.0], [17.4, 239.0], [17.5, 240.0], [17.6, 240.0], [17.7, 241.0], [17.8, 241.0], [17.9, 242.0], [18.0, 242.0], [18.1, 243.0], [18.2, 243.0], [18.3, 244.0], [18.4, 244.0], [18.5, 244.0], [18.6, 245.0], [18.7, 245.0], [18.8, 246.0], [18.9, 246.0], [19.0, 247.0], [19.1, 247.0], [19.2, 247.0], [19.3, 248.0], [19.4, 249.0], [19.5, 249.0], [19.6, 250.0], [19.7, 250.0], [19.8, 251.0], [19.9, 251.0], [20.0, 252.0], [20.1, 252.0], [20.2, 252.0], [20.3, 253.0], [20.4, 253.0], [20.5, 254.0], [20.6, 254.0], [20.7, 255.0], [20.8, 255.0], [20.9, 256.0], [21.0, 256.0], [21.1, 257.0], [21.2, 257.0], [21.3, 258.0], [21.4, 258.0], [21.5, 259.0], [21.6, 259.0], [21.7, 259.0], [21.8, 260.0], [21.9, 260.0], [22.0, 260.0], [22.1, 261.0], [22.2, 261.0], [22.3, 262.0], [22.4, 262.0], [22.5, 263.0], [22.6, 263.0], [22.7, 264.0], [22.8, 264.0], [22.9, 265.0], [23.0, 265.0], [23.1, 266.0], [23.2, 266.0], [23.3, 267.0], [23.4, 268.0], [23.5, 268.0], [23.6, 269.0], [23.7, 269.0], [23.8, 270.0], [23.9, 270.0], [24.0, 270.0], [24.1, 271.0], [24.2, 271.0], [24.3, 272.0], [24.4, 273.0], [24.5, 273.0], [24.6, 274.0], [24.7, 274.0], [24.8, 275.0], [24.9, 275.0], [25.0, 275.0], [25.1, 276.0], [25.2, 276.0], [25.3, 277.0], [25.4, 277.0], [25.5, 278.0], [25.6, 278.0], [25.7, 278.0], [25.8, 279.0], [25.9, 279.0], [26.0, 280.0], [26.1, 280.0], [26.2, 281.0], [26.3, 281.0], [26.4, 282.0], [26.5, 282.0], [26.6, 283.0], [26.7, 283.0], [26.8, 284.0], [26.9, 284.0], [27.0, 284.0], [27.1, 285.0], [27.2, 285.0], [27.3, 286.0], [27.4, 286.0], [27.5, 287.0], [27.6, 287.0], [27.7, 288.0], [27.8, 288.0], [27.9, 289.0], [28.0, 289.0], [28.1, 290.0], [28.2, 290.0], [28.3, 291.0], [28.4, 292.0], [28.5, 292.0], [28.6, 293.0], [28.7, 293.0], [28.8, 293.0], [28.9, 294.0], [29.0, 294.0], [29.1, 295.0], [29.2, 295.0], [29.3, 296.0], [29.4, 296.0], [29.5, 296.0], [29.6, 297.0], [29.7, 297.0], [29.8, 298.0], [29.9, 298.0], [30.0, 299.0], [30.1, 299.0], [30.2, 299.0], [30.3, 300.0], [30.4, 300.0], [30.5, 301.0], [30.6, 301.0], [30.7, 302.0], [30.8, 302.0], [30.9, 303.0], [31.0, 303.0], [31.1, 304.0], [31.2, 304.0], [31.3, 305.0], [31.4, 305.0], [31.5, 306.0], [31.6, 306.0], [31.7, 307.0], [31.8, 308.0], [31.9, 308.0], [32.0, 309.0], [32.1, 309.0], [32.2, 310.0], [32.3, 310.0], [32.4, 310.0], [32.5, 311.0], [32.6, 311.0], [32.7, 312.0], [32.8, 312.0], [32.9, 313.0], [33.0, 314.0], [33.1, 314.0], [33.2, 314.0], [33.3, 315.0], [33.4, 315.0], [33.5, 316.0], [33.6, 317.0], [33.7, 317.0], [33.8, 318.0], [33.9, 318.0], [34.0, 318.0], [34.1, 319.0], [34.2, 319.0], [34.3, 320.0], [34.4, 320.0], [34.5, 321.0], [34.6, 321.0], [34.7, 321.0], [34.8, 322.0], [34.9, 323.0], [35.0, 323.0], [35.1, 324.0], [35.2, 324.0], [35.3, 324.0], [35.4, 325.0], [35.5, 325.0], [35.6, 326.0], [35.7, 326.0], [35.8, 327.0], [35.9, 327.0], [36.0, 327.0], [36.1, 328.0], [36.2, 328.0], [36.3, 329.0], [36.4, 329.0], [36.5, 330.0], [36.6, 330.0], [36.7, 331.0], [36.8, 331.0], [36.9, 332.0], [37.0, 332.0], [37.1, 333.0], [37.2, 333.0], [37.3, 334.0], [37.4, 334.0], [37.5, 335.0], [37.6, 335.0], [37.7, 336.0], [37.8, 336.0], [37.9, 337.0], [38.0, 337.0], [38.1, 338.0], [38.2, 338.0], [38.3, 339.0], [38.4, 339.0], [38.5, 339.0], [38.6, 340.0], [38.7, 340.0], [38.8, 341.0], [38.9, 341.0], [39.0, 341.0], [39.1, 342.0], [39.2, 342.0], [39.3, 343.0], [39.4, 343.0], [39.5, 344.0], [39.6, 344.0], [39.7, 345.0], [39.8, 345.0], [39.9, 346.0], [40.0, 346.0], [40.1, 347.0], [40.2, 347.0], [40.3, 347.0], [40.4, 348.0], [40.5, 349.0], [40.6, 349.0], [40.7, 350.0], [40.8, 350.0], [40.9, 351.0], [41.0, 351.0], [41.1, 352.0], [41.2, 352.0], [41.3, 353.0], [41.4, 353.0], [41.5, 354.0], [41.6, 354.0], [41.7, 355.0], [41.8, 355.0], [41.9, 356.0], [42.0, 356.0], [42.1, 357.0], [42.2, 358.0], [42.3, 358.0], [42.4, 359.0], [42.5, 359.0], [42.6, 359.0], [42.7, 360.0], [42.8, 360.0], [42.9, 361.0], [43.0, 361.0], [43.1, 362.0], [43.2, 362.0], [43.3, 363.0], [43.4, 363.0], [43.5, 364.0], [43.6, 365.0], [43.7, 365.0], [43.8, 366.0], [43.9, 366.0], [44.0, 366.0], [44.1, 367.0], [44.2, 367.0], [44.3, 368.0], [44.4, 368.0], [44.5, 369.0], [44.6, 369.0], [44.7, 370.0], [44.8, 370.0], [44.9, 371.0], [45.0, 371.0], [45.1, 372.0], [45.2, 372.0], [45.3, 373.0], [45.4, 374.0], [45.5, 374.0], [45.6, 374.0], [45.7, 375.0], [45.8, 375.0], [45.9, 376.0], [46.0, 376.0], [46.1, 377.0], [46.2, 377.0], [46.3, 378.0], [46.4, 378.0], [46.5, 379.0], [46.6, 379.0], [46.7, 380.0], [46.8, 380.0], [46.9, 381.0], [47.0, 382.0], [47.1, 382.0], [47.2, 382.0], [47.3, 383.0], [47.4, 383.0], [47.5, 384.0], [47.6, 384.0], [47.7, 384.0], [47.8, 385.0], [47.9, 385.0], [48.0, 386.0], [48.1, 387.0], [48.2, 387.0], [48.3, 387.0], [48.4, 389.0], [48.5, 389.0], [48.6, 390.0], [48.7, 390.0], [48.8, 391.0], [48.9, 392.0], [49.0, 392.0], [49.1, 392.0], [49.2, 393.0], [49.3, 394.0], [49.4, 394.0], [49.5, 395.0], [49.6, 396.0], [49.7, 396.0], [49.8, 396.0], [49.9, 397.0], [50.0, 397.0], [50.1, 398.0], [50.2, 398.0], [50.3, 399.0], [50.4, 399.0], [50.5, 400.0], [50.6, 401.0], [50.7, 401.0], [50.8, 402.0], [50.9, 402.0], [51.0, 403.0], [51.1, 403.0], [51.2, 404.0], [51.3, 404.0], [51.4, 405.0], [51.5, 405.0], [51.6, 406.0], [51.7, 406.0], [51.8, 406.0], [51.9, 407.0], [52.0, 407.0], [52.1, 408.0], [52.2, 408.0], [52.3, 409.0], [52.4, 410.0], [52.5, 410.0], [52.6, 411.0], [52.7, 411.0], [52.8, 412.0], [52.9, 412.0], [53.0, 413.0], [53.1, 414.0], [53.2, 414.0], [53.3, 415.0], [53.4, 415.0], [53.5, 416.0], [53.6, 417.0], [53.7, 417.0], [53.8, 418.0], [53.9, 419.0], [54.0, 419.0], [54.1, 420.0], [54.2, 420.0], [54.3, 421.0], [54.4, 422.0], [54.5, 422.0], [54.6, 422.0], [54.7, 423.0], [54.8, 424.0], [54.9, 424.0], [55.0, 425.0], [55.1, 425.0], [55.2, 426.0], [55.3, 427.0], [55.4, 427.0], [55.5, 428.0], [55.6, 428.0], [55.7, 429.0], [55.8, 430.0], [55.9, 431.0], [56.0, 431.0], [56.1, 432.0], [56.2, 432.0], [56.3, 433.0], [56.4, 433.0], [56.5, 434.0], [56.6, 435.0], [56.7, 436.0], [56.8, 436.0], [56.9, 437.0], [57.0, 437.0], [57.1, 438.0], [57.2, 439.0], [57.3, 439.0], [57.4, 440.0], [57.5, 441.0], [57.6, 442.0], [57.7, 442.0], [57.8, 443.0], [57.9, 443.0], [58.0, 444.0], [58.1, 444.0], [58.2, 445.0], [58.3, 446.0], [58.4, 446.0], [58.5, 447.0], [58.6, 448.0], [58.7, 449.0], [58.8, 449.0], [58.9, 450.0], [59.0, 451.0], [59.1, 452.0], [59.2, 452.0], [59.3, 453.0], [59.4, 454.0], [59.5, 454.0], [59.6, 455.0], [59.7, 456.0], [59.8, 456.0], [59.9, 457.0], [60.0, 457.0], [60.1, 458.0], [60.2, 459.0], [60.3, 459.0], [60.4, 460.0], [60.5, 460.0], [60.6, 461.0], [60.7, 462.0], [60.8, 463.0], [60.9, 463.0], [61.0, 464.0], [61.1, 465.0], [61.2, 466.0], [61.3, 468.0], [61.4, 468.0], [61.5, 469.0], [61.6, 470.0], [61.7, 470.0], [61.8, 471.0], [61.9, 472.0], [62.0, 473.0], [62.1, 474.0], [62.2, 474.0], [62.3, 475.0], [62.4, 475.0], [62.5, 476.0], [62.6, 476.0], [62.7, 477.0], [62.8, 478.0], [62.9, 479.0], [63.0, 479.0], [63.1, 480.0], [63.2, 481.0], [63.3, 482.0], [63.4, 482.0], [63.5, 483.0], [63.6, 484.0], [63.7, 484.0], [63.8, 485.0], [63.9, 485.0], [64.0, 486.0], [64.1, 487.0], [64.2, 488.0], [64.3, 488.0], [64.4, 489.0], [64.5, 490.0], [64.6, 490.0], [64.7, 491.0], [64.8, 492.0], [64.9, 492.0], [65.0, 493.0], [65.1, 493.0], [65.2, 494.0], [65.3, 495.0], [65.4, 495.0], [65.5, 496.0], [65.6, 497.0], [65.7, 497.0], [65.8, 499.0], [65.9, 499.0], [66.0, 500.0], [66.1, 501.0], [66.2, 502.0], [66.3, 502.0], [66.4, 503.0], [66.5, 504.0], [66.6, 504.0], [66.7, 505.0], [66.8, 506.0], [66.9, 506.0], [67.0, 507.0], [67.1, 508.0], [67.2, 508.0], [67.3, 509.0], [67.4, 510.0], [67.5, 511.0], [67.6, 511.0], [67.7, 512.0], [67.8, 512.0], [67.9, 513.0], [68.0, 514.0], [68.1, 514.0], [68.2, 515.0], [68.3, 516.0], [68.4, 517.0], [68.5, 517.0], [68.6, 518.0], [68.7, 519.0], [68.8, 519.0], [68.9, 520.0], [69.0, 521.0], [69.1, 522.0], [69.2, 523.0], [69.3, 524.0], [69.4, 525.0], [69.5, 525.0], [69.6, 526.0], [69.7, 527.0], [69.8, 528.0], [69.9, 529.0], [70.0, 530.0], [70.1, 531.0], [70.2, 532.0], [70.3, 533.0], [70.4, 534.0], [70.5, 534.0], [70.6, 535.0], [70.7, 535.0], [70.8, 536.0], [70.9, 537.0], [71.0, 538.0], [71.1, 539.0], [71.2, 539.0], [71.3, 540.0], [71.4, 541.0], [71.5, 542.0], [71.6, 543.0], [71.7, 543.0], [71.8, 544.0], [71.9, 545.0], [72.0, 546.0], [72.1, 546.0], [72.2, 547.0], [72.3, 548.0], [72.4, 549.0], [72.5, 550.0], [72.6, 551.0], [72.7, 553.0], [72.8, 554.0], [72.9, 554.0], [73.0, 555.0], [73.1, 556.0], [73.2, 556.0], [73.3, 557.0], [73.4, 557.0], [73.5, 558.0], [73.6, 560.0], [73.7, 561.0], [73.8, 562.0], [73.9, 563.0], [74.0, 564.0], [74.1, 565.0], [74.2, 565.0], [74.3, 566.0], [74.4, 567.0], [74.5, 568.0], [74.6, 570.0], [74.7, 570.0], [74.8, 571.0], [74.9, 573.0], [75.0, 573.0], [75.1, 574.0], [75.2, 575.0], [75.3, 576.0], [75.4, 576.0], [75.5, 577.0], [75.6, 578.0], [75.7, 579.0], [75.8, 581.0], [75.9, 582.0], [76.0, 583.0], [76.1, 584.0], [76.2, 585.0], [76.3, 586.0], [76.4, 587.0], [76.5, 588.0], [76.6, 588.0], [76.7, 590.0], [76.8, 591.0], [76.9, 591.0], [77.0, 592.0], [77.1, 593.0], [77.2, 594.0], [77.3, 595.0], [77.4, 596.0], [77.5, 597.0], [77.6, 598.0], [77.7, 600.0], [77.8, 601.0], [77.9, 602.0], [78.0, 603.0], [78.1, 604.0], [78.2, 604.0], [78.3, 606.0], [78.4, 607.0], [78.5, 608.0], [78.6, 609.0], [78.7, 610.0], [78.8, 612.0], [78.9, 613.0], [79.0, 614.0], [79.1, 615.0], [79.2, 616.0], [79.3, 617.0], [79.4, 619.0], [79.5, 620.0], [79.6, 621.0], [79.7, 623.0], [79.8, 624.0], [79.9, 625.0], [80.0, 626.0], [80.1, 627.0], [80.2, 629.0], [80.3, 630.0], [80.4, 631.0], [80.5, 632.0], [80.6, 633.0], [80.7, 635.0], [80.8, 637.0], [80.9, 637.0], [81.0, 638.0], [81.1, 640.0], [81.2, 640.0], [81.3, 642.0], [81.4, 643.0], [81.5, 644.0], [81.6, 645.0], [81.7, 646.0], [81.8, 648.0], [81.9, 650.0], [82.0, 651.0], [82.1, 653.0], [82.2, 654.0], [82.3, 656.0], [82.4, 658.0], [82.5, 659.0], [82.6, 660.0], [82.7, 661.0], [82.8, 662.0], [82.9, 664.0], [83.0, 665.0], [83.1, 667.0], [83.2, 668.0], [83.3, 669.0], [83.4, 670.0], [83.5, 671.0], [83.6, 673.0], [83.7, 675.0], [83.8, 676.0], [83.9, 678.0], [84.0, 679.0], [84.1, 680.0], [84.2, 682.0], [84.3, 683.0], [84.4, 685.0], [84.5, 686.0], [84.6, 688.0], [84.7, 688.0], [84.8, 690.0], [84.9, 691.0], [85.0, 692.0], [85.1, 694.0], [85.2, 695.0], [85.3, 696.0], [85.4, 698.0], [85.5, 699.0], [85.6, 701.0], [85.7, 702.0], [85.8, 703.0], [85.9, 704.0], [86.0, 705.0], [86.1, 706.0], [86.2, 708.0], [86.3, 709.0], [86.4, 711.0], [86.5, 713.0], [86.6, 714.0], [86.7, 717.0], [86.8, 719.0], [86.9, 720.0], [87.0, 722.0], [87.1, 723.0], [87.2, 725.0], [87.3, 726.0], [87.4, 728.0], [87.5, 730.0], [87.6, 732.0], [87.7, 735.0], [87.8, 736.0], [87.9, 737.0], [88.0, 739.0], [88.1, 740.0], [88.2, 742.0], [88.3, 743.0], [88.4, 746.0], [88.5, 747.0], [88.6, 749.0], [88.7, 751.0], [88.8, 754.0], [88.9, 756.0], [89.0, 758.0], [89.1, 760.0], [89.2, 761.0], [89.3, 763.0], [89.4, 765.0], [89.5, 768.0], [89.6, 770.0], [89.7, 772.0], [89.8, 773.0], [89.9, 775.0], [90.0, 777.0], [90.1, 779.0], [90.2, 781.0], [90.3, 783.0], [90.4, 785.0], [90.5, 787.0], [90.6, 790.0], [90.7, 793.0], [90.8, 794.0], [90.9, 797.0], [91.0, 800.0], [91.1, 801.0], [91.2, 803.0], [91.3, 805.0], [91.4, 808.0], [91.5, 810.0], [91.6, 813.0], [91.7, 815.0], [91.8, 819.0], [91.9, 821.0], [92.0, 823.0], [92.1, 826.0], [92.2, 828.0], [92.3, 830.0], [92.4, 833.0], [92.5, 835.0], [92.6, 837.0], [92.7, 839.0], [92.8, 842.0], [92.9, 845.0], [93.0, 849.0], [93.1, 851.0], [93.2, 855.0], [93.3, 858.0], [93.4, 862.0], [93.5, 863.0], [93.6, 866.0], [93.7, 871.0], [93.8, 874.0], [93.9, 878.0], [94.0, 880.0], [94.1, 883.0], [94.2, 889.0], [94.3, 894.0], [94.4, 896.0], [94.5, 899.0], [94.6, 903.0], [94.7, 907.0], [94.8, 910.0], [94.9, 915.0], [95.0, 917.0], [95.1, 924.0], [95.2, 927.0], [95.3, 932.0], [95.4, 935.0], [95.5, 942.0], [95.6, 945.0], [95.7, 947.0], [95.8, 949.0], [95.9, 953.0], [96.0, 959.0], [96.1, 966.0], [96.2, 970.0], [96.3, 976.0], [96.4, 981.0], [96.5, 990.0], [96.6, 993.0], [96.7, 999.0], [96.8, 1002.0], [96.9, 1009.0], [97.0, 1015.0], [97.1, 1023.0], [97.2, 1032.0], [97.3, 1040.0], [97.4, 1050.0], [97.5, 1058.0], [97.6, 1063.0], [97.7, 1071.0], [97.8, 1085.0], [97.9, 1097.0], [98.0, 1108.0], [98.1, 1116.0], [98.2, 1121.0], [98.3, 1132.0], [98.4, 1155.0], [98.5, 1169.0], [98.6, 1181.0], [98.7, 1192.0], [98.8, 1209.0], [98.9, 1218.0], [99.0, 1229.0], [99.1, 1258.0], [99.2, 1283.0], [99.3, 1313.0], [99.4, 1339.0], [99.5, 1377.0], [99.6, 1440.0], [99.7, 1475.0], [99.8, 1602.0], [99.9, 1709.0], [100.0, 2082.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[0.0, 334.0], [0.1, 338.0], [0.2, 339.0], [0.3, 339.0], [0.4, 340.0], [0.5, 340.0], [0.6, 341.0], [0.7, 341.0], [0.8, 341.0], [0.9, 341.0], [1.0, 342.0], [1.1, 342.0], [1.2, 342.0], [1.3, 342.0], [1.4, 342.0], [1.5, 343.0], [1.6, 343.0], [1.7, 343.0], [1.8, 343.0], [1.9, 343.0], [2.0, 343.0], [2.1, 344.0], [2.2, 344.0], [2.3, 344.0], [2.4, 344.0], [2.5, 344.0], [2.6, 344.0], [2.7, 344.0], [2.8, 344.0], [2.9, 344.0], [3.0, 344.0], [3.1, 344.0], [3.2, 344.0], [3.3, 344.0], [3.4, 345.0], [3.5, 345.0], [3.6, 345.0], [3.7, 345.0], [3.8, 345.0], [3.9, 345.0], [4.0, 345.0], [4.1, 345.0], [4.2, 345.0], [4.3, 345.0], [4.4, 345.0], [4.5, 345.0], [4.6, 345.0], [4.7, 345.0], [4.8, 345.0], [4.9, 345.0], [5.0, 345.0], [5.1, 345.0], [5.2, 346.0], [5.3, 346.0], [5.4, 346.0], [5.5, 346.0], [5.6, 346.0], [5.7, 346.0], [5.8, 346.0], [5.9, 346.0], [6.0, 346.0], [6.1, 346.0], [6.2, 346.0], [6.3, 346.0], [6.4, 346.0], [6.5, 346.0], [6.6, 346.0], [6.7, 346.0], [6.8, 346.0], [6.9, 346.0], [7.0, 346.0], [7.1, 346.0], [7.2, 346.0], [7.3, 346.0], [7.4, 346.0], [7.5, 346.0], [7.6, 346.0], [7.7, 346.0], [7.8, 346.0], [7.9, 346.0], [8.0, 346.0], [8.1, 346.0], [8.2, 347.0], [8.3, 347.0], [8.4, 347.0], [8.5, 347.0], [8.6, 347.0], [8.7, 347.0], [8.8, 347.0], [8.9, 347.0], [9.0, 347.0], [9.1, 347.0], [9.2, 347.0], [9.3, 347.0], [9.4, 347.0], [9.5, 347.0], [9.6, 347.0], [9.7, 347.0], [9.8, 347.0], [9.9, 347.0], [10.0, 347.0], [10.1, 347.0], [10.2, 347.0], [10.3, 347.0], [10.4, 347.0], [10.5, 347.0], [10.6, 347.0], [10.7, 347.0], [10.8, 347.0], [10.9, 347.0], [11.0, 347.0], [11.1, 347.0], [11.2, 347.0], [11.3, 347.0], [11.4, 347.0], [11.5, 347.0], [11.6, 347.0], [11.7, 347.0], [11.8, 347.0], [11.9, 347.0], [12.0, 347.0], [12.1, 347.0], [12.2, 347.0], [12.3, 347.0], [12.4, 348.0], [12.5, 348.0], [12.6, 348.0], [12.7, 348.0], [12.8, 348.0], [12.9, 348.0], [13.0, 348.0], [13.1, 348.0], [13.2, 348.0], [13.3, 348.0], [13.4, 348.0], [13.5, 348.0], [13.6, 348.0], [13.7, 348.0], [13.8, 348.0], [13.9, 348.0], [14.0, 348.0], [14.1, 348.0], [14.2, 348.0], [14.3, 348.0], [14.4, 348.0], [14.5, 348.0], [14.6, 348.0], [14.7, 348.0], [14.8, 348.0], [14.9, 348.0], [15.0, 348.0], [15.1, 348.0], [15.2, 348.0], [15.3, 348.0], [15.4, 348.0], [15.5, 348.0], [15.6, 348.0], [15.7, 348.0], [15.8, 348.0], [15.9, 348.0], [16.0, 348.0], [16.1, 348.0], [16.2, 348.0], [16.3, 348.0], [16.4, 348.0], [16.5, 348.0], [16.6, 348.0], [16.7, 348.0], [16.8, 348.0], [16.9, 348.0], [17.0, 348.0], [17.1, 348.0], [17.2, 348.0], [17.3, 348.0], [17.4, 348.0], [17.5, 348.0], [17.6, 348.0], [17.7, 348.0], [17.8, 349.0], [17.9, 349.0], [18.0, 349.0], [18.1, 349.0], [18.2, 349.0], [18.3, 349.0], [18.4, 349.0], [18.5, 349.0], [18.6, 349.0], [18.7, 349.0], [18.8, 349.0], [18.9, 349.0], [19.0, 349.0], [19.1, 349.0], [19.2, 349.0], [19.3, 349.0], [19.4, 349.0], [19.5, 349.0], [19.6, 349.0], [19.7, 349.0], [19.8, 349.0], [19.9, 349.0], [20.0, 349.0], [20.1, 349.0], [20.2, 349.0], [20.3, 349.0], [20.4, 349.0], [20.5, 349.0], [20.6, 349.0], [20.7, 349.0], [20.8, 349.0], [20.9, 349.0], [21.0, 349.0], [21.1, 349.0], [21.2, 349.0], [21.3, 349.0], [21.4, 349.0], [21.5, 349.0], [21.6, 349.0], [21.7, 349.0], [21.8, 349.0], [21.9, 349.0], [22.0, 349.0], [22.1, 349.0], [22.2, 349.0], [22.3, 349.0], [22.4, 349.0], [22.5, 349.0], [22.6, 349.0], [22.7, 349.0], [22.8, 349.0], [22.9, 349.0], [23.0, 349.0], [23.1, 349.0], [23.2, 349.0], [23.3, 349.0], [23.4, 349.0], [23.5, 349.0], [23.6, 349.0], [23.7, 349.0], [23.8, 349.0], [23.9, 349.0], [24.0, 349.0], [24.1, 349.0], [24.2, 349.0], [24.3, 349.0], [24.4, 349.0], [24.5, 349.0], [24.6, 350.0], [24.7, 350.0], [24.8, 350.0], [24.9, 350.0], [25.0, 350.0], [25.1, 350.0], [25.2, 350.0], [25.3, 350.0], [25.4, 350.0], [25.5, 350.0], [25.6, 350.0], [25.7, 350.0], [25.8, 350.0], [25.9, 350.0], [26.0, 350.0], [26.1, 350.0], [26.2, 350.0], [26.3, 350.0], [26.4, 350.0], [26.5, 350.0], [26.6, 350.0], [26.7, 350.0], [26.8, 350.0], [26.9, 350.0], [27.0, 350.0], [27.1, 350.0], [27.2, 350.0], [27.3, 350.0], [27.4, 350.0], [27.5, 350.0], [27.6, 350.0], [27.7, 350.0], [27.8, 350.0], [27.9, 350.0], [28.0, 350.0], [28.1, 350.0], [28.2, 350.0], [28.3, 350.0], [28.4, 350.0], [28.5, 350.0], [28.6, 350.0], [28.7, 350.0], [28.8, 350.0], [28.9, 350.0], [29.0, 350.0], [29.1, 350.0], [29.2, 350.0], [29.3, 350.0], [29.4, 350.0], [29.5, 350.0], [29.6, 350.0], [29.7, 350.0], [29.8, 350.0], [29.9, 350.0], [30.0, 350.0], [30.1, 350.0], [30.2, 350.0], [30.3, 350.0], [30.4, 350.0], [30.5, 350.0], [30.6, 350.0], [30.7, 350.0], [30.8, 350.0], [30.9, 350.0], [31.0, 350.0], [31.1, 350.0], [31.2, 350.0], [31.3, 350.0], [31.4, 350.0], [31.5, 350.0], [31.6, 350.0], [31.7, 350.0], [31.8, 350.0], [31.9, 350.0], [32.0, 350.0], [32.1, 350.0], [32.2, 350.0], [32.3, 350.0], [32.4, 350.0], [32.5, 350.0], [32.6, 350.0], [32.7, 350.0], [32.8, 350.0], [32.9, 350.0], [33.0, 351.0], [33.1, 351.0], [33.2, 351.0], [33.3, 351.0], [33.4, 351.0], [33.5, 351.0], [33.6, 351.0], [33.7, 351.0], [33.8, 351.0], [33.9, 351.0], [34.0, 351.0], [34.1, 351.0], [34.2, 351.0], [34.3, 351.0], [34.4, 351.0], [34.5, 351.0], [34.6, 351.0], [34.7, 351.0], [34.8, 351.0], [34.9, 351.0], [35.0, 351.0], [35.1, 351.0], [35.2, 351.0], [35.3, 351.0], [35.4, 351.0], [35.5, 351.0], [35.6, 351.0], [35.7, 351.0], [35.8, 351.0], [35.9, 351.0], [36.0, 351.0], [36.1, 351.0], [36.2, 351.0], [36.3, 351.0], [36.4, 351.0], [36.5, 351.0], [36.6, 351.0], [36.7, 351.0], [36.8, 351.0], [36.9, 351.0], [37.0, 351.0], [37.1, 351.0], [37.2, 351.0], [37.3, 351.0], [37.4, 351.0], [37.5, 351.0], [37.6, 351.0], [37.7, 351.0], [37.8, 351.0], [37.9, 351.0], [38.0, 351.0], [38.1, 351.0], [38.2, 351.0], [38.3, 351.0], [38.4, 351.0], [38.5, 351.0], [38.6, 351.0], [38.7, 351.0], [38.8, 351.0], [38.9, 351.0], [39.0, 351.0], [39.1, 351.0], [39.2, 351.0], [39.3, 351.0], [39.4, 351.0], [39.5, 351.0], [39.6, 351.0], [39.7, 351.0], [39.8, 351.0], [39.9, 351.0], [40.0, 351.0], [40.1, 351.0], [40.2, 351.0], [40.3, 351.0], [40.4, 351.0], [40.5, 351.0], [40.6, 351.0], [40.7, 351.0], [40.8, 351.0], [40.9, 351.0], [41.0, 351.0], [41.1, 351.0], [41.2, 351.0], [41.3, 351.0], [41.4, 352.0], [41.5, 352.0], [41.6, 352.0], [41.7, 352.0], [41.8, 352.0], [41.9, 352.0], [42.0, 352.0], [42.1, 352.0], [42.2, 352.0], [42.3, 352.0], [42.4, 352.0], [42.5, 352.0], [42.6, 352.0], [42.7, 352.0], [42.8, 352.0], [42.9, 352.0], [43.0, 352.0], [43.1, 352.0], [43.2, 352.0], [43.3, 352.0], [43.4, 352.0], [43.5, 352.0], [43.6, 352.0], [43.7, 352.0], [43.8, 352.0], [43.9, 352.0], [44.0, 352.0], [44.1, 352.0], [44.2, 352.0], [44.3, 352.0], [44.4, 352.0], [44.5, 352.0], [44.6, 352.0], [44.7, 352.0], [44.8, 352.0], [44.9, 352.0], [45.0, 352.0], [45.1, 352.0], [45.2, 352.0], [45.3, 352.0], [45.4, 352.0], [45.5, 352.0], [45.6, 352.0], [45.7, 352.0], [45.8, 352.0], [45.9, 352.0], [46.0, 352.0], [46.1, 352.0], [46.2, 352.0], [46.3, 352.0], [46.4, 352.0], [46.5, 352.0], [46.6, 352.0], [46.7, 352.0], [46.8, 352.0], [46.9, 352.0], [47.0, 352.0], [47.1, 352.0], [47.2, 352.0], [47.3, 352.0], [47.4, 352.0], [47.5, 352.0], [47.6, 352.0], [47.7, 352.0], [47.8, 352.0], [47.9, 352.0], [48.0, 352.0], [48.1, 352.0], [48.2, 352.0], [48.3, 352.0], [48.4, 352.0], [48.5, 352.0], [48.6, 352.0], [48.7, 352.0], [48.8, 352.0], [48.9, 352.0], [49.0, 352.0], [49.1, 352.0], [49.2, 352.0], [49.3, 352.0], [49.4, 352.0], [49.5, 352.0], [49.6, 352.0], [49.7, 352.0], [49.8, 352.0], [49.9, 352.0], [50.0, 352.0], [50.1, 352.0], [50.2, 352.0], [50.3, 352.0], [50.4, 352.0], [50.5, 353.0], [50.6, 353.0], [50.7, 353.0], [50.8, 353.0], [50.9, 353.0], [51.0, 353.0], [51.1, 353.0], [51.2, 353.0], [51.3, 353.0], [51.4, 353.0], [51.5, 353.0], [51.6, 353.0], [51.7, 353.0], [51.8, 353.0], [51.9, 353.0], [52.0, 353.0], [52.1, 353.0], [52.2, 353.0], [52.3, 353.0], [52.4, 353.0], [52.5, 353.0], [52.6, 353.0], [52.7, 353.0], [52.8, 353.0], [52.9, 353.0], [53.0, 353.0], [53.1, 353.0], [53.2, 353.0], [53.3, 353.0], [53.4, 353.0], [53.5, 353.0], [53.6, 353.0], [53.7, 353.0], [53.8, 353.0], [53.9, 353.0], [54.0, 353.0], [54.1, 353.0], [54.2, 353.0], [54.3, 353.0], [54.4, 353.0], [54.5, 353.0], [54.6, 353.0], [54.7, 353.0], [54.8, 353.0], [54.9, 353.0], [55.0, 353.0], [55.1, 353.0], [55.2, 353.0], [55.3, 353.0], [55.4, 353.0], [55.5, 353.0], [55.6, 353.0], [55.7, 353.0], [55.8, 353.0], [55.9, 353.0], [56.0, 353.0], [56.1, 353.0], [56.2, 353.0], [56.3, 353.0], [56.4, 353.0], [56.5, 353.0], [56.6, 353.0], [56.7, 353.0], [56.8, 353.0], [56.9, 353.0], [57.0, 353.0], [57.1, 353.0], [57.2, 353.0], [57.3, 353.0], [57.4, 353.0], [57.5, 353.0], [57.6, 353.0], [57.7, 353.0], [57.8, 353.0], [57.9, 353.0], [58.0, 353.0], [58.1, 353.0], [58.2, 353.0], [58.3, 353.0], [58.4, 353.0], [58.5, 353.0], [58.6, 353.0], [58.7, 353.0], [58.8, 354.0], [58.9, 354.0], [59.0, 354.0], [59.1, 354.0], [59.2, 354.0], [59.3, 354.0], [59.4, 354.0], [59.5, 354.0], [59.6, 354.0], [59.7, 354.0], [59.8, 354.0], [59.9, 354.0], [60.0, 354.0], [60.1, 354.0], [60.2, 354.0], [60.3, 354.0], [60.4, 354.0], [60.5, 354.0], [60.6, 354.0], [60.7, 354.0], [60.8, 354.0], [60.9, 354.0], [61.0, 354.0], [61.1, 354.0], [61.2, 354.0], [61.3, 354.0], [61.4, 354.0], [61.5, 354.0], [61.6, 354.0], [61.7, 354.0], [61.8, 354.0], [61.9, 354.0], [62.0, 354.0], [62.1, 354.0], [62.2, 354.0], [62.3, 354.0], [62.4, 354.0], [62.5, 354.0], [62.6, 354.0], [62.7, 354.0], [62.8, 354.0], [62.9, 354.0], [63.0, 354.0], [63.1, 354.0], [63.2, 354.0], [63.3, 354.0], [63.4, 354.0], [63.5, 354.0], [63.6, 354.0], [63.7, 354.0], [63.8, 354.0], [63.9, 354.0], [64.0, 354.0], [64.1, 354.0], [64.2, 354.0], [64.3, 354.0], [64.4, 354.0], [64.5, 354.0], [64.6, 354.0], [64.7, 354.0], [64.8, 354.0], [64.9, 354.0], [65.0, 354.0], [65.1, 354.0], [65.2, 354.0], [65.3, 354.0], [65.4, 354.0], [65.5, 354.0], [65.6, 354.0], [65.7, 354.0], [65.8, 354.0], [65.9, 354.0], [66.0, 354.0], [66.1, 354.0], [66.2, 354.0], [66.3, 354.0], [66.4, 354.0], [66.5, 354.0], [66.6, 354.0], [66.7, 354.0], [66.8, 354.0], [66.9, 354.0], [67.0, 354.0], [67.1, 354.0], [67.2, 354.0], [67.3, 355.0], [67.4, 355.0], [67.5, 355.0], [67.6, 355.0], [67.7, 355.0], [67.8, 355.0], [67.9, 355.0], [68.0, 355.0], [68.1, 355.0], [68.2, 355.0], [68.3, 355.0], [68.4, 355.0], [68.5, 355.0], [68.6, 355.0], [68.7, 355.0], [68.8, 355.0], [68.9, 355.0], [69.0, 355.0], [69.1, 355.0], [69.2, 355.0], [69.3, 355.0], [69.4, 355.0], [69.5, 355.0], [69.6, 355.0], [69.7, 355.0], [69.8, 355.0], [69.9, 355.0], [70.0, 355.0], [70.1, 355.0], [70.2, 355.0], [70.3, 355.0], [70.4, 355.0], [70.5, 355.0], [70.6, 355.0], [70.7, 355.0], [70.8, 355.0], [70.9, 355.0], [71.0, 355.0], [71.1, 355.0], [71.2, 355.0], [71.3, 355.0], [71.4, 355.0], [71.5, 355.0], [71.6, 355.0], [71.7, 355.0], [71.8, 355.0], [71.9, 355.0], [72.0, 355.0], [72.1, 355.0], [72.2, 355.0], [72.3, 355.0], [72.4, 355.0], [72.5, 355.0], [72.6, 355.0], [72.7, 355.0], [72.8, 355.0], [72.9, 355.0], [73.0, 355.0], [73.1, 355.0], [73.2, 355.0], [73.3, 355.0], [73.4, 355.0], [73.5, 355.0], [73.6, 355.0], [73.7, 355.0], [73.8, 355.0], [73.9, 355.0], [74.0, 355.0], [74.1, 355.0], [74.2, 355.0], [74.3, 355.0], [74.4, 355.0], [74.5, 355.0], [74.6, 355.0], [74.7, 356.0], [74.8, 356.0], [74.9, 356.0], [75.0, 356.0], [75.1, 356.0], [75.2, 356.0], [75.3, 356.0], [75.4, 356.0], [75.5, 356.0], [75.6, 356.0], [75.7, 356.0], [75.8, 356.0], [75.9, 356.0], [76.0, 356.0], [76.1, 356.0], [76.2, 356.0], [76.3, 356.0], [76.4, 356.0], [76.5, 356.0], [76.6, 356.0], [76.7, 356.0], [76.8, 356.0], [76.9, 356.0], [77.0, 356.0], [77.1, 356.0], [77.2, 356.0], [77.3, 356.0], [77.4, 356.0], [77.5, 356.0], [77.6, 356.0], [77.7, 356.0], [77.8, 356.0], [77.9, 356.0], [78.0, 356.0], [78.1, 356.0], [78.2, 356.0], [78.3, 356.0], [78.4, 356.0], [78.5, 356.0], [78.6, 356.0], [78.7, 356.0], [78.8, 356.0], [78.9, 356.0], [79.0, 356.0], [79.1, 356.0], [79.2, 356.0], [79.3, 356.0], [79.4, 356.0], [79.5, 356.0], [79.6, 356.0], [79.7, 356.0], [79.8, 356.0], [79.9, 356.0], [80.0, 356.0], [80.1, 356.0], [80.2, 356.0], [80.3, 356.0], [80.4, 357.0], [80.5, 357.0], [80.6, 357.0], [80.7, 357.0], [80.8, 357.0], [80.9, 357.0], [81.0, 357.0], [81.1, 357.0], [81.2, 357.0], [81.3, 357.0], [81.4, 357.0], [81.5, 357.0], [81.6, 357.0], [81.7, 357.0], [81.8, 357.0], [81.9, 357.0], [82.0, 357.0], [82.1, 357.0], [82.2, 357.0], [82.3, 357.0], [82.4, 357.0], [82.5, 357.0], [82.6, 357.0], [82.7, 357.0], [82.8, 357.0], [82.9, 357.0], [83.0, 357.0], [83.1, 357.0], [83.2, 357.0], [83.3, 357.0], [83.4, 357.0], [83.5, 357.0], [83.6, 357.0], [83.7, 357.0], [83.8, 357.0], [83.9, 357.0], [84.0, 357.0], [84.1, 357.0], [84.2, 357.0], [84.3, 357.0], [84.4, 357.0], [84.5, 357.0], [84.6, 357.0], [84.7, 357.0], [84.8, 357.0], [84.9, 357.0], [85.0, 357.0], [85.1, 357.0], [85.2, 357.0], [85.3, 358.0], [85.4, 358.0], [85.5, 358.0], [85.6, 358.0], [85.7, 358.0], [85.8, 358.0], [85.9, 358.0], [86.0, 358.0], [86.1, 358.0], [86.2, 358.0], [86.3, 358.0], [86.4, 358.0], [86.5, 358.0], [86.6, 358.0], [86.7, 358.0], [86.8, 358.0], [86.9, 358.0], [87.0, 358.0], [87.1, 358.0], [87.2, 358.0], [87.3, 358.0], [87.4, 358.0], [87.5, 358.0], [87.6, 358.0], [87.7, 358.0], [87.8, 358.0], [87.9, 358.0], [88.0, 358.0], [88.1, 358.0], [88.2, 358.0], [88.3, 358.0], [88.4, 358.0], [88.5, 358.0], [88.6, 358.0], [88.7, 358.0], [88.8, 358.0], [88.9, 358.0], [89.0, 358.0], [89.1, 358.0], [89.2, 359.0], [89.3, 359.0], [89.4, 359.0], [89.5, 359.0], [89.6, 359.0], [89.7, 359.0], [89.8, 359.0], [89.9, 359.0], [90.0, 359.0], [90.1, 359.0], [90.2, 359.0], [90.3, 359.0], [90.4, 359.0], [90.5, 359.0], [90.6, 359.0], [90.7, 359.0], [90.8, 359.0], [90.9, 359.0], [91.0, 359.0], [91.1, 359.0], [91.2, 359.0], [91.3, 359.0], [91.4, 359.0], [91.5, 359.0], [91.6, 359.0], [91.7, 359.0], [91.8, 359.0], [91.9, 359.0], [92.0, 359.0], [92.1, 359.0], [92.2, 359.0], [92.3, 359.0], [92.4, 359.0], [92.5, 359.0], [92.6, 360.0], [92.7, 360.0], [92.8, 360.0], [92.9, 360.0], [93.0, 360.0], [93.1, 360.0], [93.2, 360.0], [93.3, 360.0], [93.4, 360.0], [93.5, 360.0], [93.6, 360.0], [93.7, 360.0], [93.8, 360.0], [93.9, 360.0], [94.0, 360.0], [94.1, 360.0], [94.2, 360.0], [94.3, 360.0], [94.4, 360.0], [94.5, 360.0], [94.6, 360.0], [94.7, 360.0], [94.8, 360.0], [94.9, 361.0], [95.0, 361.0], [95.1, 361.0], [95.2, 361.0], [95.3, 361.0], [95.4, 361.0], [95.5, 361.0], [95.6, 361.0], [95.7, 361.0], [95.8, 361.0], [95.9, 361.0], [96.0, 361.0], [96.1, 361.0], [96.2, 361.0], [96.3, 361.0], [96.4, 361.0], [96.5, 361.0], [96.6, 362.0], [96.7, 362.0], [96.8, 362.0], [96.9, 362.0], [97.0, 362.0], [97.1, 362.0], [97.2, 362.0], [97.3, 362.0], [97.4, 362.0], [97.5, 362.0], [97.6, 362.0], [97.7, 363.0], [97.8, 363.0], [97.9, 363.0], [98.0, 363.0], [98.1, 363.0], [98.2, 363.0], [98.3, 363.0], [98.4, 363.0], [98.5, 364.0], [98.6, 364.0], [98.7, 364.0], [98.8, 364.0], [98.9, 364.0], [99.0, 365.0], [99.1, 365.0], [99.2, 365.0], [99.3, 365.0], [99.4, 366.0], [99.5, 366.0], [99.6, 367.0], [99.7, 367.0], [99.8, 369.0], [99.9, 374.0], [100.0, 4337.0]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 9997.0, "series": [{"data": [[600.0, 787.0], [700.0, 544.0], [800.0, 351.0], [200.0, 2103.0], [900.0, 221.0], [1000.0, 119.0], [1100.0, 81.0], [300.0, 2014.0], [1200.0, 52.0], [1300.0, 31.0], [1400.0, 16.0], [1500.0, 8.0], [400.0, 1551.0], [100.0, 924.0], [1600.0, 10.0], [1700.0, 2.0], [1800.0, 4.0], [1900.0, 4.0], [500.0, 1177.0], [2000.0, 1.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[4300.0, 1.0], [300.0, 9997.0], [400.0, 2.0]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 30.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 16603.0, "series": [{"data": [[0.0, 16603.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3367.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 30.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.74593904E12, "maxY": 1.0, "series": [{"data": [[1.74594042E12, 1.0], [1.74594366E12, 1.0], [1.74594588E12, 1.0], [1.74594264E12, 1.0], [1.74594708E12, 1.0], [1.74594162E12, 1.0], [1.74594486E12, 1.0], [1.7459394E12, 1.0], [1.74594384E12, 1.0], [1.74594606E12, 1.0], [1.74594624E12, 1.0], [1.7459406E12, 1.0], [1.74594282E12, 1.0], [1.74594504E12, 1.0], [1.74593958E12, 1.0], [1.7459418E12, 1.0], [1.74594402E12, 1.0], [1.74594672E12, 1.0], [1.74594108E12, 1.0], [1.7459433E12, 1.0], [1.74594552E12, 1.0], [1.74593904E12, 1.0], [1.74594228E12, 1.0], [1.74594006E12, 1.0], [1.7459445E12, 1.0], [1.74594654E12, 1.0], [1.74594348E12, 1.0], [1.74594024E12, 1.0], [1.7459469E12, 1.0], [1.74594126E12, 1.0], [1.7459457E12, 1.0], [1.74593922E12, 1.0], [1.74594144E12, 1.0], [1.74594246E12, 1.0], [1.74594468E12, 1.0], [1.74594558E12, 1.0], [1.74594012E12, 1.0], [1.74594234E12, 1.0], [1.74594456E12, 1.0], [1.74594678E12, 1.0], [1.7459391E12, 1.0], [1.74594132E12, 1.0], [1.74594354E12, 1.0], [1.74594576E12, 1.0], [1.74593928E12, 1.0], [1.74594252E12, 1.0], [1.7459403E12, 1.0], [1.74594474E12, 1.0], [1.74594372E12, 1.0], [1.74594696E12, 1.0], [1.74594048E12, 1.0], [1.7459415E12, 1.0], [1.74594594E12, 1.0], [1.74593976E12, 1.0], [1.745943E12, 1.0], [1.74594642E12, 1.0], [1.74594522E12, 1.0], [1.74594078E12, 1.0], [1.74594096E12, 1.0], [1.74594198E12, 1.0], [1.7459442E12, 1.0], [1.74593994E12, 1.0], [1.74594318E12, 1.0], [1.7459454E12, 1.0], [1.74594216E12, 1.0], [1.7459466E12, 1.0], [1.74594114E12, 1.0], [1.74594438E12, 1.0], [1.74594336E12, 1.0], [1.74594204E12, 1.0], [1.74594426E12, 1.0], [1.74593982E12, 1.0], [1.74594324E12, 1.0], [1.74594648E12, 1.0], [1.74594E12, 1.0], [1.74594102E12, 1.0], [1.74594546E12, 1.0], [1.7459412E12, 1.0], [1.74594222E12, 1.0], [1.74594444E12, 1.0], [1.74594018E12, 1.0], [1.74594342E12, 1.0], [1.74594564E12, 1.0], [1.74594666E12, 1.0], [1.7459424E12, 1.0], [1.74593946E12, 1.0], [1.74594168E12, 1.0], [1.7459427E12, 1.0], [1.74594492E12, 1.0], [1.74594066E12, 1.0], [1.7459439E12, 1.0], [1.74594612E12, 1.0], [1.74594714E12, 1.0], [1.74594288E12, 1.0], [1.74594186E12, 1.0], [1.7459451E12, 1.0], [1.74593964E12, 1.0], [1.74594408E12, 1.0], [1.7459463E12, 1.0], [1.74594306E12, 1.0], [1.74594528E12, 1.0], [1.74594084E12, 1.0], [1.74594396E12, 1.0], [1.74594072E12, 1.0], [1.74594174E12, 1.0], [1.7459397E12, 1.0], [1.74594192E12, 1.0], [1.74594516E12, 1.0], [1.74594294E12, 1.0], [1.74594618E12, 1.0], [1.7459409E12, 1.0], [1.74594414E12, 1.0], [1.74594312E12, 1.0], [1.74594534E12, 1.0], [1.74594636E12, 1.0], [1.74593988E12, 1.0], [1.7459421E12, 1.0], [1.74594432E12, 1.0], [1.74594138E12, 1.0], [1.74594462E12, 1.0], [1.74593916E12, 1.0], [1.7459436E12, 1.0], [1.74594582E12, 1.0], [1.74594684E12, 1.0], [1.74594036E12, 1.0], [1.74594258E12, 1.0], [1.7459448E12, 1.0], [1.74593934E12, 1.0], [1.74594156E12, 1.0], [1.74594378E12, 1.0], [1.745946E12, 1.0], [1.74593952E12, 1.0], [1.74594276E12, 1.0], [1.74594054E12, 1.0], [1.74594498E12, 1.0], [1.74594702E12, 1.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74594714E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 353.07169999999945, "minX": 1.0, "maxY": 453.5831999999995, "series": [{"data": [[1.0, 453.5831999999995]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.0, 453.5831999999995]], "isOverall": false, "label": "Create CSR-Aggregated", "isController": false}, {"data": [[1.0, 353.07169999999945]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}, {"data": [[1.0, 353.07169999999945]], "isOverall": false, "label": "HTTP Request - enroll-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 414.6333333333333, "minX": 1.74593904E12, "maxY": 12068.9, "series": [{"data": [[1.74594042E12, 11038.466666666667], [1.74594366E12, 11333.033333333333], [1.74594588E12, 10449.95], [1.74594264E12, 11627.366666666667], [1.74594708E12, 10891.5], [1.74594162E12, 10617.983333333334], [1.74594486E12, 10449.816666666668], [1.7459394E12, 10744.233333333334], [1.74594384E12, 10597.05], [1.74594606E12, 11206.9], [1.74594624E12, 11795.583333333334], [1.7459406E12, 11164.666666666666], [1.74594282E12, 10744.25], [1.74594504E12, 10765.4], [1.74593958E12, 9861.15], [1.7459418E12, 11333.016666666666], [1.74594402E12, 11185.716666666667], [1.74594672E12, 10912.416666666666], [1.74594108E12, 11206.833333333334], [1.7459433E12, 10870.2], [1.74594552E12, 10891.483333333334], [1.74593904E12, 2081.6666666666665], [1.74594228E12, 11185.7], [1.74594006E12, 10891.483333333334], [1.7459445E12, 11059.733333333334], [1.74594654E12, 10575.916666666666], [1.74594348E12, 10449.85], [1.74594024E12, 11459.0], [1.7459469E12, 10302.616666666667], [1.74594126E12, 10891.366666666667], [1.7459457E12, 10428.75], [1.74593922E12, 11017.5], [1.74594144E12, 10744.283333333333], [1.74594246E12, 10870.266666666666], [1.74594468E12, 10597.083333333334], [1.74594558E12, 12068.9], [1.74594012E12, 10302.7], [1.74594234E12, 11459.033333333333], [1.74594456E12, 11459.016666666666], [1.74594678E12, 10891.5], [1.7459391E12, 11017.466666666667], [1.74594132E12, 10765.4], [1.74594354E12, 10302.666666666666], [1.74594576E12, 10155.433333333332], [1.74593928E12, 10912.55], [1.74594252E12, 11059.816666666668], [1.7459403E12, 11333.0], [1.74594474E12, 10323.8], [1.74594372E12, 11480.133333333333], [1.74594696E12, 10891.4], [1.74594048E12, 10029.45], [1.7459415E12, 10891.383333333333], [1.74594594E12, 10912.55], [1.74593976E12, 11627.35], [1.745943E12, 10723.166666666666], [1.74594642E12, 10744.283333333333], [1.74594522E12, 10723.033333333333], [1.74594078E12, 11164.7], [1.74594096E12, 11185.733333333334], [1.74594198E12, 11185.733333333334], [1.7459442E12, 11795.583333333334], [1.74593994E12, 10744.25], [1.74594318E12, 11017.45], [1.7459454E12, 10575.883333333333], [1.74594216E12, 10723.083333333334], [1.7459466E12, 10449.916666666666], [1.74594114E12, 11185.816666666668], [1.74594438E12, 10765.4], [1.74594336E12, 10891.45], [1.74594204E12, 11164.533333333333], [1.74594426E12, 11332.983333333334], [1.74593982E12, 11501.283333333333], [1.74594324E12, 11354.133333333333], [1.74594648E12, 10765.35], [1.74594E12, 10744.216666666667], [1.74594102E12, 11038.616666666667], [1.74594546E12, 10596.983333333334], [1.7459412E12, 11164.716666666667], [1.74594222E12, 11206.766666666666], [1.74594444E12, 11311.783333333333], [1.74594018E12, 10618.216666666667], [1.74594342E12, 10891.4], [1.74594564E12, 10765.35], [1.74594666E12, 11185.666666666666], [1.7459424E12, 10470.95], [1.74593946E12, 11164.716666666667], [1.74594168E12, 11311.8], [1.7459427E12, 10723.133333333333], [1.74594492E12, 11038.6], [1.74594066E12, 10302.733333333334], [1.7459439E12, 10722.966666666667], [1.74594612E12, 10575.833333333334], [1.74594714E12, 3658.383333333333], [1.74594288E12, 11185.816666666668], [1.74594186E12, 10765.416666666666], [1.7459451E12, 11017.533333333333], [1.74593964E12, 11017.483333333334], [1.74594408E12, 11038.633333333333], [1.7459463E12, 11311.933333333332], [1.74594306E12, 10765.466666666667], [1.74594528E12, 10302.733333333334], [1.74594084E12, 10596.966666666667], [1.74594396E12, 11648.366666666667], [1.74594072E12, 11501.333333333334], [1.74594174E12, 10891.45], [1.7459397E12, 10302.683333333332], [1.74594192E12, 10597.016666666666], [1.74594516E12, 11354.15], [1.74594294E12, 11059.716666666667], [1.74594618E12, 10744.2], [1.7459409E12, 11038.5], [1.74594414E12, 10870.183333333332], [1.74594312E12, 10744.233333333334], [1.74594534E12, 11354.133333333333], [1.74594636E12, 11185.783333333333], [1.74593988E12, 10575.8], [1.7459421E12, 10765.383333333333], [1.74594432E12, 11164.616666666667], [1.74594138E12, 11311.7], [1.74594462E12, 10891.433333333332], [1.74593916E12, 11354.116666666667], [1.7459436E12, 11501.316666666668], [1.74594582E12, 10891.366666666667], [1.74594684E12, 10575.916666666666], [1.74594036E12, 11774.4], [1.74594258E12, 10744.25], [1.7459448E12, 10575.916666666666], [1.74593934E12, 11185.766666666666], [1.74594156E12, 10449.933333333332], [1.74594378E12, 11185.833333333334], [1.745946E12, 11017.416666666666], [1.74593952E12, 10912.583333333334], [1.74594276E12, 10449.816666666668], [1.74594054E12, 11185.733333333334], [1.74594498E12, 11332.916666666666], [1.74594702E12, 11059.816666666668]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74594042E12, 2221.25], [1.74594366E12, 2280.483333333333], [1.74594588E12, 2102.7833333333333], [1.74594264E12, 2339.7166666666667], [1.74594708E12, 2191.633333333333], [1.74594162E12, 2132.4], [1.74594486E12, 2102.7833333333333], [1.7459394E12, 2162.016666666667], [1.74594384E12, 2132.4], [1.74594606E12, 2250.866666666667], [1.74594624E12, 2369.3333333333335], [1.7459406E12, 2250.866666666667], [1.74594282E12, 2162.016666666667], [1.74594504E12, 2162.016666666667], [1.74593958E12, 1984.3166666666666], [1.7459418E12, 2280.483333333333], [1.74594402E12, 2250.866666666667], [1.74594672E12, 2191.633333333333], [1.74594108E12, 2250.866666666667], [1.7459433E12, 2191.633333333333], [1.74594552E12, 2191.633333333333], [1.74593904E12, 414.6333333333333], [1.74594228E12, 2250.866666666667], [1.74594006E12, 2191.633333333333], [1.7459445E12, 2221.25], [1.74594654E12, 2132.4], [1.74594348E12, 2102.7833333333333], [1.74594024E12, 2310.1], [1.7459469E12, 2073.1666666666665], [1.74594126E12, 2191.633333333333], [1.7459457E12, 2102.7833333333333], [1.74593922E12, 2221.25], [1.74594144E12, 2162.016666666667], [1.74594246E12, 2191.633333333333], [1.74594468E12, 2132.4], [1.74594558E12, 2428.5666666666666], [1.74594012E12, 2073.1666666666665], [1.74594234E12, 2310.1], [1.74594456E12, 2310.1], [1.74594678E12, 2191.633333333333], [1.7459391E12, 2221.25], [1.74594132E12, 2162.016666666667], [1.74594354E12, 2073.1666666666665], [1.74594576E12, 2043.55], [1.74593928E12, 2191.633333333333], [1.74594252E12, 2221.25], [1.7459403E12, 2280.483333333333], [1.74594474E12, 2073.1666666666665], [1.74594372E12, 2310.1], [1.74594696E12, 2191.633333333333], [1.74594048E12, 2013.9333333333334], [1.7459415E12, 2191.633333333333], [1.74594594E12, 2191.633333333333], [1.74593976E12, 2339.7166666666667], [1.745943E12, 2162.016666666667], [1.74594642E12, 2162.016666666667], [1.74594522E12, 2162.016666666667], [1.74594078E12, 2250.866666666667], [1.74594096E12, 2250.866666666667], [1.74594198E12, 2250.866666666667], [1.7459442E12, 2369.3333333333335], [1.74593994E12, 2162.016666666667], [1.74594318E12, 2221.25], [1.7459454E12, 2132.4], [1.74594216E12, 2162.016666666667], [1.7459466E12, 2102.7833333333333], [1.74594114E12, 2250.866666666667], [1.74594438E12, 2162.016666666667], [1.74594336E12, 2191.633333333333], [1.74594204E12, 2250.866666666667], [1.74594426E12, 2280.483333333333], [1.74593982E12, 2310.1], [1.74594324E12, 2280.483333333333], [1.74594648E12, 2162.016666666667], [1.74594E12, 2162.016666666667], [1.74594102E12, 2221.25], [1.74594546E12, 2132.4], [1.7459412E12, 2250.866666666667], [1.74594222E12, 2250.866666666667], [1.74594444E12, 2280.483333333333], [1.74594018E12, 2132.4], [1.74594342E12, 2191.633333333333], [1.74594564E12, 2162.016666666667], [1.74594666E12, 2250.866666666667], [1.7459424E12, 2102.7833333333333], [1.74593946E12, 2250.866666666667], [1.74594168E12, 2280.483333333333], [1.7459427E12, 2162.016666666667], [1.74594492E12, 2221.25], [1.74594066E12, 2073.1666666666665], [1.7459439E12, 2162.016666666667], [1.74594612E12, 2132.4], [1.74594714E12, 740.4166666666666], [1.74594288E12, 2250.866666666667], [1.74594186E12, 2162.016666666667], [1.7459451E12, 2221.25], [1.74593964E12, 2221.25], [1.74594408E12, 2221.25], [1.7459463E12, 2280.483333333333], [1.74594306E12, 2162.016666666667], [1.74594528E12, 2073.1666666666665], [1.74594084E12, 2132.4], [1.74594396E12, 2339.7166666666667], [1.74594072E12, 2310.1], [1.74594174E12, 2191.633333333333], [1.7459397E12, 2073.1666666666665], [1.74594192E12, 2132.4], [1.74594516E12, 2280.483333333333], [1.74594294E12, 2221.25], [1.74594618E12, 2162.016666666667], [1.7459409E12, 2221.25], [1.74594414E12, 2191.633333333333], [1.74594312E12, 2162.016666666667], [1.74594534E12, 2280.483333333333], [1.74594636E12, 2250.866666666667], [1.74593988E12, 2132.4], [1.7459421E12, 2162.016666666667], [1.74594432E12, 2250.866666666667], [1.74594138E12, 2280.483333333333], [1.74594462E12, 2191.633333333333], [1.74593916E12, 2280.483333333333], [1.7459436E12, 2310.1], [1.74594582E12, 2191.633333333333], [1.74594684E12, 2132.4], [1.74594036E12, 2369.3333333333335], [1.74594258E12, 2162.016666666667], [1.7459448E12, 2132.4], [1.74593934E12, 2250.866666666667], [1.74594156E12, 2102.7833333333333], [1.74594378E12, 2250.866666666667], [1.745946E12, 2221.25], [1.74593952E12, 2191.633333333333], [1.74594276E12, 2102.7833333333333], [1.74594054E12, 2250.866666666667], [1.74594498E12, 2280.483333333333], [1.74594702E12, 2221.25]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74594714E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 344.73972602739724, "minX": 1.74593904E12, "maxY": 633.2142857142857, "series": [{"data": [[1.74594042E12, 444.10666666666674], [1.74594366E12, 424.8181818181817], [1.74594588E12, 490.4507042253522], [1.74594264E12, 403.6835443037974], [1.74594708E12, 458.945945945946], [1.74594162E12, 478.04109589041104], [1.74594486E12, 491.0985915492958], [1.7459394E12, 469.58904109589054], [1.74594384E12, 477.7777777777778], [1.74594606E12, 427.77922077922074], [1.74594624E12, 387.45679012345676], [1.7459406E12, 443.5199999999999], [1.74594282E12, 459.41095890410963], [1.74594504E12, 456.9054054054054], [1.74593958E12, 542.820895522388], [1.7459418E12, 428.3766233766234], [1.74594402E12, 435.4473684210528], [1.74594672E12, 452.12], [1.74594108E12, 432.2077922077921], [1.7459433E12, 465.13698630136986], [1.74594552E12, 447.56756756756755], [1.74593904E12, 415.20000000000005], [1.74594228E12, 438.10526315789474], [1.74594006E12, 470.13513513513516], [1.7459445E12, 443.1842105263159], [1.74594654E12, 481.80281690140845], [1.74594348E12, 498.05633802816897], [1.74594024E12, 421.87012987013003], [1.7459469E12, 493.5571428571428], [1.74594126E12, 458.0945945945947], [1.7459457E12, 497.87142857142874], [1.74593922E12, 456.60810810810807], [1.74594144E12, 475.6301369863014], [1.74594246E12, 467.65753424657527], [1.74594468E12, 468.7638888888889], [1.74594558E12, 375.4756097560976], [1.74594012E12, 508.5571428571429], [1.74594234E12, 421.3636363636364], [1.74594456E12, 420.31168831168833], [1.74594678E12, 452.2972972972974], [1.7459391E12, 455.6621621621622], [1.74594132E12, 464.3783783783783], [1.74594354E12, 516.3000000000001], [1.74594576E12, 515.6231884057974], [1.74593928E12, 450.4800000000001], [1.74594252E12, 443.6973684210527], [1.7459403E12, 429.0909090909091], [1.74594474E12, 501.71830985915494], [1.74594372E12, 416.51282051282044], [1.74594696E12, 450.4054054054054], [1.74594048E12, 525.5217391304349], [1.7459415E12, 454.28378378378375], [1.74594594E12, 450.84], [1.74593976E12, 407.55696202531647], [1.745943E12, 476.0833333333333], [1.74594642E12, 456.89041095890417], [1.74594522E12, 473.5555555555557], [1.74594078E12, 443.2133333333334], [1.74594096E12, 436.2105263157895], [1.74594198E12, 435.9605263157893], [1.7459442E12, 384.97530864197535], [1.74593994E12, 473.61643835616434], [1.74594318E12, 455.56756756756744], [1.7459454E12, 479.9577464788732], [1.74594216E12, 476.47222222222223], [1.7459466E12, 486.1408450704224], [1.74594114E12, 436.8026315789475], [1.74594438E12, 464.1756756756757], [1.74594336E12, 455.81081081081084], [1.74594204E12, 441.3466666666668], [1.74594426E12, 427.67532467532465], [1.74593982E12, 409.9999999999999], [1.74594324E12, 415.2307692307692], [1.74594648E12, 465.0945945945945], [1.74594E12, 467.3424657534247], [1.74594102E12, 451.7599999999998], [1.74594546E12, 477.84722222222223], [1.7459412E12, 440.3733333333334], [1.74594222E12, 434.5584415584416], [1.74594444E12, 426.40789473684214], [1.74594018E12, 475.7808219178082], [1.74594342E12, 448.8108108108107], [1.74594564E12, 458.86486486486496], [1.74594666E12, 426.93421052631584], [1.7459424E12, 484.8055555555553], [1.74593946E12, 442.32000000000005], [1.74594168E12, 420.3552631578946], [1.7459427E12, 475.99999999999994], [1.74594492E12, 447.91999999999996], [1.74594066E12, 505.4142857142856], [1.7459439E12, 469.20833333333326], [1.74594612E12, 474.5915492957747], [1.74594714E12, 413.45833333333326], [1.74594288E12, 438.02631578947364], [1.74594186E12, 465.2432432432433], [1.7459451E12, 450.8783783783784], [1.74593964E12, 451.3378378378378], [1.74594408E12, 444.2666666666666], [1.7459463E12, 421.56578947368416], [1.74594306E12, 465.78378378378386], [1.74594528E12, 500.3857142857144], [1.74594084E12, 484.45833333333326], [1.74594396E12, 405.1000000000001], [1.74594072E12, 418.3037974683545], [1.74594174E12, 475.2837837837837], [1.7459397E12, 509.34285714285716], [1.74594192E12, 481.68055555555554], [1.74594516E12, 419.29487179487165], [1.74594294E12, 445.3552631578947], [1.74594618E12, 468.8356164383561], [1.7459409E12, 450.1599999999999], [1.74594414E12, 467.890410958904], [1.74594312E12, 466.9452054794522], [1.74594534E12, 425.4615384615385], [1.74594636E12, 436.6842105263158], [1.74593988E12, 494.01408450704236], [1.7459421E12, 463.79729729729746], [1.74594432E12, 435.7866666666666], [1.74594138E12, 433.90789473684214], [1.74594462E12, 456.3918918918917], [1.74593916E12, 422.58974358974353], [1.7459436E12, 406.35443037974676], [1.74594582E12, 454.6756756756757], [1.74594684E12, 479.71830985915494], [1.74594036E12, 404.74999999999994], [1.74594258E12, 470.41095890410963], [1.7459448E12, 480.97183098591563], [1.74593934E12, 442.0657894736842], [1.74594156E12, 495.29577464788736], [1.74594378E12, 435.80263157894734], [1.745946E12, 447.9324324324323], [1.74593952E12, 452.76000000000016], [1.74594276E12, 496.6901408450704], [1.74594054E12, 439.25], [1.74594498E12, 427.54545454545456], [1.74594702E12, 436.184210526316]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.74594042E12, 350.1733333333332], [1.74594366E12, 353.88311688311677], [1.74594588E12, 355.14084507042236], [1.74594264E12, 351.56962025316454], [1.74594708E12, 351.7162162162162], [1.74594162E12, 351.77777777777777], [1.74594486E12, 353.64788732394373], [1.7459394E12, 350.054794520548], [1.74594384E12, 353.43055555555554], [1.74594606E12, 356.43421052631584], [1.74594624E12, 357.11250000000007], [1.7459406E12, 349.5526315789474], [1.74594282E12, 353.6575342465752], [1.74594504E12, 355.9041095890411], [1.74593958E12, 350.820895522388], [1.7459418E12, 351.06493506493507], [1.74594402E12, 353.57894736842104], [1.74594672E12, 358.06756756756766], [1.74594108E12, 350.2105263157895], [1.7459433E12, 353.51351351351354], [1.74594552E12, 357.0135135135135], [1.74593904E12, 633.2142857142857], [1.74594228E12, 350.60526315789457], [1.74594006E12, 348.4864864864864], [1.7459445E12, 351.55999999999995], [1.74594654E12, 356.90277777777777], [1.74594348E12, 347.36619718309856], [1.74594024E12, 348.01282051282055], [1.7459469E12, 359.9714285714287], [1.74594126E12, 349.2972972972973], [1.7459457E12, 355.21126760563385], [1.74593922E12, 350.16000000000014], [1.74594144E12, 348.8904109589042], [1.74594246E12, 350.51351351351354], [1.74594468E12, 354.4722222222221], [1.74594558E12, 358.4390243902441], [1.74594012E12, 348.22857142857146], [1.74594234E12, 351.4871794871795], [1.74594456E12, 355.01282051282055], [1.74594678E12, 358.3513513513513], [1.7459391E12, 348.94666666666666], [1.74594132E12, 351.65753424657527], [1.74594354E12, 348.02857142857147], [1.74594576E12, 354.68115942028976], [1.74593928E12, 349.2432432432433], [1.74594252E12, 351.0], [1.7459403E12, 348.1818181818182], [1.74594474E12, 355.3285714285714], [1.74594372E12, 355.0512820512821], [1.74594696E12, 358.48648648648646], [1.74594048E12, 351.3235294117647], [1.7459415E12, 349.4459459459459], [1.74594594E12, 354.27027027027026], [1.74593976E12, 350.8987341772152], [1.745943E12, 352.36986301369865], [1.74594642E12, 357.7945205479452], [1.74594522E12, 354.89041095890406], [1.74594078E12, 350.52631578947376], [1.74594096E12, 348.73684210526324], [1.74594198E12, 353.17105263157873], [1.7459442E12, 355.3500000000002], [1.74593994E12, 344.73972602739724], [1.74594318E12, 352.77333333333326], [1.7459454E12, 357.736111111111], [1.74594216E12, 350.31506849315076], [1.7459466E12, 357.73239436619707], [1.74594114E12, 351.26315789473705], [1.74594438E12, 354.931506849315], [1.74594336E12, 353.7027027027027], [1.74594204E12, 351.328947368421], [1.74594426E12, 353.3116883116883], [1.74593982E12, 349.85897435897425], [1.74594324E12, 355.42857142857133], [1.74594648E12, 356.7260273972603], [1.74594E12, 350.50684931506834], [1.74594102E12, 350.73333333333346], [1.74594546E12, 356.8888888888889], [1.7459412E12, 352.8157894736842], [1.74594222E12, 350.55263157894734], [1.74594444E12, 353.16883116883133], [1.74594018E12, 348.30555555555554], [1.74594342E12, 353.9054054054053], [1.74594564E12, 355.00000000000006], [1.74594666E12, 356.7894736842105], [1.7459424E12, 352.47887323943684], [1.74593946E12, 351.3552631578947], [1.74594168E12, 349.29870129870136], [1.7459427E12, 351.945205479452], [1.74594492E12, 353.68], [1.74594066E12, 349.4857142857142], [1.7459439E12, 352.90410958904107], [1.74594612E12, 357.2361111111112], [1.74594714E12, 357.04], [1.74594288E12, 351.22368421052647], [1.74594186E12, 350.60273972602744], [1.7459451E12, 354.32], [1.74593964E12, 351.85333333333324], [1.74594408E12, 353.78666666666675], [1.7459463E12, 359.7662337662338], [1.74594306E12, 351.9041095890412], [1.74594528E12, 351.7714285714287], [1.74594084E12, 348.4305555555555], [1.74594396E12, 352.82278481012673], [1.74594072E12, 349.37179487179486], [1.74594174E12, 347.79729729729735], [1.7459397E12, 350.8714285714286], [1.74594192E12, 350.5972222222223], [1.74594516E12, 354.22077922077926], [1.74594294E12, 351.7333333333334], [1.74594618E12, 356.43835616438355], [1.7459409E12, 350.73333333333335], [1.74594414E12, 353.2432432432432], [1.74594312E12, 351.6986301369862], [1.74594534E12, 352.5454545454545], [1.74594636E12, 358.0657894736842], [1.74593988E12, 345.875], [1.7459421E12, 351.4383561643835], [1.74594432E12, 355.5921052631579], [1.74594138E12, 351.3636363636363], [1.74594462E12, 356.4594594594595], [1.74593916E12, 349.3896103896103], [1.7459436E12, 353.49999999999983], [1.74594582E12, 353.85135135135135], [1.74594684E12, 357.63888888888897], [1.74594036E12, 349.2249999999999], [1.74594258E12, 351.095890410959], [1.7459448E12, 355.51388888888886], [1.74593934E12, 347.97368421052624], [1.74594156E12, 350.8028169014084], [1.74594378E12, 352.80263157894746], [1.745946E12, 356.5200000000001], [1.74593952E12, 351.2162162162163], [1.74594276E12, 351.29577464788724], [1.74594054E12, 349.4868421052631], [1.74594498E12, 354.25974025974017], [1.74594702E12, 360.6266666666666]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74594714E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74593904E12, "maxY": 633.0714285714286, "series": [{"data": [[1.74594042E12, 0.0], [1.74594366E12, 0.0], [1.74594588E12, 0.0], [1.74594264E12, 0.0], [1.74594708E12, 0.0], [1.74594162E12, 0.0], [1.74594486E12, 0.0], [1.7459394E12, 0.0], [1.74594384E12, 0.0], [1.74594606E12, 0.0], [1.74594624E12, 0.0], [1.7459406E12, 0.0], [1.74594282E12, 0.0], [1.74594504E12, 0.0], [1.74593958E12, 0.0], [1.7459418E12, 0.0], [1.74594402E12, 0.0], [1.74594672E12, 0.0], [1.74594108E12, 0.0], [1.7459433E12, 0.0], [1.74594552E12, 0.0], [1.74593904E12, 0.0], [1.74594228E12, 0.0], [1.74594006E12, 0.0], [1.7459445E12, 0.0], [1.74594654E12, 0.0], [1.74594348E12, 0.0], [1.74594024E12, 0.0], [1.7459469E12, 0.0], [1.74594126E12, 0.0], [1.7459457E12, 0.0], [1.74593922E12, 0.0], [1.74594144E12, 0.0], [1.74594246E12, 0.0], [1.74594468E12, 0.0], [1.74594558E12, 0.0], [1.74594012E12, 0.0], [1.74594234E12, 0.0], [1.74594456E12, 0.0], [1.74594678E12, 0.0], [1.7459391E12, 0.0], [1.74594132E12, 0.0], [1.74594354E12, 0.0], [1.74594576E12, 0.0], [1.74593928E12, 0.0], [1.74594252E12, 0.0], [1.7459403E12, 0.0], [1.74594474E12, 0.0], [1.74594372E12, 0.0], [1.74594696E12, 0.0], [1.74594048E12, 0.0], [1.7459415E12, 0.0], [1.74594594E12, 0.0], [1.74593976E12, 0.0], [1.745943E12, 0.0], [1.74594642E12, 0.0], [1.74594522E12, 0.0], [1.74594078E12, 0.0], [1.74594096E12, 0.0], [1.74594198E12, 0.0], [1.7459442E12, 0.0], [1.74593994E12, 0.0], [1.74594318E12, 0.0], [1.7459454E12, 0.0], [1.74594216E12, 0.0], [1.7459466E12, 0.0], [1.74594114E12, 0.0], [1.74594438E12, 0.0], [1.74594336E12, 0.0], [1.74594204E12, 0.0], [1.74594426E12, 0.0], [1.74593982E12, 0.0], [1.74594324E12, 0.0], [1.74594648E12, 0.0], [1.74594E12, 0.0], [1.74594102E12, 0.0], [1.74594546E12, 0.0], [1.7459412E12, 0.0], [1.74594222E12, 0.0], [1.74594444E12, 0.0], [1.74594018E12, 0.0], [1.74594342E12, 0.0], [1.74594564E12, 0.0], [1.74594666E12, 0.0], [1.7459424E12, 0.0], [1.74593946E12, 0.0], [1.74594168E12, 0.0], [1.7459427E12, 0.0], [1.74594492E12, 0.0], [1.74594066E12, 0.0], [1.7459439E12, 0.0], [1.74594612E12, 0.0], [1.74594714E12, 0.0], [1.74594288E12, 0.0], [1.74594186E12, 0.0], [1.7459451E12, 0.0], [1.74593964E12, 0.0], [1.74594408E12, 0.0], [1.7459463E12, 0.0], [1.74594306E12, 0.0], [1.74594528E12, 0.0], [1.74594084E12, 0.0], [1.74594396E12, 0.0], [1.74594072E12, 0.0], [1.74594174E12, 0.0], [1.7459397E12, 0.0], [1.74594192E12, 0.0], [1.74594516E12, 0.0], [1.74594294E12, 0.0], [1.74594618E12, 0.0], [1.7459409E12, 0.0], [1.74594414E12, 0.0], [1.74594312E12, 0.0], [1.74594534E12, 0.0], [1.74594636E12, 0.0], [1.74593988E12, 0.0], [1.7459421E12, 0.0], [1.74594432E12, 0.0], [1.74594138E12, 0.0], [1.74594462E12, 0.0], [1.74593916E12, 0.0], [1.7459436E12, 0.0], [1.74594582E12, 0.0], [1.74594684E12, 0.0], [1.74594036E12, 0.0], [1.74594258E12, 0.0], [1.7459448E12, 0.0], [1.74593934E12, 0.0], [1.74594156E12, 0.0], [1.74594378E12, 0.0], [1.745946E12, 0.0], [1.74593952E12, 0.0], [1.74594276E12, 0.0], [1.74594054E12, 0.0], [1.74594498E12, 0.0], [1.74594702E12, 0.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.74594042E12, 350.1733333333332], [1.74594366E12, 353.88311688311677], [1.74594588E12, 355.14084507042236], [1.74594264E12, 351.56962025316454], [1.74594708E12, 351.7162162162162], [1.74594162E12, 351.77777777777777], [1.74594486E12, 353.64788732394373], [1.7459394E12, 350.041095890411], [1.74594384E12, 353.43055555555554], [1.74594606E12, 356.43421052631584], [1.74594624E12, 357.11250000000007], [1.7459406E12, 349.5394736842105], [1.74594282E12, 353.6438356164383], [1.74594504E12, 355.87671232876704], [1.74593958E12, 350.80597014925365], [1.7459418E12, 351.05194805194816], [1.74594402E12, 353.5657894736842], [1.74594672E12, 358.0540540540541], [1.74594108E12, 350.2105263157895], [1.7459433E12, 353.5], [1.74594552E12, 356.99999999999994], [1.74593904E12, 633.0714285714286], [1.74594228E12, 350.5789473684211], [1.74594006E12, 348.44594594594605], [1.7459445E12, 351.55999999999995], [1.74594654E12, 356.90277777777777], [1.74594348E12, 347.36619718309856], [1.74594024E12, 347.98717948717945], [1.7459469E12, 359.9714285714287], [1.74594126E12, 349.2837837837838], [1.7459457E12, 355.21126760563385], [1.74593922E12, 350.1466666666667], [1.74594144E12, 348.8767123287672], [1.74594246E12, 350.51351351351354], [1.74594468E12, 354.4722222222221], [1.74594558E12, 358.41463414634137], [1.74594012E12, 348.2142857142857], [1.74594234E12, 351.4743589743589], [1.74594456E12, 355.01282051282055], [1.74594678E12, 358.33783783783775], [1.7459391E12, 348.9200000000001], [1.74594132E12, 351.6438356164383], [1.74594354E12, 348.02857142857147], [1.74594576E12, 354.68115942028976], [1.74593928E12, 349.20270270270265], [1.74594252E12, 350.9866666666666], [1.7459403E12, 348.15584415584414], [1.74594474E12, 355.3285714285714], [1.74594372E12, 355.0384615384617], [1.74594696E12, 358.4729729729728], [1.74594048E12, 351.2941176470587], [1.7459415E12, 349.4459459459459], [1.74594594E12, 354.27027027027026], [1.74593976E12, 350.8987341772152], [1.745943E12, 352.36986301369865], [1.74594642E12, 357.7945205479452], [1.74594522E12, 354.89041095890406], [1.74594078E12, 350.52631578947376], [1.74594096E12, 348.73684210526324], [1.74594198E12, 353.1315789473686], [1.7459442E12, 355.3375], [1.74593994E12, 344.73972602739724], [1.74594318E12, 352.76000000000016], [1.7459454E12, 357.7083333333333], [1.74594216E12, 350.2876712328768], [1.7459466E12, 357.73239436619707], [1.74594114E12, 351.26315789473705], [1.74594438E12, 354.931506849315], [1.74594336E12, 353.68918918918916], [1.74594204E12, 351.2894736842107], [1.74594426E12, 353.2857142857142], [1.74593982E12, 349.84615384615375], [1.74594324E12, 355.4155844155844], [1.74594648E12, 356.7260273972603], [1.74594E12, 350.49315068493155], [1.74594102E12, 350.73333333333346], [1.74594546E12, 356.87499999999994], [1.7459412E12, 352.7894736842103], [1.74594222E12, 350.5131578947369], [1.74594444E12, 353.1428571428572], [1.74594018E12, 348.30555555555554], [1.74594342E12, 353.89189189189193], [1.74594564E12, 355.00000000000006], [1.74594666E12, 356.7894736842105], [1.7459424E12, 352.47887323943684], [1.74593946E12, 351.3552631578947], [1.74594168E12, 349.2857142857144], [1.7459427E12, 351.9178082191781], [1.74594492E12, 353.68], [1.74594066E12, 349.4857142857142], [1.7459439E12, 352.90410958904107], [1.74594612E12, 357.2361111111112], [1.74594714E12, 357.04], [1.74594288E12, 351.22368421052647], [1.74594186E12, 350.60273972602744], [1.7459451E12, 354.32], [1.74593964E12, 351.82666666666665], [1.74594408E12, 353.77333333333337], [1.7459463E12, 359.7142857142858], [1.74594306E12, 351.8904109589041], [1.74594528E12, 351.7571428571428], [1.74594084E12, 348.4027777777777], [1.74594396E12, 352.81012658227843], [1.74594072E12, 349.37179487179486], [1.74594174E12, 347.79729729729735], [1.7459397E12, 350.85714285714283], [1.74594192E12, 350.55555555555554], [1.74594516E12, 354.20779220779224], [1.74594294E12, 351.72], [1.74594618E12, 356.42465753424665], [1.7459409E12, 350.73333333333335], [1.74594414E12, 353.2432432432432], [1.74594312E12, 351.6986301369862], [1.74594534E12, 352.5324675324674], [1.74594636E12, 358.0657894736842], [1.74593988E12, 345.875], [1.7459421E12, 351.4246575342466], [1.74594432E12, 355.5921052631579], [1.74594138E12, 351.3636363636363], [1.74594462E12, 356.4594594594595], [1.74593916E12, 349.35064935064935], [1.7459436E12, 353.49999999999983], [1.74594582E12, 353.8378378378378], [1.74594684E12, 357.6250000000002], [1.74594036E12, 349.2249999999999], [1.74594258E12, 351.0821917808219], [1.7459448E12, 355.5], [1.74593934E12, 347.9605263157895], [1.74594156E12, 350.8028169014084], [1.74594378E12, 352.80263157894746], [1.745946E12, 356.5066666666668], [1.74593952E12, 351.1891891891893], [1.74594276E12, 351.28169014084494], [1.74594054E12, 349.4473684210528], [1.74594498E12, 354.25974025974017], [1.74594702E12, 360.6266666666666]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74594714E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74593904E12, "maxY": 12.285714285714286, "series": [{"data": [[1.74594042E12, 0.0], [1.74594366E12, 0.0], [1.74594588E12, 0.0], [1.74594264E12, 0.0], [1.74594708E12, 0.0], [1.74594162E12, 0.0], [1.74594486E12, 0.0], [1.7459394E12, 0.0], [1.74594384E12, 0.0], [1.74594606E12, 0.0], [1.74594624E12, 0.0], [1.7459406E12, 0.0], [1.74594282E12, 0.0], [1.74594504E12, 0.0], [1.74593958E12, 0.0], [1.7459418E12, 0.0], [1.74594402E12, 0.0], [1.74594672E12, 0.0], [1.74594108E12, 0.0], [1.7459433E12, 0.0], [1.74594552E12, 0.0], [1.74593904E12, 0.0], [1.74594228E12, 0.0], [1.74594006E12, 0.0], [1.7459445E12, 0.0], [1.74594654E12, 0.0], [1.74594348E12, 0.0], [1.74594024E12, 0.0], [1.7459469E12, 0.0], [1.74594126E12, 0.0], [1.7459457E12, 0.0], [1.74593922E12, 0.0], [1.74594144E12, 0.0], [1.74594246E12, 0.0], [1.74594468E12, 0.0], [1.74594558E12, 0.0], [1.74594012E12, 0.0], [1.74594234E12, 0.0], [1.74594456E12, 0.0], [1.74594678E12, 0.0], [1.7459391E12, 0.0], [1.74594132E12, 0.0], [1.74594354E12, 0.0], [1.74594576E12, 0.0], [1.74593928E12, 0.0], [1.74594252E12, 0.0], [1.7459403E12, 0.0], [1.74594474E12, 0.0], [1.74594372E12, 0.0], [1.74594696E12, 0.0], [1.74594048E12, 0.0], [1.7459415E12, 0.0], [1.74594594E12, 0.0], [1.74593976E12, 0.0], [1.745943E12, 0.0], [1.74594642E12, 0.0], [1.74594522E12, 0.0], [1.74594078E12, 0.0], [1.74594096E12, 0.0], [1.74594198E12, 0.0], [1.7459442E12, 0.0], [1.74593994E12, 0.0], [1.74594318E12, 0.0], [1.7459454E12, 0.0], [1.74594216E12, 0.0], [1.7459466E12, 0.0], [1.74594114E12, 0.0], [1.74594438E12, 0.0], [1.74594336E12, 0.0], [1.74594204E12, 0.0], [1.74594426E12, 0.0], [1.74593982E12, 0.0], [1.74594324E12, 0.0], [1.74594648E12, 0.0], [1.74594E12, 0.0], [1.74594102E12, 0.0], [1.74594546E12, 0.0], [1.7459412E12, 0.0], [1.74594222E12, 0.0], [1.74594444E12, 0.0], [1.74594018E12, 0.0], [1.74594342E12, 0.0], [1.74594564E12, 0.0], [1.74594666E12, 0.0], [1.7459424E12, 0.0], [1.74593946E12, 0.0], [1.74594168E12, 0.0], [1.7459427E12, 0.0], [1.74594492E12, 0.0], [1.74594066E12, 0.0], [1.7459439E12, 0.0], [1.74594612E12, 0.0], [1.74594714E12, 0.0], [1.74594288E12, 0.0], [1.74594186E12, 0.0], [1.7459451E12, 0.0], [1.74593964E12, 0.0], [1.74594408E12, 0.0], [1.7459463E12, 0.0], [1.74594306E12, 0.0], [1.74594528E12, 0.0], [1.74594084E12, 0.0], [1.74594396E12, 0.0], [1.74594072E12, 0.0], [1.74594174E12, 0.0], [1.7459397E12, 0.0], [1.74594192E12, 0.0], [1.74594516E12, 0.0], [1.74594294E12, 0.0], [1.74594618E12, 0.0], [1.7459409E12, 0.0], [1.74594414E12, 0.0], [1.74594312E12, 0.0], [1.74594534E12, 0.0], [1.74594636E12, 0.0], [1.74593988E12, 0.0], [1.7459421E12, 0.0], [1.74594432E12, 0.0], [1.74594138E12, 0.0], [1.74594462E12, 0.0], [1.74593916E12, 0.0], [1.7459436E12, 0.0], [1.74594582E12, 0.0], [1.74594684E12, 0.0], [1.74594036E12, 0.0], [1.74594258E12, 0.0], [1.7459448E12, 0.0], [1.74593934E12, 0.0], [1.74594156E12, 0.0], [1.74594378E12, 0.0], [1.745946E12, 0.0], [1.74593952E12, 0.0], [1.74594276E12, 0.0], [1.74594054E12, 0.0], [1.74594498E12, 0.0], [1.74594702E12, 0.0]], "isOverall": false, "label": "Create CSR", "isController": false}, {"data": [[1.74594042E12, 0.06666666666666665], [1.74594366E12, 0.038961038961038974], [1.74594588E12, 0.04225352112676056], [1.74594264E12, 0.03797468354430381], [1.74594708E12, 0.04054054054054054], [1.74594162E12, 0.055555555555555594], [1.74594486E12, 0.04225352112676058], [1.7459394E12, 0.05479452054794521], [1.74594384E12, 0.041666666666666685], [1.74594606E12, 0.03947368421052631], [1.74594624E12, 0.03749999999999999], [1.7459406E12, 0.03947368421052631], [1.74594282E12, 0.04109589041095892], [1.74594504E12, 0.027397260273972605], [1.74593958E12, 0.05970149253731343], [1.7459418E12, 0.038961038961038974], [1.74594402E12, 0.03947368421052633], [1.74594672E12, 0.04054054054054054], [1.74594108E12, 0.039473684210526314], [1.7459433E12, 0.054054054054054064], [1.74594552E12, 0.04054054054054056], [1.74593904E12, 12.285714285714286], [1.74594228E12, 0.03947368421052633], [1.74594006E12, 0.05405405405405406], [1.7459445E12, 0.039999999999999994], [1.74594654E12, 0.02777777777777778], [1.74594348E12, 0.04225352112676058], [1.74594024E12, 0.05128205128205129], [1.7459469E12, 0.04285714285714286], [1.74594126E12, 0.0], [1.7459457E12, 0.04225352112676056], [1.74593922E12, 0.09333333333333332], [1.74594144E12, 0.054794520547945244], [1.74594246E12, 0.04054054054054056], [1.74594468E12, 0.041666666666666664], [1.74594558E12, 0.03658536585365853], [1.74594012E12, 0.05714285714285714], [1.74594234E12, 0.03846153846153848], [1.74594456E12, 0.03846153846153846], [1.74594678E12, 0.04054054054054054], [1.7459391E12, 0.09333333333333332], [1.74594132E12, 0.04109589041095892], [1.74594354E12, 0.02857142857142857], [1.74594576E12, 0.04347826086956524], [1.74593928E12, 0.06756756756756756], [1.74594252E12, 0.02666666666666667], [1.7459403E12, 0.05194805194805195], [1.74594474E12, 0.04285714285714286], [1.74594372E12, 0.03846153846153848], [1.74594696E12, 0.04054054054054054], [1.74594048E12, 0.04411764705882353], [1.7459415E12, 0.04054054054054056], [1.74594594E12, 0.040540540540540536], [1.74593976E12, 0.05063291139240507], [1.745943E12, 0.04109589041095892], [1.74594642E12, 0.0410958904109589], [1.74594522E12, 0.0410958904109589], [1.74594078E12, 0.05263157894736842], [1.74594096E12, 0.039473684210526314], [1.74594198E12, 0.03947368421052633], [1.7459442E12, 0.03750000000000001], [1.74593994E12, 0.0684931506849315], [1.74594318E12, 0.053333333333333344], [1.7459454E12, 0.041666666666666664], [1.74594216E12, 0.04109589041095892], [1.7459466E12, 0.04225352112676056], [1.74594114E12, 0.039473684210526314], [1.74594438E12, 0.04109589041095892], [1.74594336E12, 0.05405405405405406], [1.74594204E12, 0.03947368421052633], [1.74594426E12, 0.038961038961038974], [1.74593982E12, 0.05128205128205129], [1.74594324E12, 0.038961038961038974], [1.74594648E12, 0.0410958904109589], [1.74594E12, 0.04109589041095891], [1.74594102E12, 0.05333333333333334], [1.74594546E12, 0.041666666666666664], [1.7459412E12, 0.039473684210526314], [1.74594222E12, 0.03947368421052633], [1.74594444E12, 0.05194805194805195], [1.74594018E12, 0.05555555555555556], [1.74594342E12, 0.04054054054054056], [1.74594564E12, 0.0410958904109589], [1.74594666E12, 0.039473684210526314], [1.7459424E12, 0.04225352112676058], [1.74593946E12, 0.052631578947368425], [1.74594168E12, 0.051948051948051986], [1.7459427E12, 0.04109589041095892], [1.74594492E12, 0.039999999999999994], [1.74594066E12, 0.04285714285714286], [1.7459439E12, 0.04109589041095892], [1.74594612E12, 0.02777777777777778], [1.74594714E12, 0.0], [1.74594288E12, 0.05263157894736843], [1.74594186E12, 0.054794520547945244], [1.7459451E12, 0.039999999999999994], [1.74593964E12, 0.04], [1.74594408E12, 0.05333333333333334], [1.7459463E12, 0.03896103896103895], [1.74594306E12, 0.04109589041095892], [1.74594528E12, 0.04285714285714286], [1.74594084E12, 0.05555555555555556], [1.74594396E12, 0.025316455696202535], [1.74594072E12, 0.038461538461538464], [1.74594174E12, 0.05405405405405409], [1.7459397E12, 0.04285714285714287], [1.74594192E12, 0.041666666666666685], [1.74594516E12, 0.025974025974025976], [1.74594294E12, 0.040000000000000015], [1.74594618E12, 0.0410958904109589], [1.7459409E12, 0.05333333333333333], [1.74594414E12, 0.04054054054054056], [1.74594312E12, 0.04109589041095892], [1.74594534E12, 0.03896103896103895], [1.74594636E12, 0.03947368421052631], [1.74593988E12, 0.05555555555555556], [1.7459421E12, 0.04109589041095892], [1.74594432E12, 0.03947368421052633], [1.74594138E12, 0.038961038961038974], [1.74594462E12, 0.040540540540540536], [1.74593916E12, 0.07792207792207792], [1.7459436E12, 0.03846153846153848], [1.74594582E12, 0.040540540540540536], [1.74594684E12, 0.041666666666666664], [1.74594036E12, 0.0375], [1.74594258E12, 0.04109589041095892], [1.7459448E12, 0.041666666666666664], [1.74593934E12, 0.052631578947368425], [1.74594156E12, 0.04225352112676058], [1.74594378E12, 0.03947368421052633], [1.745946E12, 0.039999999999999994], [1.74593952E12, 0.05405405405405406], [1.74594276E12, 0.04225352112676058], [1.74594054E12, 0.03947368421052631], [1.74594498E12, 0.025974025974025976], [1.74594702E12, 0.026666666666666672]], "isOverall": false, "label": "HTTP Request - enroll", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74594714E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 113.0, "minX": 1.74593904E12, "maxY": 4337.0, "series": [{"data": [[1.74594042E12, 1059.0], [1.74594366E12, 1460.0], [1.74594588E12, 1694.0], [1.74594264E12, 1025.0], [1.74594708E12, 1918.0], [1.74594162E12, 1218.0], [1.74594486E12, 1217.0], [1.7459394E12, 1472.0], [1.74594384E12, 1822.0], [1.74594606E12, 1339.0], [1.74594624E12, 999.0], [1.7459406E12, 1018.0], [1.74594282E12, 1184.0], [1.74594504E12, 1170.0], [1.74593958E12, 1382.0], [1.7459418E12, 1120.0], [1.74594402E12, 1691.0], [1.74594672E12, 1217.0], [1.74594108E12, 994.0], [1.7459433E12, 1611.0], [1.74594552E12, 1289.0], [1.74593904E12, 4337.0], [1.74594228E12, 1035.0], [1.74594006E12, 1206.0], [1.7459445E12, 902.0], [1.74594654E12, 1331.0], [1.74594348E12, 1815.0], [1.74594024E12, 984.0], [1.7459469E12, 1709.0], [1.74594126E12, 1533.0], [1.7459457E12, 1779.0], [1.74593922E12, 1254.0], [1.74594144E12, 1266.0], [1.74594246E12, 1263.0], [1.74594468E12, 1373.0], [1.74594558E12, 1575.0], [1.74594012E12, 1170.0], [1.74594234E12, 1071.0], [1.74594456E12, 1256.0], [1.74594678E12, 1319.0], [1.7459391E12, 1298.0], [1.74594132E12, 1616.0], [1.74594354E12, 1376.0], [1.74594576E12, 1951.0], [1.74593928E12, 1183.0], [1.74594252E12, 1327.0], [1.7459403E12, 1308.0], [1.74594474E12, 1820.0], [1.74594372E12, 1169.0], [1.74594696E12, 1191.0], [1.74594048E12, 1455.0], [1.7459415E12, 996.0], [1.74594594E12, 1082.0], [1.74593976E12, 1161.0], [1.745943E12, 983.0], [1.74594642E12, 1189.0], [1.74594522E12, 1463.0], [1.74594078E12, 1119.0], [1.74594096E12, 1002.0], [1.74594198E12, 1468.0], [1.7459442E12, 1132.0], [1.74593994E12, 1429.0], [1.74594318E12, 1275.0], [1.7459454E12, 1616.0], [1.74594216E12, 1085.0], [1.7459466E12, 1440.0], [1.74594114E12, 1101.0], [1.74594438E12, 1283.0], [1.74594336E12, 1192.0], [1.74594204E12, 1357.0], [1.74594426E12, 1087.0], [1.74593982E12, 1063.0], [1.74594324E12, 1220.0], [1.74594648E12, 1414.0], [1.74594E12, 1100.0], [1.74594102E12, 1205.0], [1.74594546E12, 1425.0], [1.7459412E12, 1489.0], [1.74594222E12, 1039.0], [1.74594444E12, 1561.0], [1.74594018E12, 1859.0], [1.74594342E12, 1160.0], [1.74594564E12, 967.0], [1.74594666E12, 1218.0], [1.7459424E12, 1925.0], [1.74593946E12, 1366.0], [1.74594168E12, 1009.0], [1.7459427E12, 1196.0], [1.74594492E12, 1262.0], [1.74594066E12, 1275.0], [1.7459439E12, 1232.0], [1.74594612E12, 1164.0], [1.74594714E12, 1108.0], [1.74594288E12, 1602.0], [1.74594186E12, 1303.0], [1.7459451E12, 1209.0], [1.74593964E12, 1322.0], [1.74594408E12, 940.0], [1.7459463E12, 1475.0], [1.74594306E12, 1329.0], [1.74594528E12, 1357.0], [1.74594084E12, 1440.0], [1.74594396E12, 1033.0], [1.74594072E12, 1337.0], [1.74594174E12, 1390.0], [1.7459397E12, 1557.0], [1.74594192E12, 1170.0], [1.74594516E12, 2082.0], [1.74594294E12, 1200.0], [1.74594618E12, 1651.0], [1.7459409E12, 972.0], [1.74594414E12, 1377.0], [1.74594312E12, 1375.0], [1.74594534E12, 1929.0], [1.74594636E12, 1430.0], [1.74593988E12, 1293.0], [1.7459421E12, 1239.0], [1.74594432E12, 1259.0], [1.74594138E12, 1151.0], [1.74594462E12, 1578.0], [1.74593916E12, 1458.0], [1.7459436E12, 1046.0], [1.74594582E12, 1226.0], [1.74594684E12, 1312.0], [1.74594036E12, 1049.0], [1.74594258E12, 1132.0], [1.7459448E12, 1379.0], [1.74593934E12, 1071.0], [1.74594156E12, 1602.0], [1.74594378E12, 1448.0], [1.745946E12, 1114.0], [1.74593952E12, 1006.0], [1.74594276E12, 1364.0], [1.74594054E12, 1383.0], [1.74594498E12, 1073.0], [1.74594702E12, 1217.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74594042E12, 645.0], [1.74594366E12, 554.0], [1.74594588E12, 696.8000000000001], [1.74594264E12, 594.0], [1.74594708E12, 615.5999999999999], [1.74594162E12, 699.4000000000002], [1.74594486E12, 685.2], [1.7459394E12, 635.1000000000001], [1.74594384E12, 631.0], [1.74594606E12, 580.3999999999999], [1.74594624E12, 561.4000000000001], [1.7459406E12, 713.4000000000007], [1.74594282E12, 650.7000000000003], [1.74594504E12, 671.8000000000003], [1.74593958E12, 723.5], [1.7459418E12, 569.0], [1.74594402E12, 565.0], [1.74594672E12, 596.0], [1.74594108E12, 612.5999999999999], [1.7459433E12, 671.2000000000007], [1.74594552E12, 668.6999999999999], [1.74593904E12, 620.0], [1.74594228E12, 621.9000000000001], [1.74594006E12, 709.3], [1.7459445E12, 645.6000000000001], [1.74594654E12, 684.8], [1.74594348E12, 671.2], [1.74594024E12, 558.4000000000001], [1.7459469E12, 698.7000000000002], [1.74594126E12, 611.3], [1.7459457E12, 716.4], [1.74593922E12, 633.0], [1.74594144E12, 651.9000000000001], [1.74594246E12, 669.8000000000009], [1.74594468E12, 646.5], [1.74594558E12, 483.5], [1.74594012E12, 696.2], [1.74594234E12, 572.8], [1.74594456E12, 542.4000000000001], [1.74594678E12, 561.1999999999997], [1.7459391E12, 621.0], [1.74594132E12, 701.2000000000003], [1.74594354E12, 749.9000000000002], [1.74594576E12, 690.5000000000003], [1.74593928E12, 638.0], [1.74594252E12, 587.8], [1.7459403E12, 563.0], [1.74594474E12, 726.9999999999999], [1.74594372E12, 562.5000000000002], [1.74594696E12, 636.9], [1.74594048E12, 810.2], [1.7459415E12, 607.5], [1.74594594E12, 654.0], [1.74593976E12, 576.2], [1.745943E12, 616.8000000000001], [1.74594642E12, 647.7000000000003], [1.74594522E12, 647.4000000000001], [1.74594078E12, 546.4000000000001], [1.74594096E12, 622.5000000000001], [1.74594198E12, 578.5000000000001], [1.7459442E12, 487.20000000000005], [1.74593994E12, 697.5000000000002], [1.74594318E12, 613.0], [1.7459454E12, 690.2], [1.74594216E12, 712.0000000000002], [1.7459466E12, 675.7000000000005], [1.74594114E12, 596.9000000000007], [1.74594438E12, 648.2], [1.74594336E12, 650.0999999999999], [1.74594204E12, 604.8000000000002], [1.74594426E12, 605.0], [1.74593982E12, 570.4000000000002], [1.74594324E12, 596.8000000000001], [1.74594648E12, 669.4000000000004], [1.74594E12, 646.4000000000003], [1.74594102E12, 640.3000000000001], [1.74594546E12, 692.0], [1.7459412E12, 632.0000000000005], [1.74594222E12, 602.7999999999998], [1.74594444E12, 570.5999999999999], [1.74594018E12, 637.6000000000001], [1.74594342E12, 631.4999999999998], [1.74594564E12, 653.4000000000002], [1.74594666E12, 558.4000000000002], [1.7459424E12, 720.5999999999999], [1.74593946E12, 601.6000000000001], [1.74594168E12, 549.1999999999999], [1.7459427E12, 666.4000000000002], [1.74594492E12, 580.8], [1.74594066E12, 734.5], [1.7459439E12, 655.2], [1.74594612E12, 648.8], [1.74594714E12, 624.0], [1.74594288E12, 582.6000000000001], [1.74594186E12, 663.8000000000003], [1.7459451E12, 631.0], [1.74593964E12, 657.0], [1.74594408E12, 586.6000000000001], [1.7459463E12, 557.1999999999998], [1.74594306E12, 646.4000000000003], [1.74594528E12, 658.1], [1.74594084E12, 692.5], [1.74594396E12, 583.0], [1.74594072E12, 595.8000000000001], [1.74594174E12, 681.6999999999999], [1.7459397E12, 697.9000000000001], [1.74594192E12, 636.5], [1.74594516E12, 576.6000000000001], [1.74594294E12, 576.8000000000003], [1.74594618E12, 677.6], [1.7459409E12, 689.9], [1.74594414E12, 628.8000000000001], [1.74594312E12, 668.6000000000003], [1.74594534E12, 623.0], [1.74594636E12, 629.2], [1.74593988E12, 725.5999999999999], [1.7459421E12, 649.0000000000005], [1.74594432E12, 609.6], [1.74594138E12, 667.9999999999997], [1.74594462E12, 624.8999999999997], [1.74593916E12, 604.4000000000001], [1.7459436E12, 543.0000000000002], [1.74594582E12, 666.4], [1.74594684E12, 676.3999999999999], [1.74594036E12, 544.6], [1.74594258E12, 651.7000000000005], [1.7459448E12, 637.0], [1.74593934E12, 644.9000000000003], [1.74594156E12, 648.8000000000001], [1.74594378E12, 629.3000000000003], [1.745946E12, 629.0], [1.74593952E12, 625.0], [1.74594276E12, 668.8000000000008], [1.74594054E12, 607.6000000000001], [1.74594498E12, 605.5], [1.74594702E12, 616.0000000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74594042E12, 1017.6900000000007], [1.74594366E12, 1266.949999999996], [1.74594588E12, 1469.1099999999965], [1.74594264E12, 993.1399999999999], [1.74594708E12, 1580.3899999999937], [1.74594162E12, 1152.679999999999], [1.74594486E12, 1164.9699999999991], [1.7459394E12, 1369.0700000000002], [1.74594384E12, 1735.6000000000022], [1.74594606E12, 1191.0400000000022], [1.74594624E12, 967.9999999999998], [1.7459406E12, 970.679999999999], [1.74594282E12, 1153.45], [1.74594504E12, 1095.6000000000015], [1.74593958E12, 1328.450000000001], [1.7459418E12, 1089.7499999999993], [1.74594402E12, 1358.1599999999994], [1.74594672E12, 1155.5], [1.74594108E12, 946.4800000000007], [1.7459433E12, 1312.9200000000064], [1.74594552E12, 1165.5199999999977], [1.74593904E12, 4337.0], [1.74594228E12, 1009.56], [1.74594006E12, 1130.5399999999986], [1.7459445E12, 879.1199999999995], [1.74594654E12, 1253.5600000000004], [1.74594348E12, 1550.1199999999958], [1.74594024E12, 935.2799999999997], [1.7459469E12, 1524.0900000000015], [1.74594126E12, 1404.1299999999976], [1.7459457E12, 1592.1000000000056], [1.74593922E12, 1233.0], [1.74594144E12, 1195.0300000000002], [1.74594246E12, 1243.8000000000004], [1.74594468E12, 1286.6000000000022], [1.74594558E12, 1288.3499999999974], [1.74594012E12, 1125.7200000000003], [1.74594234E12, 1044.12], [1.74594456E12, 1209.5199999999998], [1.74594678E12, 1272.9399999999991], [1.7459391E12, 1251.0], [1.74594132E12, 1305.9200000000067], [1.74594354E12, 1263.660000000001], [1.74594576E12, 1848.4299999999962], [1.74593928E12, 1122.0], [1.74594252E12, 1255.2399999999986], [1.7459403E12, 1241.4499999999987], [1.74594474E12, 1702.4000000000035], [1.74594372E12, 1061.2700000000013], [1.74594696E12, 1177.2799999999997], [1.74594048E12, 1355.0600000000013], [1.7459415E12, 993.06], [1.74594594E12, 1022.0], [1.74593976E12, 1005.8299999999991], [1.745943E12, 962.7599999999996], [1.74594642E12, 1119.91], [1.74594522E12, 1405.9599999999991], [1.74594078E12, 1077.9199999999992], [1.74594096E12, 979.2099999999999], [1.74594198E12, 1149.4699999999993], [1.7459442E12, 1053.8799999999994], [1.74593994E12, 1389.52], [1.74594318E12, 1251.5], [1.7459454E12, 1352.8800000000015], [1.74594216E12, 1069.3599999999997], [1.7459466E12, 1342.8199999999983], [1.74594114E12, 1037.3999999999999], [1.74594438E12, 1220.1200000000013], [1.74594336E12, 1128.2999999999988], [1.74594204E12, 1323.7199999999993], [1.74594426E12, 1051.2499999999993], [1.74593982E12, 940.0399999999973], [1.74594324E12, 1188.08], [1.74594648E12, 1267.120000000003], [1.74594E12, 1094.83], [1.74594102E12, 1162.1600000000008], [1.74594546E12, 1225.200000000005], [1.7459412E12, 1208.1999999999944], [1.74594222E12, 969.340000000001], [1.74594444E12, 1226.7400000000048], [1.74594018E12, 1504.7999999999938], [1.74594342E12, 1112.4699999999991], [1.74594564E12, 955.0000000000002], [1.74594666E12, 1154.3999999999999], [1.7459424E12, 1520.200000000002], [1.74593946E12, 1167.879999999996], [1.74594168E12, 974.4400000000005], [1.7459427E12, 1177.5999999999997], [1.74594492E12, 1249.2500000000002], [1.74594066E12, 1236.8700000000003], [1.7459439E12, 1205.7799999999995], [1.74594612E12, 1144.64], [1.74594714E12, 1108.0], [1.74594288E12, 1411.7299999999996], [1.74594186E12, 1212.280000000002], [1.7459451E12, 1092.0], [1.74593964E12, 1312.5], [1.74594408E12, 931.8400000000001], [1.7459463E12, 1196.3600000000042], [1.74594306E12, 1278.600000000001], [1.74594528E12, 1300.0100000000004], [1.74594084E12, 1279.800000000004], [1.74594396E12, 981.4000000000005], [1.74594072E12, 1298.1399999999992], [1.74594174E12, 1352.2699999999993], [1.7459397E12, 1490.5800000000006], [1.74594192E12, 1096.2000000000019], [1.74594516E12, 1419.5199999999973], [1.74594294E12, 1149.039999999999], [1.74594618E12, 1392.0300000000007], [1.7459409E12, 951.6000000000004], [1.74594414E12, 1252.2000000000025], [1.74594312E12, 1220.3700000000003], [1.74594534E12, 1414.3599999999979], [1.74594636E12, 1278.9499999999996], [1.74593988E12, 1266.6000000000001], [1.7459421E12, 1229.4], [1.74594432E12, 1149.799999999998], [1.74594138E12, 1062.9800000000014], [1.74594462E12, 1516.7499999999989], [1.74593916E12, 1357.7599999999995], [1.7459436E12, 975.8199999999985], [1.74594582E12, 1223.06], [1.74594684E12, 1160.2000000000007], [1.74594036E12, 900.7699999999967], [1.74594258E12, 1130.59], [1.7459448E12, 1287.0400000000004], [1.74593934E12, 1065.17], [1.74594156E12, 1390.4399999999966], [1.74594378E12, 1400.83], [1.745946E12, 1063.0], [1.74593952E12, 999.0], [1.74594276E12, 1342.9299999999996], [1.74594054E12, 1248.9099999999996], [1.74594498E12, 1033.9499999999991], [1.74594702E12, 1123.3999999999983]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74594042E12, 809.9999999999993], [1.74594366E12, 710.75], [1.74594588E12, 892.4], [1.74594264E12, 699.6999999999998], [1.74594708E12, 660.9499999999995], [1.74594162E12, 837.1999999999999], [1.74594486E12, 868.1499999999994], [1.7459394E12, 880.8000000000003], [1.74594384E12, 878.0], [1.74594606E12, 756.8999999999983], [1.74594624E12, 701.1], [1.7459406E12, 856.8000000000004], [1.74594282E12, 749.7500000000001], [1.74594504E12, 804.1999999999999], [1.74593958E12, 958.75], [1.7459418E12, 778.75], [1.74594402E12, 760.6499999999999], [1.74594672E12, 734.0], [1.74594108E12, 790.4999999999999], [1.7459433E12, 847.9999999999998], [1.74594552E12, 771.5999999999995], [1.74593904E12, 2579.0], [1.74594228E12, 759.4999999999998], [1.74594006E12, 808.7999999999997], [1.7459445E12, 744.0], [1.74594654E12, 832.4], [1.74594348E12, 791.8499999999999], [1.74594024E12, 719.5999999999999], [1.7459469E12, 931.8499999999997], [1.74594126E12, 797.0999999999999], [1.7459457E12, 992.6000000000001], [1.74593922E12, 828.5], [1.74594144E12, 784.4000000000002], [1.74594246E12, 845.5999999999999], [1.74594468E12, 809.75], [1.74594558E12, 581.25], [1.74594012E12, 879.1499999999999], [1.74594234E12, 720.9999999999991], [1.74594456E12, 676.8], [1.74594678E12, 748.6499999999996], [1.7459391E12, 801.5], [1.74594132E12, 808.3999999999997], [1.74594354E12, 824.0], [1.74594576E12, 912.1999999999989], [1.74593928E12, 832.0], [1.74594252E12, 710.2000000000002], [1.7459403E12, 717.25], [1.74594474E12, 926.6000000000004], [1.74594372E12, 738.1500000000002], [1.74594696E12, 750.2999999999995], [1.74594048E12, 943.5999999999999], [1.7459415E12, 745.7999999999997], [1.74594594E12, 780.0], [1.74593976E12, 777.4499999999998], [1.745943E12, 819.7999999999995], [1.74594642E12, 775.0], [1.74594522E12, 736.5], [1.74594078E12, 840.8000000000001], [1.74594096E12, 728.2499999999998], [1.74594198E12, 692.5499999999998], [1.7459442E12, 673.6000000000001], [1.74593994E12, 834.95], [1.74594318E12, 682.5], [1.7459454E12, 835.799999999999], [1.74594216E12, 904.9999999999995], [1.7459466E12, 923.8999999999999], [1.74594114E12, 743.7499999999999], [1.74594438E12, 767.5999999999996], [1.74594336E12, 848.9999999999997], [1.74594204E12, 740.8], [1.74594426E12, 712.5], [1.74593982E12, 699.4999999999997], [1.74594324E12, 762.5999999999999], [1.74594648E12, 850.9999999999999], [1.74594E12, 777.2500000000002], [1.74594102E12, 747.2999999999994], [1.74594546E12, 819.5], [1.7459412E12, 773.4000000000001], [1.74594222E12, 763.6999999999998], [1.74594444E12, 766.4999999999999], [1.74594018E12, 830.5], [1.74594342E12, 762.3], [1.74594564E12, 794.9999999999998], [1.74594666E12, 698.4499999999999], [1.7459424E12, 848.3999999999994], [1.74593946E12, 785.8000000000002], [1.74594168E12, 765.5999999999998], [1.7459427E12, 1026.8999999999999], [1.74594492E12, 843.5999999999999], [1.74594066E12, 908.8999999999993], [1.7459439E12, 813.8999999999987], [1.74594612E12, 803.9999999999997], [1.74594714E12, 889.5], [1.74594288E12, 739.8499999999998], [1.74594186E12, 804.7999999999997], [1.7459451E12, 792.0], [1.74593964E12, 791.5], [1.74594408E12, 764.8499999999997], [1.7459463E12, 734.5999999999998], [1.74594306E12, 745.0], [1.74594528E12, 896.0999999999993], [1.74594084E12, 803.0], [1.74594396E12, 658.0], [1.74594072E12, 782.1999999999999], [1.74594174E12, 811.099999999999], [1.7459397E12, 906.9999999999995], [1.74594192E12, 814.5], [1.74594516E12, 673.3999999999999], [1.74594294E12, 735.8000000000001], [1.74594618E12, 830.5500000000003], [1.7459409E12, 753.5999999999999], [1.74594414E12, 792.9999999999997], [1.74594312E12, 833.5], [1.74594534E12, 756.4], [1.74594636E12, 768.0999999999999], [1.74593988E12, 937.5999999999997], [1.7459421E12, 803.3999999999997], [1.74594432E12, 719.8000000000001], [1.74594138E12, 778.599999999999], [1.74594462E12, 757.1999999999996], [1.74593916E12, 694.1999999999998], [1.7459436E12, 703.0], [1.74594582E12, 905.5999999999988], [1.74594684E12, 859.5999999999998], [1.74594036E12, 771.7999999999997], [1.74594258E12, 784.2], [1.7459448E12, 807.9999999999998], [1.74593934E12, 770.55], [1.74594156E12, 870.0999999999997], [1.74594378E12, 805.0999999999999], [1.745946E12, 847.5], [1.74593952E12, 729.5], [1.74594276E12, 840.7999999999996], [1.74594054E12, 837.0], [1.74594498E12, 721.75], [1.74594702E12, 743.2]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.74594042E12, 129.0], [1.74594366E12, 170.0], [1.74594588E12, 133.0], [1.74594264E12, 150.0], [1.74594708E12, 127.0], [1.74594162E12, 133.0], [1.74594486E12, 156.0], [1.7459394E12, 120.0], [1.74594384E12, 133.0], [1.74594606E12, 113.0], [1.74594624E12, 127.0], [1.7459406E12, 160.0], [1.74594282E12, 143.0], [1.74594504E12, 132.0], [1.74593958E12, 170.0], [1.7459418E12, 130.0], [1.74594402E12, 152.0], [1.74594672E12, 134.0], [1.74594108E12, 132.0], [1.7459433E12, 133.0], [1.74594552E12, 152.0], [1.74593904E12, 176.0], [1.74594228E12, 147.0], [1.74594006E12, 168.0], [1.7459445E12, 128.0], [1.74594654E12, 127.0], [1.74594348E12, 118.0], [1.74594024E12, 138.0], [1.7459469E12, 150.0], [1.74594126E12, 155.0], [1.7459457E12, 151.0], [1.74593922E12, 136.0], [1.74594144E12, 133.0], [1.74594246E12, 132.0], [1.74594468E12, 120.0], [1.74594558E12, 114.0], [1.74594012E12, 145.0], [1.74594234E12, 115.0], [1.74594456E12, 158.0], [1.74594678E12, 127.0], [1.7459391E12, 123.0], [1.74594132E12, 151.0], [1.74594354E12, 124.0], [1.74594576E12, 149.0], [1.74593928E12, 153.0], [1.74594252E12, 124.0], [1.7459403E12, 164.0], [1.74594474E12, 133.0], [1.74594372E12, 131.0], [1.74594696E12, 147.0], [1.74594048E12, 166.0], [1.7459415E12, 176.0], [1.74594594E12, 147.0], [1.74593976E12, 138.0], [1.745943E12, 168.0], [1.74594642E12, 162.0], [1.74594522E12, 137.0], [1.74594078E12, 138.0], [1.74594096E12, 162.0], [1.74594198E12, 151.0], [1.7459442E12, 134.0], [1.74593994E12, 143.0], [1.74594318E12, 128.0], [1.7459454E12, 156.0], [1.74594216E12, 144.0], [1.7459466E12, 138.0], [1.74594114E12, 117.0], [1.74594438E12, 171.0], [1.74594336E12, 121.0], [1.74594204E12, 131.0], [1.74594426E12, 133.0], [1.74593982E12, 135.0], [1.74594324E12, 138.0], [1.74594648E12, 133.0], [1.74594E12, 157.0], [1.74594102E12, 120.0], [1.74594546E12, 141.0], [1.7459412E12, 124.0], [1.74594222E12, 129.0], [1.74594444E12, 134.0], [1.74594018E12, 172.0], [1.74594342E12, 126.0], [1.74594564E12, 135.0], [1.74594666E12, 135.0], [1.7459424E12, 123.0], [1.74593946E12, 150.0], [1.74594168E12, 142.0], [1.7459427E12, 139.0], [1.74594492E12, 131.0], [1.74594066E12, 152.0], [1.7459439E12, 145.0], [1.74594612E12, 126.0], [1.74594714E12, 169.0], [1.74594288E12, 157.0], [1.74594186E12, 148.0], [1.7459451E12, 141.0], [1.74593964E12, 127.0], [1.74594408E12, 143.0], [1.7459463E12, 142.0], [1.74594306E12, 154.0], [1.74594528E12, 148.0], [1.74594084E12, 133.0], [1.74594396E12, 162.0], [1.74594072E12, 126.0], [1.74594174E12, 120.0], [1.7459397E12, 163.0], [1.74594192E12, 138.0], [1.74594516E12, 133.0], [1.74594294E12, 154.0], [1.74594618E12, 122.0], [1.7459409E12, 131.0], [1.74594414E12, 124.0], [1.74594312E12, 146.0], [1.74594534E12, 139.0], [1.74594636E12, 129.0], [1.74593988E12, 137.0], [1.7459421E12, 161.0], [1.74594432E12, 118.0], [1.74594138E12, 131.0], [1.74594462E12, 131.0], [1.74593916E12, 147.0], [1.7459436E12, 127.0], [1.74594582E12, 137.0], [1.74594684E12, 126.0], [1.74594036E12, 141.0], [1.74594258E12, 140.0], [1.7459448E12, 155.0], [1.74593934E12, 144.0], [1.74594156E12, 161.0], [1.74594378E12, 121.0], [1.745946E12, 119.0], [1.74593952E12, 174.0], [1.74594276E12, 155.0], [1.74594054E12, 155.0], [1.74594498E12, 131.0], [1.74594702E12, 145.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74594042E12, 351.0], [1.74594366E12, 354.0], [1.74594588E12, 356.5], [1.74594264E12, 351.0], [1.74594708E12, 351.0], [1.74594162E12, 352.0], [1.74594486E12, 355.0], [1.7459394E12, 350.0], [1.74594384E12, 354.0], [1.74594606E12, 356.0], [1.74594624E12, 357.0], [1.7459406E12, 349.0], [1.74594282E12, 355.0], [1.74594504E12, 357.0], [1.74593958E12, 352.0], [1.7459418E12, 352.0], [1.74594402E12, 354.0], [1.74594672E12, 358.0], [1.74594108E12, 350.0], [1.7459433E12, 354.0], [1.74594552E12, 358.0], [1.74593904E12, 350.0], [1.74594228E12, 351.0], [1.74594006E12, 350.0], [1.7459445E12, 352.0], [1.74594654E12, 358.0], [1.74594348E12, 347.0], [1.74594024E12, 349.0], [1.7459469E12, 361.0], [1.74594126E12, 350.0], [1.7459457E12, 355.0], [1.74593922E12, 351.0], [1.74594144E12, 350.0], [1.74594246E12, 351.0], [1.74594468E12, 355.0], [1.74594558E12, 358.0], [1.74594012E12, 350.0], [1.74594234E12, 352.0], [1.74594456E12, 355.0], [1.74594678E12, 359.0], [1.7459391E12, 350.0], [1.74594132E12, 353.0], [1.74594354E12, 352.5], [1.74594576E12, 355.0], [1.74593928E12, 350.0], [1.74594252E12, 352.0], [1.7459403E12, 348.5], [1.74594474E12, 356.0], [1.74594372E12, 356.0], [1.74594696E12, 360.0], [1.74594048E12, 353.0], [1.7459415E12, 350.0], [1.74594594E12, 355.0], [1.74593976E12, 350.0], [1.745943E12, 354.0], [1.74594642E12, 359.0], [1.74594522E12, 355.0], [1.74594078E12, 351.0], [1.74594096E12, 349.5], [1.74594198E12, 354.0], [1.7459442E12, 356.0], [1.74593994E12, 346.0], [1.74594318E12, 353.0], [1.7459454E12, 359.0], [1.74594216E12, 351.0], [1.7459466E12, 358.0], [1.74594114E12, 352.0], [1.74594438E12, 356.0], [1.74594336E12, 354.0], [1.74594204E12, 351.0], [1.74594426E12, 354.0], [1.74593982E12, 350.0], [1.74594324E12, 355.0], [1.74594648E12, 357.0], [1.74594E12, 351.0], [1.74594102E12, 352.0], [1.74594546E12, 358.0], [1.7459412E12, 353.0], [1.74594222E12, 351.0], [1.74594444E12, 353.0], [1.74594018E12, 349.0], [1.74594342E12, 355.0], [1.74594564E12, 356.0], [1.74594666E12, 358.0], [1.7459424E12, 353.0], [1.74593946E12, 352.0], [1.74594168E12, 350.0], [1.7459427E12, 352.0], [1.74594492E12, 354.0], [1.74594066E12, 350.5], [1.7459439E12, 354.0], [1.74594612E12, 358.0], [1.74594714E12, 351.0], [1.74594288E12, 352.0], [1.74594186E12, 351.0], [1.7459451E12, 355.0], [1.74593964E12, 352.0], [1.74594408E12, 354.5], [1.7459463E12, 360.0], [1.74594306E12, 352.0], [1.74594528E12, 353.5], [1.74594084E12, 350.0], [1.74594396E12, 353.0], [1.74594072E12, 349.0], [1.74594174E12, 351.0], [1.7459397E12, 352.5], [1.74594192E12, 352.0], [1.74594516E12, 354.0], [1.74594294E12, 353.0], [1.74594618E12, 357.0], [1.7459409E12, 351.0], [1.74594414E12, 354.0], [1.74594312E12, 353.0], [1.74594534E12, 351.0], [1.74594636E12, 359.0], [1.74593988E12, 346.0], [1.7459421E12, 352.0], [1.74594432E12, 356.0], [1.74594138E12, 351.0], [1.74594462E12, 356.5], [1.74593916E12, 349.0], [1.7459436E12, 354.0], [1.74594582E12, 354.5], [1.74594684E12, 359.0], [1.74594036E12, 350.0], [1.74594258E12, 352.0], [1.7459448E12, 357.0], [1.74593934E12, 348.0], [1.74594156E12, 352.5], [1.74594378E12, 352.0], [1.745946E12, 357.0], [1.74593952E12, 351.0], [1.74594276E12, 352.5], [1.74594054E12, 348.0], [1.74594498E12, 355.0], [1.74594702E12, 361.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74594714E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 348.0, "minX": 1.0, "maxY": 682.5, "series": [{"data": [[1.0, 682.5], [2.0, 358.0], [4.0, 348.0], [3.0, 352.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 336.5, "series": [{"data": [[1.0, 0.0], [2.0, 168.5], [4.0, 169.0], [3.0, 336.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.74593904E12, "maxY": 2.7333333333333334, "series": [{"data": [[1.74594042E12, 2.5], [1.74594366E12, 2.566666666666667], [1.74594588E12, 2.3666666666666667], [1.74594264E12, 2.6333333333333333], [1.74594708E12, 2.466666666666667], [1.74594162E12, 2.4166666666666665], [1.74594486E12, 2.3666666666666667], [1.7459394E12, 2.433333333333333], [1.74594384E12, 2.4], [1.74594606E12, 2.55], [1.74594624E12, 2.683333333333333], [1.7459406E12, 2.5166666666666666], [1.74594282E12, 2.433333333333333], [1.74594504E12, 2.45], [1.74593958E12, 2.2333333333333334], [1.7459418E12, 2.566666666666667], [1.74594402E12, 2.533333333333333], [1.74594672E12, 2.4833333333333334], [1.74594108E12, 2.55], [1.7459433E12, 2.45], [1.74594552E12, 2.466666666666667], [1.74593904E12, 0.5], [1.74594228E12, 2.533333333333333], [1.74594006E12, 2.466666666666667], [1.7459445E12, 2.5166666666666666], [1.74594654E12, 2.3833333333333333], [1.74594348E12, 2.3666666666666667], [1.74594024E12, 2.5833333333333335], [1.7459469E12, 2.3333333333333335], [1.74594126E12, 2.466666666666667], [1.7459457E12, 2.35], [1.74593922E12, 2.4833333333333334], [1.74594144E12, 2.433333333333333], [1.74594246E12, 2.45], [1.74594468E12, 2.4], [1.74594558E12, 2.7333333333333334], [1.74594012E12, 2.3333333333333335], [1.74594234E12, 2.5833333333333335], [1.74594456E12, 2.5833333333333335], [1.74594678E12, 2.466666666666667], [1.7459391E12, 2.4833333333333334], [1.74594132E12, 2.45], [1.74594354E12, 2.3333333333333335], [1.74594576E12, 2.3], [1.74593928E12, 2.4833333333333334], [1.74594252E12, 2.5166666666666666], [1.7459403E12, 2.566666666666667], [1.74594474E12, 2.35], [1.74594372E12, 2.6], [1.74594696E12, 2.466666666666667], [1.74594048E12, 2.283333333333333], [1.7459415E12, 2.466666666666667], [1.74594594E12, 2.4833333333333334], [1.74593976E12, 2.6333333333333333], [1.745943E12, 2.4166666666666665], [1.74594642E12, 2.433333333333333], [1.74594522E12, 2.4166666666666665], [1.74594078E12, 2.5166666666666666], [1.74594096E12, 2.533333333333333], [1.74594198E12, 2.533333333333333], [1.7459442E12, 2.683333333333333], [1.74593994E12, 2.433333333333333], [1.74594318E12, 2.4833333333333334], [1.7459454E12, 2.3833333333333333], [1.74594216E12, 2.4166666666666665], [1.7459466E12, 2.3666666666666667], [1.74594114E12, 2.533333333333333], [1.74594438E12, 2.45], [1.74594336E12, 2.466666666666667], [1.74594204E12, 2.5166666666666666], [1.74594426E12, 2.566666666666667], [1.74593982E12, 2.6166666666666667], [1.74594324E12, 2.5833333333333335], [1.74594648E12, 2.45], [1.74594E12, 2.433333333333333], [1.74594102E12, 2.5], [1.74594546E12, 2.4], [1.7459412E12, 2.5166666666666666], [1.74594222E12, 2.55], [1.74594444E12, 2.55], [1.74594018E12, 2.4166666666666665], [1.74594342E12, 2.466666666666667], [1.74594564E12, 2.45], [1.74594666E12, 2.533333333333333], [1.7459424E12, 2.3833333333333333], [1.74593946E12, 2.5166666666666666], [1.74594168E12, 2.55], [1.7459427E12, 2.4166666666666665], [1.74594492E12, 2.5], [1.74594066E12, 2.3333333333333335], [1.7459439E12, 2.4166666666666665], [1.74594612E12, 2.3833333333333333], [1.74594714E12, 0.8], [1.74594288E12, 2.533333333333333], [1.74594186E12, 2.45], [1.7459451E12, 2.4833333333333334], [1.74593964E12, 2.4833333333333334], [1.74594408E12, 2.5], [1.7459463E12, 2.55], [1.74594306E12, 2.45], [1.74594528E12, 2.3333333333333335], [1.74594084E12, 2.4], [1.74594396E12, 2.65], [1.74594072E12, 2.6166666666666667], [1.74594174E12, 2.466666666666667], [1.7459397E12, 2.3333333333333335], [1.74594192E12, 2.4], [1.74594516E12, 2.5833333333333335], [1.74594294E12, 2.5166666666666666], [1.74594618E12, 2.433333333333333], [1.7459409E12, 2.5], [1.74594414E12, 2.45], [1.74594312E12, 2.433333333333333], [1.74594534E12, 2.5833333333333335], [1.74594636E12, 2.533333333333333], [1.74593988E12, 2.3833333333333333], [1.7459421E12, 2.45], [1.74594432E12, 2.5166666666666666], [1.74594138E12, 2.55], [1.74594462E12, 2.466666666666667], [1.74593916E12, 2.5833333333333335], [1.7459436E12, 2.6166666666666667], [1.74594582E12, 2.466666666666667], [1.74594684E12, 2.3833333333333333], [1.74594036E12, 2.6666666666666665], [1.74594258E12, 2.433333333333333], [1.7459448E12, 2.3833333333333333], [1.74593934E12, 2.533333333333333], [1.74594156E12, 2.3666666666666667], [1.74594378E12, 2.533333333333333], [1.745946E12, 2.4833333333333334], [1.74593952E12, 2.4833333333333334], [1.74594276E12, 2.3666666666666667], [1.74594054E12, 2.533333333333333], [1.74594498E12, 2.566666666666667], [1.74594702E12, 2.5166666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74594714E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.74593904E12, "maxY": 1.3666666666666667, "series": [{"data": [[1.74594042E12, 1.25], [1.74594366E12, 1.2833333333333334], [1.74594588E12, 1.1833333333333333], [1.74594264E12, 1.3166666666666667], [1.74594708E12, 1.2333333333333334], [1.74594162E12, 1.2166666666666666], [1.74594486E12, 1.1833333333333333], [1.7459394E12, 1.2166666666666666], [1.74594384E12, 1.2], [1.74594606E12, 1.2833333333333334], [1.74594624E12, 1.35], [1.7459406E12, 1.25], [1.74594282E12, 1.2166666666666666], [1.74594504E12, 1.2333333333333334], [1.74593958E12, 1.1166666666666667], [1.7459418E12, 1.2833333333333334], [1.74594402E12, 1.2666666666666666], [1.74594672E12, 1.25], [1.74594108E12, 1.2833333333333334], [1.7459433E12, 1.2166666666666666], [1.74594552E12, 1.2333333333333334], [1.74593904E12, 0.25], [1.74594228E12, 1.2666666666666666], [1.74594006E12, 1.2333333333333334], [1.7459445E12, 1.2666666666666666], [1.74594654E12, 1.1833333333333333], [1.74594348E12, 1.1833333333333333], [1.74594024E12, 1.2833333333333334], [1.7459469E12, 1.1666666666666667], [1.74594126E12, 1.2333333333333334], [1.7459457E12, 1.1666666666666667], [1.74593922E12, 1.2333333333333334], [1.74594144E12, 1.2166666666666666], [1.74594246E12, 1.2166666666666666], [1.74594468E12, 1.2], [1.74594558E12, 1.3666666666666667], [1.74594012E12, 1.1666666666666667], [1.74594234E12, 1.2833333333333334], [1.74594456E12, 1.2833333333333334], [1.74594678E12, 1.2333333333333334], [1.7459391E12, 1.2333333333333334], [1.74594132E12, 1.2333333333333334], [1.74594354E12, 1.1666666666666667], [1.74594576E12, 1.15], [1.74593928E12, 1.25], [1.74594252E12, 1.2666666666666666], [1.7459403E12, 1.2833333333333334], [1.74594474E12, 1.1833333333333333], [1.74594372E12, 1.3], [1.74594696E12, 1.2333333333333334], [1.74594048E12, 1.15], [1.7459415E12, 1.2333333333333334], [1.74594594E12, 1.25], [1.74593976E12, 1.3166666666666667], [1.745943E12, 1.2], [1.74594642E12, 1.2166666666666666], [1.74594522E12, 1.2], [1.74594078E12, 1.25], [1.74594096E12, 1.2666666666666666], [1.74594198E12, 1.2666666666666666], [1.7459442E12, 1.35], [1.74593994E12, 1.2166666666666666], [1.74594318E12, 1.2333333333333334], [1.7459454E12, 1.1833333333333333], [1.74594216E12, 1.2], [1.7459466E12, 1.1833333333333333], [1.74594114E12, 1.2666666666666666], [1.74594438E12, 1.2333333333333334], [1.74594336E12, 1.2333333333333334], [1.74594204E12, 1.25], [1.74594426E12, 1.2833333333333334], [1.74593982E12, 1.3166666666666667], [1.74594324E12, 1.3], [1.74594648E12, 1.2333333333333334], [1.74594E12, 1.2166666666666666], [1.74594102E12, 1.25], [1.74594546E12, 1.2], [1.7459412E12, 1.25], [1.74594222E12, 1.2833333333333334], [1.74594444E12, 1.2666666666666666], [1.74594018E12, 1.2166666666666666], [1.74594342E12, 1.2333333333333334], [1.74594564E12, 1.2333333333333334], [1.74594666E12, 1.2666666666666666], [1.7459424E12, 1.2], [1.74593946E12, 1.25], [1.74594168E12, 1.2666666666666666], [1.7459427E12, 1.2], [1.74594492E12, 1.25], [1.74594066E12, 1.1666666666666667], [1.7459439E12, 1.2], [1.74594612E12, 1.1833333333333333], [1.74594714E12, 0.4], [1.74594288E12, 1.2666666666666666], [1.74594186E12, 1.2333333333333334], [1.7459451E12, 1.2333333333333334], [1.74593964E12, 1.2333333333333334], [1.74594408E12, 1.25], [1.7459463E12, 1.2666666666666666], [1.74594306E12, 1.2333333333333334], [1.74594528E12, 1.1666666666666667], [1.74594084E12, 1.2], [1.74594396E12, 1.3333333333333333], [1.74594072E12, 1.3166666666666667], [1.74594174E12, 1.2333333333333334], [1.7459397E12, 1.1666666666666667], [1.74594192E12, 1.2], [1.74594516E12, 1.3], [1.74594294E12, 1.2666666666666666], [1.74594618E12, 1.2166666666666666], [1.7459409E12, 1.25], [1.74594414E12, 1.2166666666666666], [1.74594312E12, 1.2166666666666666], [1.74594534E12, 1.3], [1.74594636E12, 1.2666666666666666], [1.74593988E12, 1.1833333333333333], [1.7459421E12, 1.2333333333333334], [1.74594432E12, 1.25], [1.74594138E12, 1.2666666666666666], [1.74594462E12, 1.2333333333333334], [1.74593916E12, 1.3], [1.7459436E12, 1.3166666666666667], [1.74594582E12, 1.2333333333333334], [1.74594684E12, 1.1833333333333333], [1.74594036E12, 1.3333333333333333], [1.74594258E12, 1.2166666666666666], [1.7459448E12, 1.1833333333333333], [1.74593934E12, 1.2666666666666666], [1.74594156E12, 1.1833333333333333], [1.74594378E12, 1.2666666666666666], [1.745946E12, 1.2333333333333334], [1.74593952E12, 1.25], [1.74594276E12, 1.1833333333333333], [1.74594054E12, 1.2666666666666666], [1.74594498E12, 1.2833333333333334], [1.74594702E12, 1.2666666666666666]], "isOverall": false, "label": "0", "isController": false}, {"data": [[1.74594042E12, 1.25], [1.74594366E12, 1.2833333333333334], [1.74594588E12, 1.1833333333333333], [1.74594264E12, 1.3166666666666667], [1.74594708E12, 1.2333333333333334], [1.74594162E12, 1.2], [1.74594486E12, 1.1833333333333333], [1.7459394E12, 1.2166666666666666], [1.74594384E12, 1.2], [1.74594606E12, 1.2666666666666666], [1.74594624E12, 1.3333333333333333], [1.7459406E12, 1.2666666666666666], [1.74594282E12, 1.2166666666666666], [1.74594504E12, 1.2166666666666666], [1.74593958E12, 1.1166666666666667], [1.7459418E12, 1.2833333333333334], [1.74594402E12, 1.2666666666666666], [1.74594672E12, 1.2333333333333334], [1.74594108E12, 1.2666666666666666], [1.7459433E12, 1.2333333333333334], [1.74594552E12, 1.2333333333333334], [1.74593904E12, 0.23333333333333334], [1.74594228E12, 1.2666666666666666], [1.74594006E12, 1.2333333333333334], [1.7459445E12, 1.25], [1.74594654E12, 1.2], [1.74594348E12, 1.1833333333333333], [1.74594024E12, 1.3], [1.7459469E12, 1.1666666666666667], [1.74594126E12, 1.2333333333333334], [1.7459457E12, 1.1833333333333333], [1.74593922E12, 1.25], [1.74594144E12, 1.2166666666666666], [1.74594246E12, 1.2333333333333334], [1.74594468E12, 1.2], [1.74594558E12, 1.3666666666666667], [1.74594012E12, 1.1666666666666667], [1.74594234E12, 1.3], [1.74594456E12, 1.3], [1.74594678E12, 1.2333333333333334], [1.7459391E12, 1.25], [1.74594132E12, 1.2166666666666666], [1.74594354E12, 1.1666666666666667], [1.74594576E12, 1.15], [1.74593928E12, 1.2333333333333334], [1.74594252E12, 1.25], [1.7459403E12, 1.2833333333333334], [1.74594474E12, 1.1666666666666667], [1.74594372E12, 1.3], [1.74594696E12, 1.2333333333333334], [1.74594048E12, 1.1333333333333333], [1.7459415E12, 1.2333333333333334], [1.74594594E12, 1.2333333333333334], [1.74593976E12, 1.3166666666666667], [1.745943E12, 1.2166666666666666], [1.74594642E12, 1.2166666666666666], [1.74594522E12, 1.2166666666666666], [1.74594078E12, 1.2666666666666666], [1.74594096E12, 1.2666666666666666], [1.74594198E12, 1.2666666666666666], [1.7459442E12, 1.3333333333333333], [1.74593994E12, 1.2166666666666666], [1.74594318E12, 1.25], [1.7459454E12, 1.2], [1.74594216E12, 1.2166666666666666], [1.7459466E12, 1.1833333333333333], [1.74594114E12, 1.2666666666666666], [1.74594438E12, 1.2166666666666666], [1.74594336E12, 1.2333333333333334], [1.74594204E12, 1.2666666666666666], [1.74594426E12, 1.2833333333333334], [1.74593982E12, 1.3], [1.74594324E12, 1.2833333333333334], [1.74594648E12, 1.2166666666666666], [1.74594E12, 1.2166666666666666], [1.74594102E12, 1.25], [1.74594546E12, 1.2], [1.7459412E12, 1.2666666666666666], [1.74594222E12, 1.2666666666666666], [1.74594444E12, 1.2833333333333334], [1.74594018E12, 1.2], [1.74594342E12, 1.2333333333333334], [1.74594564E12, 1.2166666666666666], [1.74594666E12, 1.2666666666666666], [1.7459424E12, 1.1833333333333333], [1.74593946E12, 1.2666666666666666], [1.74594168E12, 1.2833333333333334], [1.7459427E12, 1.2166666666666666], [1.74594492E12, 1.25], [1.74594066E12, 1.1666666666666667], [1.7459439E12, 1.2166666666666666], [1.74594612E12, 1.2], [1.74594714E12, 0.4166666666666667], [1.74594288E12, 1.2666666666666666], [1.74594186E12, 1.2166666666666666], [1.7459451E12, 1.25], [1.74593964E12, 1.25], [1.74594408E12, 1.25], [1.7459463E12, 1.2833333333333334], [1.74594306E12, 1.2166666666666666], [1.74594528E12, 1.1666666666666667], [1.74594084E12, 1.2], [1.74594396E12, 1.3166666666666667], [1.74594072E12, 1.3], [1.74594174E12, 1.2333333333333334], [1.7459397E12, 1.1666666666666667], [1.74594192E12, 1.2], [1.74594516E12, 1.2833333333333334], [1.74594294E12, 1.25], [1.74594618E12, 1.2166666666666666], [1.7459409E12, 1.25], [1.74594414E12, 1.2333333333333334], [1.74594312E12, 1.2166666666666666], [1.74594534E12, 1.2833333333333334], [1.74594636E12, 1.2666666666666666], [1.74593988E12, 1.2], [1.7459421E12, 1.2166666666666666], [1.74594432E12, 1.2666666666666666], [1.74594138E12, 1.2833333333333334], [1.74594462E12, 1.2333333333333334], [1.74593916E12, 1.2833333333333334], [1.7459436E12, 1.3], [1.74594582E12, 1.2333333333333334], [1.74594684E12, 1.2], [1.74594036E12, 1.3333333333333333], [1.74594258E12, 1.2166666666666666], [1.7459448E12, 1.2], [1.74593934E12, 1.2666666666666666], [1.74594156E12, 1.1833333333333333], [1.74594378E12, 1.2666666666666666], [1.745946E12, 1.25], [1.74593952E12, 1.2333333333333334], [1.74594276E12, 1.1833333333333333], [1.74594054E12, 1.2666666666666666], [1.74594498E12, 1.2833333333333334], [1.74594702E12, 1.25]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74594714E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.74593904E12, "maxY": 1.3666666666666667, "series": [{"data": [[1.74594042E12, 1.25], [1.74594366E12, 1.2833333333333334], [1.74594588E12, 1.1833333333333333], [1.74594264E12, 1.3166666666666667], [1.74594708E12, 1.2333333333333334], [1.74594162E12, 1.2], [1.74594486E12, 1.1833333333333333], [1.7459394E12, 1.2166666666666666], [1.74594384E12, 1.2], [1.74594606E12, 1.2666666666666666], [1.74594624E12, 1.3333333333333333], [1.7459406E12, 1.2666666666666666], [1.74594282E12, 1.2166666666666666], [1.74594504E12, 1.2166666666666666], [1.74593958E12, 1.1166666666666667], [1.7459418E12, 1.2833333333333334], [1.74594402E12, 1.2666666666666666], [1.74594672E12, 1.2333333333333334], [1.74594108E12, 1.2666666666666666], [1.7459433E12, 1.2333333333333334], [1.74594552E12, 1.2333333333333334], [1.74593904E12, 0.23333333333333334], [1.74594228E12, 1.2666666666666666], [1.74594006E12, 1.2333333333333334], [1.7459445E12, 1.25], [1.74594654E12, 1.2], [1.74594348E12, 1.1833333333333333], [1.74594024E12, 1.3], [1.7459469E12, 1.1666666666666667], [1.74594126E12, 1.2333333333333334], [1.7459457E12, 1.1833333333333333], [1.74593922E12, 1.25], [1.74594144E12, 1.2166666666666666], [1.74594246E12, 1.2333333333333334], [1.74594468E12, 1.2], [1.74594558E12, 1.3666666666666667], [1.74594012E12, 1.1666666666666667], [1.74594234E12, 1.3], [1.74594456E12, 1.3], [1.74594678E12, 1.2333333333333334], [1.7459391E12, 1.25], [1.74594132E12, 1.2166666666666666], [1.74594354E12, 1.1666666666666667], [1.74594576E12, 1.15], [1.74593928E12, 1.2333333333333334], [1.74594252E12, 1.25], [1.7459403E12, 1.2833333333333334], [1.74594474E12, 1.1666666666666667], [1.74594372E12, 1.3], [1.74594696E12, 1.2333333333333334], [1.74594048E12, 1.1333333333333333], [1.7459415E12, 1.2333333333333334], [1.74594594E12, 1.2333333333333334], [1.74593976E12, 1.3166666666666667], [1.745943E12, 1.2166666666666666], [1.74594642E12, 1.2166666666666666], [1.74594522E12, 1.2166666666666666], [1.74594078E12, 1.2666666666666666], [1.74594096E12, 1.2666666666666666], [1.74594198E12, 1.2666666666666666], [1.7459442E12, 1.3333333333333333], [1.74593994E12, 1.2166666666666666], [1.74594318E12, 1.25], [1.7459454E12, 1.2], [1.74594216E12, 1.2166666666666666], [1.7459466E12, 1.1833333333333333], [1.74594114E12, 1.2666666666666666], [1.74594438E12, 1.2166666666666666], [1.74594336E12, 1.2333333333333334], [1.74594204E12, 1.2666666666666666], [1.74594426E12, 1.2833333333333334], [1.74593982E12, 1.3], [1.74594324E12, 1.2833333333333334], [1.74594648E12, 1.2166666666666666], [1.74594E12, 1.2166666666666666], [1.74594102E12, 1.25], [1.74594546E12, 1.2], [1.7459412E12, 1.2666666666666666], [1.74594222E12, 1.2666666666666666], [1.74594444E12, 1.2833333333333334], [1.74594018E12, 1.2], [1.74594342E12, 1.2333333333333334], [1.74594564E12, 1.2166666666666666], [1.74594666E12, 1.2666666666666666], [1.7459424E12, 1.1833333333333333], [1.74593946E12, 1.2666666666666666], [1.74594168E12, 1.2833333333333334], [1.7459427E12, 1.2166666666666666], [1.74594492E12, 1.25], [1.74594066E12, 1.1666666666666667], [1.7459439E12, 1.2166666666666666], [1.74594612E12, 1.2], [1.74594714E12, 0.4166666666666667], [1.74594288E12, 1.2666666666666666], [1.74594186E12, 1.2166666666666666], [1.7459451E12, 1.25], [1.74593964E12, 1.25], [1.74594408E12, 1.25], [1.7459463E12, 1.2833333333333334], [1.74594306E12, 1.2166666666666666], [1.74594528E12, 1.1666666666666667], [1.74594084E12, 1.2], [1.74594396E12, 1.3166666666666667], [1.74594072E12, 1.3], [1.74594174E12, 1.2333333333333334], [1.7459397E12, 1.1666666666666667], [1.74594192E12, 1.2], [1.74594516E12, 1.2833333333333334], [1.74594294E12, 1.25], [1.74594618E12, 1.2166666666666666], [1.7459409E12, 1.25], [1.74594414E12, 1.2333333333333334], [1.74594312E12, 1.2166666666666666], [1.74594534E12, 1.2833333333333334], [1.74594636E12, 1.2666666666666666], [1.74593988E12, 1.2], [1.7459421E12, 1.2166666666666666], [1.74594432E12, 1.2666666666666666], [1.74594138E12, 1.2833333333333334], [1.74594462E12, 1.2333333333333334], [1.74593916E12, 1.2833333333333334], [1.7459436E12, 1.3], [1.74594582E12, 1.2333333333333334], [1.74594684E12, 1.2], [1.74594036E12, 1.3333333333333333], [1.74594258E12, 1.2166666666666666], [1.7459448E12, 1.2], [1.74593934E12, 1.2666666666666666], [1.74594156E12, 1.1833333333333333], [1.74594378E12, 1.2666666666666666], [1.745946E12, 1.25], [1.74593952E12, 1.2333333333333334], [1.74594276E12, 1.1833333333333333], [1.74594054E12, 1.2666666666666666], [1.74594498E12, 1.2833333333333334], [1.74594702E12, 1.25]], "isOverall": false, "label": "HTTP Request - enroll-success", "isController": false}, {"data": [[1.74594042E12, 1.25], [1.74594366E12, 1.2833333333333334], [1.74594588E12, 1.1833333333333333], [1.74594264E12, 1.3166666666666667], [1.74594708E12, 1.2333333333333334], [1.74594162E12, 1.2166666666666666], [1.74594486E12, 1.1833333333333333], [1.7459394E12, 1.2166666666666666], [1.74594384E12, 1.2], [1.74594606E12, 1.2833333333333334], [1.74594624E12, 1.35], [1.7459406E12, 1.25], [1.74594282E12, 1.2166666666666666], [1.74594504E12, 1.2333333333333334], [1.74593958E12, 1.1166666666666667], [1.7459418E12, 1.2833333333333334], [1.74594402E12, 1.2666666666666666], [1.74594672E12, 1.25], [1.74594108E12, 1.2833333333333334], [1.7459433E12, 1.2166666666666666], [1.74594552E12, 1.2333333333333334], [1.74593904E12, 0.25], [1.74594228E12, 1.2666666666666666], [1.74594006E12, 1.2333333333333334], [1.7459445E12, 1.2666666666666666], [1.74594654E12, 1.1833333333333333], [1.74594348E12, 1.1833333333333333], [1.74594024E12, 1.2833333333333334], [1.7459469E12, 1.1666666666666667], [1.74594126E12, 1.2333333333333334], [1.7459457E12, 1.1666666666666667], [1.74593922E12, 1.2333333333333334], [1.74594144E12, 1.2166666666666666], [1.74594246E12, 1.2166666666666666], [1.74594468E12, 1.2], [1.74594558E12, 1.3666666666666667], [1.74594012E12, 1.1666666666666667], [1.74594234E12, 1.2833333333333334], [1.74594456E12, 1.2833333333333334], [1.74594678E12, 1.2333333333333334], [1.7459391E12, 1.2333333333333334], [1.74594132E12, 1.2333333333333334], [1.74594354E12, 1.1666666666666667], [1.74594576E12, 1.15], [1.74593928E12, 1.25], [1.74594252E12, 1.2666666666666666], [1.7459403E12, 1.2833333333333334], [1.74594474E12, 1.1833333333333333], [1.74594372E12, 1.3], [1.74594696E12, 1.2333333333333334], [1.74594048E12, 1.15], [1.7459415E12, 1.2333333333333334], [1.74594594E12, 1.25], [1.74593976E12, 1.3166666666666667], [1.745943E12, 1.2], [1.74594642E12, 1.2166666666666666], [1.74594522E12, 1.2], [1.74594078E12, 1.25], [1.74594096E12, 1.2666666666666666], [1.74594198E12, 1.2666666666666666], [1.7459442E12, 1.35], [1.74593994E12, 1.2166666666666666], [1.74594318E12, 1.2333333333333334], [1.7459454E12, 1.1833333333333333], [1.74594216E12, 1.2], [1.7459466E12, 1.1833333333333333], [1.74594114E12, 1.2666666666666666], [1.74594438E12, 1.2333333333333334], [1.74594336E12, 1.2333333333333334], [1.74594204E12, 1.25], [1.74594426E12, 1.2833333333333334], [1.74593982E12, 1.3166666666666667], [1.74594324E12, 1.3], [1.74594648E12, 1.2333333333333334], [1.74594E12, 1.2166666666666666], [1.74594102E12, 1.25], [1.74594546E12, 1.2], [1.7459412E12, 1.25], [1.74594222E12, 1.2833333333333334], [1.74594444E12, 1.2666666666666666], [1.74594018E12, 1.2166666666666666], [1.74594342E12, 1.2333333333333334], [1.74594564E12, 1.2333333333333334], [1.74594666E12, 1.2666666666666666], [1.7459424E12, 1.2], [1.74593946E12, 1.25], [1.74594168E12, 1.2666666666666666], [1.7459427E12, 1.2], [1.74594492E12, 1.25], [1.74594066E12, 1.1666666666666667], [1.7459439E12, 1.2], [1.74594612E12, 1.1833333333333333], [1.74594714E12, 0.4], [1.74594288E12, 1.2666666666666666], [1.74594186E12, 1.2333333333333334], [1.7459451E12, 1.2333333333333334], [1.74593964E12, 1.2333333333333334], [1.74594408E12, 1.25], [1.7459463E12, 1.2666666666666666], [1.74594306E12, 1.2333333333333334], [1.74594528E12, 1.1666666666666667], [1.74594084E12, 1.2], [1.74594396E12, 1.3333333333333333], [1.74594072E12, 1.3166666666666667], [1.74594174E12, 1.2333333333333334], [1.7459397E12, 1.1666666666666667], [1.74594192E12, 1.2], [1.74594516E12, 1.3], [1.74594294E12, 1.2666666666666666], [1.74594618E12, 1.2166666666666666], [1.7459409E12, 1.25], [1.74594414E12, 1.2166666666666666], [1.74594312E12, 1.2166666666666666], [1.74594534E12, 1.3], [1.74594636E12, 1.2666666666666666], [1.74593988E12, 1.1833333333333333], [1.7459421E12, 1.2333333333333334], [1.74594432E12, 1.25], [1.74594138E12, 1.2666666666666666], [1.74594462E12, 1.2333333333333334], [1.74593916E12, 1.3], [1.7459436E12, 1.3166666666666667], [1.74594582E12, 1.2333333333333334], [1.74594684E12, 1.1833333333333333], [1.74594036E12, 1.3333333333333333], [1.74594258E12, 1.2166666666666666], [1.7459448E12, 1.1833333333333333], [1.74593934E12, 1.2666666666666666], [1.74594156E12, 1.1833333333333333], [1.74594378E12, 1.2666666666666666], [1.745946E12, 1.2333333333333334], [1.74593952E12, 1.25], [1.74594276E12, 1.1833333333333333], [1.74594054E12, 1.2666666666666666], [1.74594498E12, 1.2833333333333334], [1.74594702E12, 1.2666666666666666]], "isOverall": false, "label": "Create CSR-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74594714E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.48333333333333334, "minX": 1.74593904E12, "maxY": 2.7333333333333334, "series": [{"data": [[1.74594042E12, 2.5], [1.74594366E12, 2.566666666666667], [1.74594588E12, 2.3666666666666667], [1.74594264E12, 2.6333333333333333], [1.74594708E12, 2.466666666666667], [1.74594162E12, 2.4166666666666665], [1.74594486E12, 2.3666666666666667], [1.7459394E12, 2.433333333333333], [1.74594384E12, 2.4], [1.74594606E12, 2.55], [1.74594624E12, 2.683333333333333], [1.7459406E12, 2.5166666666666666], [1.74594282E12, 2.433333333333333], [1.74594504E12, 2.45], [1.74593958E12, 2.2333333333333334], [1.7459418E12, 2.566666666666667], [1.74594402E12, 2.533333333333333], [1.74594672E12, 2.4833333333333334], [1.74594108E12, 2.55], [1.7459433E12, 2.45], [1.74594552E12, 2.466666666666667], [1.74593904E12, 0.48333333333333334], [1.74594228E12, 2.533333333333333], [1.74594006E12, 2.466666666666667], [1.7459445E12, 2.5166666666666666], [1.74594654E12, 2.3833333333333333], [1.74594348E12, 2.3666666666666667], [1.74594024E12, 2.5833333333333335], [1.7459469E12, 2.3333333333333335], [1.74594126E12, 2.466666666666667], [1.7459457E12, 2.35], [1.74593922E12, 2.4833333333333334], [1.74594144E12, 2.433333333333333], [1.74594246E12, 2.45], [1.74594468E12, 2.4], [1.74594558E12, 2.7333333333333334], [1.74594012E12, 2.3333333333333335], [1.74594234E12, 2.5833333333333335], [1.74594456E12, 2.5833333333333335], [1.74594678E12, 2.466666666666667], [1.7459391E12, 2.4833333333333334], [1.74594132E12, 2.45], [1.74594354E12, 2.3333333333333335], [1.74594576E12, 2.3], [1.74593928E12, 2.4833333333333334], [1.74594252E12, 2.5166666666666666], [1.7459403E12, 2.566666666666667], [1.74594474E12, 2.35], [1.74594372E12, 2.6], [1.74594696E12, 2.466666666666667], [1.74594048E12, 2.283333333333333], [1.7459415E12, 2.466666666666667], [1.74594594E12, 2.4833333333333334], [1.74593976E12, 2.6333333333333333], [1.745943E12, 2.4166666666666665], [1.74594642E12, 2.433333333333333], [1.74594522E12, 2.4166666666666665], [1.74594078E12, 2.5166666666666666], [1.74594096E12, 2.533333333333333], [1.74594198E12, 2.533333333333333], [1.7459442E12, 2.683333333333333], [1.74593994E12, 2.433333333333333], [1.74594318E12, 2.4833333333333334], [1.7459454E12, 2.3833333333333333], [1.74594216E12, 2.4166666666666665], [1.7459466E12, 2.3666666666666667], [1.74594114E12, 2.533333333333333], [1.74594438E12, 2.45], [1.74594336E12, 2.466666666666667], [1.74594204E12, 2.5166666666666666], [1.74594426E12, 2.566666666666667], [1.74593982E12, 2.6166666666666667], [1.74594324E12, 2.5833333333333335], [1.74594648E12, 2.45], [1.74594E12, 2.433333333333333], [1.74594102E12, 2.5], [1.74594546E12, 2.4], [1.7459412E12, 2.5166666666666666], [1.74594222E12, 2.55], [1.74594444E12, 2.55], [1.74594018E12, 2.4166666666666665], [1.74594342E12, 2.466666666666667], [1.74594564E12, 2.45], [1.74594666E12, 2.533333333333333], [1.7459424E12, 2.3833333333333333], [1.74593946E12, 2.5166666666666666], [1.74594168E12, 2.55], [1.7459427E12, 2.4166666666666665], [1.74594492E12, 2.5], [1.74594066E12, 2.3333333333333335], [1.7459439E12, 2.4166666666666665], [1.74594612E12, 2.3833333333333333], [1.74594714E12, 0.8166666666666667], [1.74594288E12, 2.533333333333333], [1.74594186E12, 2.45], [1.7459451E12, 2.4833333333333334], [1.74593964E12, 2.4833333333333334], [1.74594408E12, 2.5], [1.7459463E12, 2.55], [1.74594306E12, 2.45], [1.74594528E12, 2.3333333333333335], [1.74594084E12, 2.4], [1.74594396E12, 2.65], [1.74594072E12, 2.6166666666666667], [1.74594174E12, 2.466666666666667], [1.7459397E12, 2.3333333333333335], [1.74594192E12, 2.4], [1.74594516E12, 2.5833333333333335], [1.74594294E12, 2.5166666666666666], [1.74594618E12, 2.433333333333333], [1.7459409E12, 2.5], [1.74594414E12, 2.45], [1.74594312E12, 2.433333333333333], [1.74594534E12, 2.5833333333333335], [1.74594636E12, 2.533333333333333], [1.74593988E12, 2.3833333333333333], [1.7459421E12, 2.45], [1.74594432E12, 2.5166666666666666], [1.74594138E12, 2.55], [1.74594462E12, 2.466666666666667], [1.74593916E12, 2.5833333333333335], [1.7459436E12, 2.6166666666666667], [1.74594582E12, 2.466666666666667], [1.74594684E12, 2.3833333333333333], [1.74594036E12, 2.6666666666666665], [1.74594258E12, 2.433333333333333], [1.7459448E12, 2.3833333333333333], [1.74593934E12, 2.533333333333333], [1.74594156E12, 2.3666666666666667], [1.74594378E12, 2.533333333333333], [1.745946E12, 2.4833333333333334], [1.74593952E12, 2.4833333333333334], [1.74594276E12, 2.3666666666666667], [1.74594054E12, 2.533333333333333], [1.74594498E12, 2.566666666666667], [1.74594702E12, 2.5166666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74594714E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

